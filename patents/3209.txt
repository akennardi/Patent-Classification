                                      ABSTRACT
This invention relates to the prefetching of content items, for example, prefetching of
videos, to make the content items accessible from a local data store (118) of the mobile
device (112). A processor (114) determines for each of the multiple content items a
benefit value associated with an access time. The processor (114) also determines for
each of the multiple content items an estimated prefetching cost associated with a
prefetching time. Then, the processor (114) selects one of the multiple content items
for downloading at the associated prefetching time based on the benefit values and the
prefetching cost at the prefetching time. This way, the prefetching can be managed
such that the most useful content item which the user will likely access soon are
downloaded while at the same time minimising the cost.

  WO 2013/059864                                     PCT/AU2012/001296
                            1/5
                         142o10              132       123   6
              news                      Wi
                                122     LTE              dat
                   71-  144
                       146 18       124
                                              112          1
                       <128                         13
       Fig.11
                                         202
                                                 13
         112
Fig. 2

    WO 2013/059864                                                            PCT/AU2012/001296
          "Mobile content delivery system with recommendation-based pre-fetching"
      Cross-Reference to Related Aplications
      The present application claims priority from Australian Provisional Patent Application
      No 2011904383 filed on 24 October 2011, the content of which is incorporated herein
  5   by reference.
      Technical Field
      This invention relates to the prefetching of content items, for example, prefetching of
      videos onto a mobile device. In particular, this invention relates but is not limited to a
 10   computer implemented method, software and system for prefetching of content items.
      Background Art
      While data rates in wireless networks are increasing, the maximum possible data rate is
     not always available t6 a user of a mobile device, such as a smart phone. This
 15  reduction in data rate may be due to high speed of the user, objects between the device
      and a base station, reflections off buildings or a large number of users served by the
      same base station.
     As a result, it cannot be guaranteed that content items which require a high data rate,
20    such as video live streams, are loaded quickly enough to allow the user to access the
     video shortly after the user has selected the video. Such a delayed start of the video
     causes user frustration and abandoning of the service providing the content, Some
     content providers choose to not at all offer their content to mobile devices instead of
     risking such user frustration.
25
     Additionally, most mobile networks have spare off-peak capacity and network
     operators would increase capital efficiency by using this spare capacity. A solution to
     both problems is to prefetch content items and store them on the mobile device.
     However, managing the prefetching of content items is difficult since typically more
30   content items are available than can reasonably be downloaded.
     Any discussion of documents, acts, materials, devices, articles or the like which has
     been included in the present specification is not to be taken as an admission that any or
     all of these matters form part of the prior art base or were common general knowledge
35   in the field relevant to the present disclosure as it existed before the priority date of
     each claim of this application.

     WO 2013/059864                                                             PCT/AU2012/001296
                                                    2
        Throughout this specification the word "comprise", or variations such as "comprises" or
        "comprising", will be understood to imply the inclusion of a stated element, integer or
       step, or group of elements, integers or steps, but not the exclusion of any other element,
   5   integer or step, or group of elements, integers or steps.
       Disclosure of Invention
       In a first aspect there is provided a computer-implemented method for prefetching one
       of multiple content items onto a mobile device to make the content item accessible
 10    from a local data store of the mobile device, the method comprising:
               (a) determining for each of the multiple content items a benefit value associated
       with an access time, the benefit value being based on an estimate of the likelihood of
       that content item to be accessed by a user at the access time;
               (b) determining for each of the multiple content items an estimated prefetching
 15    cost associated with a prefetching time, the prefetching cost indicating the cost to
      download that content item at the prefetching time; and
               (c) selecting one of the multiple content items for downloading at the associated
      prefetching time based on the benefit values for each of the multiple content items and
      the prefetching cost at the prefetching time for each of the multiple content items.
20
      It is an advantage that the content item is selected based on the access time, the benefit
      values and the prefetching cost. As a result, the prefetching can be managed such that
      the most useful content item which the user will likely access soon are downloaded
      while at the same time minimising the cost.
25
      Step (c) may comprise selecting the content item such that a combined measure of cost
      and benefit is optimised.
      Step (a) may comprise determining multiple benefit values for each of the multiple
30    content items, each of the multiple benefit values being associated with one of multiple
      access times.
      The computer-implemented method may further comprise:
              receiving historic network status data including time-based download costs; and
35            determining multiple prefetching times based on the historic network data, each
      prefetching time indicating a prefetching opportunity.

   WO 2013/059864                                                            PCT/AU2012/001296
                                                  3
     The prefetching cost may be based on a network policy.
     Step (b) may further comprise determining multiple prefetching costs for each of the
 5  multiple content items, each of the multiple prefetching costs being associated with one
    of the multiple prefetching times.
    Step (b) may comprise determining an earlier prefetching cost and a later prefetching
    cost for each of the multiple content items, the earlier prefetching cost being associated
10  with an earlier prefetching time and the later prefetching cost being associated with a
    later prefetching time; and
    step (c) may comprise selecting one of the multiple content items such that a first
    content item is selected over a second context item where the first content item has a
    combined measure of benefit and cost above a predetermined threshold associated with
15  an access time before the later prefetching time and the second content item has a
    benefit value above a predetermined threshold associated with an access time after the
    later prefetching time.
    The prefetching cost may be based on a monetary cost. The prefetching cost may be
20  based on an energy cost.
    Step (a) may further comprise:
            receiving feature data including a set of features for describing content items
    and including for each feature of the set of features a feature weight associated with an
25  access time;
            receiving content data, including for each of the multiple content items one or
    more features of the set of features; and
            determining for each of the multiple content items the benefit value based on the
    feature weight for each feature of the set of features.
30
    The computer-implemented method may further comprise:
            receiving for each feature and each context a feature context weight associated
    with that context, the feature context weight indicating how likely a feature is accessed
    by the user in the associated context;

   WO 2013/059864                                                             PCT/AU2012/001296
                                                  4
             receiving for each context a context weight associated with an access time, the
     context weight indicating how likely the context occurs at the associated access time;
     and
             determining for each feature and for each context based on the context weight
 5   and the feature context weight a feature weight associated with an access time, the
     feature weight indicating how likely the user will access content items with that feature
     in each of the contexts.
    The computer-implemented method may further comprise:
10           receiving historic user access data including sensor data associated with access
    times when content items were accessed; and
             determining contexts and context weights based on the sensor data, each of the
    context weights being associated with an access time.
15  The historic user access data may include features of accessed content items and the
    method may further comprise determining based on the received features and the
    determined contexts for each feature and for each context a feature context weight.
    The method may further comprise:
20          receiving features of content items stored on the local data store; and
            reducing the benefit value based on the received features.
    The benefit value may be based on a creation date of the content item.
25  One or more of the multiple content items may be advertisement.
    The computer-implemented method may further comprise downloading the selected
    content item,
30  In a second aspect, there is provided software, that when installed on a computer causes
    the computer to perform the method of any one or more of the preceding claims.
    In a third aspect, there is provided a mobile device for prefetching one of multiple
    content items onto the mobile device to make the content item accessible from a local
35  data store of the mobile device, the mobile device comprising a processor

    WO 2013/059864                                                               PCT/AU2012/001296
                                                     5
              (a) to determine for each of the multiple content items a benefit value associated
      with an access time, the benefit value being based on an estimate of the likelihood of
      that content item to be accessed by a user at the access time;
              (b) to determine for each of the multiple content items an estimated prefetching
  5   cost associated with a prefetching time, the prefetching cost indicating the cost to
      download that content item at the prefetching time; and
             (c) to select one of the multiple content items for downloading at the associated
     prefetching time based on the benefit values for each of the multiple content items and
     the prefetching cost at the prefetching time for each of the multiple content items.
 10
     Optional features described of any aspect, where appropriate, similarly apply to the
     other aspects also described here.
     Brief Description of Drawings
 15  An example will be described with reference to
             Fig. I illustrates a computer system for prefetching of content items.
             Fig. 2 illustrates a typical computer network.
             Fig. 3 illustrates an exemplary data structure of feed,
             Fig. 4 illustrates a computer-implemented method for prefetching one of
20   multiple content items.
             Fig. 5 illustrates a method for determining benefit values.
             Fig, 6 illustrates a method for determining feature weights.
             Fig. 7 illustrates a parameter space spanned by the data from two sensors.
             Fig. 8 illustrates an example schedule of a weekday in the life of a user.
25           Fig, 9 illustrates a graphical user interface of a video application,
     Best Mode for Carrying Out the Invention
     Fig. 1 illustrates a computer system 112 for prefetching of content items. The
     computer system 112 may be a mobile communication device 112, such as a smart
30   phone or tablet computer, comprising a processor 114, a program memory 116 and a
     data memory 118. The computer system 112 further comprises several data ports, such
     as a wireless LAN interface 120 and a wireless telecommunication interface 122, for
     example, an LTE transceiver. Any other wireless interface may also be used in
     addition to or as an alternative to the above interfaces. Examples are 3G, WiMax and
35   Bluetooth.

    WO 2013/059864                                                              PCT/AU2012/001296
                                                    6
      The computer system 112 also comprises a sensor array 123 with a variety of sensors
      for identifying the current context. The sensor array 123 may include a time module, a
      GPS module, an accelerometer, a compass or gyroscope, a light or brightness sensor, a
      noise sensor, a detector of a charging power supply, a battery monitor, a headphone
  5   detector combined with a headphone jack, a thermometer, cellular or WLAN signal
      strength sensor, a sensor to detect nearby Bluetooth devices or any other context sensor.
      The sensor array 123 may also comprise connections to local sensors located on or near
      the user, such as heart-rate monitors embedded in chest straps or clothing, or EEG
      monitors.    Sensor array 123 may further comprise software sensors, such as battery
10    lovol and changing status, a list of installed as well as active applications and used and
      free memory.
      Further, the system may use data from remote sensors, such as the availability of spare
      network capacity in cellular networks to detect opportunities for prefetching over
15    cellular or status information for nearby devices, provided wirelessly. Other sources
      for remote sensors may be users and their devices nearby, or have been in the same
     vicinity some time ago and allowing others, such as friends, or those. willing to
     exchange data, to obtain all, or parts of their sensor streams.
20    Yet, other remote sensor streams may come from services available at a location, such
     as crowd information, or other service updates, such as weather conditions, traffic
     conditions, or train delays or any other information which may affect a user's decision
     on what to do next. Examples of user actions are information about how the user
     interacts with its environment. Examples include which application or service a user
25   interacts and how. For instance, user actions on mobile devices include the URLs of
     web services accessed, and further session information, such as user session length,
     user content consumption behaviour, such as viewing a piece of content partially or
     fully once or multiple times, rewinding, fast forwarding, pausing or stopping a video or
     music clip, and any other interaction with the device or the user interface. For low
30   frequency context data, such as battery level indicator or location information, the data
     itself is used. For higher frequency data, such as accelerometer or sound, time or
     frequency domain metrics are extracted from the raw data for use in context analysis.
     An example of such a metric is the frequency spectrum of the data. These features are
     then stored in data memory 118.
35

    WO 2013/059864                                                             PCT/AU2012/001296
                                                  7
       The computer system 112 further comprises a display port 124 to connect the
      processor 114 with a screen 126 to display content items 128 to user 130. This screen
      may be a touch screen and may therefore provide input means, such that the processor
      114 receives user input through display port 124. In one example, the computer system
  5   also comprises a wire-based interface 132, such as a USB port.
      Software stored on program memory 116 causes the processor 114 to perform the
      method in Fig. 4, that is, the processor selects one of multiple content items for
      downloading as described below.
10
      Fig. 2 illustrates a typical computer network 200 comprising computer system 112,
      such as a tablet computer, a Wifi network 202 and a telecommunications network 204,
      such as an LTE network. The Wifi network 202 and telecommunications network 204
     connect the tablet computer 112 to a content server 206 that is connected to a content
15   database 208. The content database 208 stores content items that may be accessed by
     the user 130 of the tablet computer 112. The content database 208 also stores meta
     data associated with the content items, such as title, author, creator, description,
     popularity and persons who liked the content. Content items may be video files, audio
     files, images, websites, application software or advertisements in the form of audio or
20   video files. Of course, any other type of content item may also be stored on content
     database 208 and files may be provided in stream format. In one example, content
     items are stored on content database 208 as various copies with different parameters,
     such as resolution, frame rate, compression ratio, compression algorithm or operation
     system (iOS/Android). In a different example, the content server 206 creates copies
25   with different parameters from a single master copy "on the fly", that is, when the
     copies are requested. In another example, the content server 206 may be connected to
     multiple databases 208 providing access to content files from different content
     providers.
30   Typically, the user 130 subscribes to a telecommunication service provided by a service
     provider, such as a mobile phone contract, and the service includes data transmission
     over the telecommunications network 204, such as LTE or 3G. Such data transmission
     is continuously available to the user with variable available data rates.
35   Additionally, the user 130 has access to a variety of secondary data services, such as
     Wifi network 202, that are available intermittently. Examples of such secondary data

    WO 2013/059864                                                            PCT/AU2012/001296
                                                  8
      services are public Wifi networks at bars, restaurants, airports or the user's workplace.
      Since these Wifi networks are not managed by a service provider, they are referred to
      as opportunistic Wifi networks.
  5   A different class of Wifi networks are managed Wifi networks which are managed by a
      service provider which may be the same or different to the service provider providing
      the telecommunications service or the provider of the content server 206. In the case of
      managed Wifi networks, the user has an account with the provider of the managed Wifi
      network.
10
     In any case, the computer system 112 accesses the different Wifi networks
     automatically without the user having to select a network or to initiate a search for
     networks. Of course, user settings stored on data memory 118 may determine which
     networks are to be used.
15
     Similar to the computer system 112, the content server 206 comprises a processor,
     program memory and data memory. Software on the program memory causes the
     processor of the content server 206 to perform various methods for providing content to
     the user 130, optimising content delivery and analysing content access by user 130 and
20   other users.
     The description above shows that the networks and data rates available to the user 130
     vary significantly. Instead of beginning to download a content item 128 at the time the
     user 130 accesses the content item 128, the processor 114 predicts when the user 130
25   will access the content item 128 and starts downloading the content item 128 in
     advance. This is referred to as prefetching.
     In the example of Fig. 1, the processor 114 receives four different feeds of
     recommended content items: a sports feed 142, a news feed 144, a finance feed 146 and
30   a social network feed 148, Each feed contains a number of content items, such as
     videos represented in Fig, 1 by adjoining squares. In this example, the user 130 has
     subscribed to the three feeds 142, 144 and 146 with the content provider 206 and as a
     result, the user is likely to select videos from these feeds. For simplicity, "content
     item" is used here as denoting the feature data and other data of the content item but not
35   necessarily the video payload. This means that the processor 114 only receives a small

    WO 2013/059864                                                            PCT/AU2012/001296
                                                   9
      amount of meta-data, such as 1KB of tags and the size of the video, instead of 300MB
      of video payload.
      Fig. 3 illustrates an exemplary data structure of feed 142. In this example, a feed is a
  5   list of content items with features, such as meta data, for each item which describes the
      content item as explained with reference to the content database 208 in Fig. 2.       The
     feed also provides all the relevant information available to the source of the feed, such
     as a content provider or a social network service.        The content server may further
     annotate the feed with extra information not available to the original source of the feed,
10
     The recommendation feed 142 comprises a feed name 302, such as "sport" and a list
     304 of feed items.     Although a list data format is used for clarity here and in other
     examples further below, it is to be understood that more sophisticated database
     structures, such as a MySQL database or any other relational database or a tree or graph
15   structure, may be used to store content items.       The feed could have references to
     external objects such as a URL pointing to the list of actors or other content directed by
     the same director.     The referred information could already be stored locally in the
     device , thus allowing more efficient transfer of the information or it could be on a
     remote server and retrieved only if necessary.
20
     Each feed item may consist of a set of features, such as meta-data describing the feed
     item. The meta-data can be organised as a set of key value pairs, in which values may
     be references to other information, stored locally or remotely. The references create an
     information graph. The features may also consist of key value pairs that are extracted
25   out of the meta data.       The values can be absolute values or references to other
     information, stored locally or remotely. In this example, each feed item has a title 312,
     such as "Champions League Final - highlights", a generation time 314, which indicates
     when the video was recorded or the event has taken place, a comma separated list of
     one or more tags 316, such as "Barcelona, Manchester United", a size 318, such as
30   100MB, a bitrate 320, such as 1.5 Mbit/s and a link 322 to the download location of the
     video, such as http://videoproviderX.com/clfinal_2011.           The feed 142 may also
     contain an image representing a preview or snapshot of the video.
     Referring back to Fig. 1, a fourth feed is the social network feed 148.        Unlike the
35   sports, news and finance feeds 142, 144 and 146, the social network feet 148 is not
     provided by the content provider but by a social network provider.        Since the social

   WO 2013/059864                                                             PCT/AU2012/001296
                                                  10
     network provider does not store the videos, the social network feed 148 is illustrated
     somewhat slimmer than the other feeds 142, 144 and 146. The social network feed 148
     comprises content items which friends or connections in the user's social network have
     accessed or recommended, such as by clicking a "like" link. Of course, different feeds
 5   are also possible, such as a feed from an online store based on products recently
    purchased by the user 130.
    Fig. 4 illustrates a computer-implemented method 400 for prefetching one of multiple
    content items of the feeds onto a mobile device. As a result of the method, the content
10  item can be made accessible from the local data store 1 18 of the mobile device. The
    following description explains the method 400 in relation to videos, but as mentioned
    earlier, other content items may equally be prefetched.
    The method 400 commences by determining 402 for each of the multiple content items
15  a benefit value. This benefit value is associated with an access time and is an estimate
    of the likelihood of that content item is accessed by the user at the access time.
    Fig. 5 illustrates a method for determining these benefit values as performed by
    processor 114. The processor 114 receives 502 feature data which includes a set of
20  features for describing the content items. The set of features may be the names of the
    recommendation feeds, such as "sport" or "news", or tags which are used to tag the
    videos, such as "goals" or "interview".
    The feature data further comprises a feature weight for each feature associated with an
25  access time. The feature weight may be normalised such that all feature weights are
    between zero and one. In one example, the feature data is stored on a data store as an
    SQL database with multiple records. Each record has fields for a feature name, a
    cyclical time and the feature weight, For example, the feature data includes feature
    "news" for cyclical time "morning" with weight 0.95 and for "afternoon with weight
30  0.01. This indicates that the user 130 is much more likely to access news items in the
    morning than in the evening.
    Fig. 6 illustrates a method performed by processor 114 for determining these feature
    weights. The processor receives 602 a context weight for each of multiple contexts in
35  which the user has accessed previous content items. For example, the context weight
    indicates that the user 130 is likely to access "news" items when the user commutes by

    WO 2013/059864                                                           PCT/AU2012/001296
                                                  11
      bus to work in the morning. One particular feed may have a high initial feature weight
      that is set by the network operator or content provider. This weight will then be
      adjusted over time as the user 130 accesses more content items.
  5   In one example, the processor 114 receives sensor data from sensors 123 and
      automatically determines contexts based on the sensor data,
      Fig. 7 illustrates a parameter space 700 spanned by the data from two sensors ci and c2.
      The points in parameter space 700 are samples of historic user access data including
 10  sensor data at times when a content item has been accessed or when another event has
     triggered the capturing of sensor data. In this example, the sensor data is accelerometer
     data and compass data. In different examples, the context parameter is a timestamp, a
     geographical location, such as determined by a GPS receiver integrated into computer
     system 112, LTE and 3G cell identifiers, cyclical time, power state, headphone
15   presence and brightness. The sensor data may also include information that friends of
     the user 130 are in the vicinity of user 130, such as within range of near field
     communication (NFC) or Bluetooth. Of course, any combination of these sensors may
     be used.
20   The parameter space 700 is a two-dimensional space for illustration purposes only and
     it is to be understood that more dimensions are possible. In most cases, the number of
     dimensions is identical with the number of sensors used by the processor 114.
     However, the number of dimensions or the number of features may be reduced to
     decrease computational complexity, such as by Principal Component Analysis of the
25   sensor data or the features.
     In the example of Fig. 7, the processor 114 determines a first context 702 and a second
     context 704 as the centres of respective clusters of sampled sensor data, such as by
     performing a k-means algorithm, K--Nearest Neighbors algorithm or an expectation
30   maximization algorithm. For predicting occurrences of the combinations of features
     Dynamic Bayesian Networks algorithms may be used.            The used algorithm and its
     parameters are adapted to maximize the accuracy of the predictions while minimizing
     the costs.
35   The context collection and analysis service performs the adaptation by taking into
     account all the relevant variables, including but not limited to the capabilities of the

    WO 2013/059864                                                            PCT/AU2012/001296
                                                  12
      device, available context information, available battery, and the utility of accurate
      predictions. These parameters are used to calculate an optimal combination of
      algorithms, parameters and required inputs. This calculation can be performed using for
      example constraint programming.
  5
      The required, inputs are then used to derive the parameters for adapting the context
      collection and preprocessing into metrics. For example, if a user views very little
      content then the utility of having very accurate predictions of when situations in which
      the user will access content will occur would be lower than the cost of predicting the
 10  situations with a very high accuracy. Another example would be a user who consumes
     a lot of content, but does not charge the device often. In this case, the accuracy of the
     prediction would have a very high utility to ensure that the user will have both enough
      content to consume and enough battery to consume the content and the system would
     have enough battery to prefetch the required content before the next time the device is
15   charged.
     One of the embodiments of determining benefit values of content items uses a heuristic
     algorithm, which combines a feature based classification algorithm such as Naive
     Bayesian together with heuristic weightings for different sources for the
20   recommendations and freshness of the content. Naive Bayesian classification treats
     each feature of the metadata associated with the content item, e.g. email of the sender,
     each word in a title, as an independent feature. Then a conditional probability of the
     user viewing or liking the content is calculated as a multiplication of the conditional
     probabilities of the user accessing or liking the content for every single feature,
25
     Feature extraction for the calculation of the conditional probabilities is discussed more
     later and the Naive Bayesian algorithm is discussed more in [1). The weights in the
     algorithm are calculated in a way that favours more personal recommendation feeds
     and disfavours more generic recommendation feeds. For example, recommendations
30   coming from the friends of a user are scored higher than general, non---personalized,
     recommendations from content providers. The basis of the scores is revealed to the user
     in the content viewing interface (42). For example, a "tag cloud" is shown to the user
     with more important features being displayed in larger text. The user can then confirm
     or reject the features used for a recommendation,
35

   WO 2013/059864                                                              PCT/AU2012/001296
                                                   13
     In the case of Naive Bayesian classification, all text in the metadata is broken down
     into individual words with so---called stop words, ie, very short or non---meaningful
     words, removed and each word stemmed to its base form. In addition to features of the
     content, such as title, description and comments text, social connections of the content
 5   to the user can be included in the classification. For example, the social network ID of
     the recommender, IDs of people who commented on the content or liked the content or
     IDs of people featured in the content. After all the features have been extracted, a
     conditional probability of the user viewing or liking the content is calculated as a
     multiplication of the conditional probabilities of the user accessing or liking the content
10   for every single feature. This calculation is described in detail in [1].
     The first context 702 may be the context of the user travelling to work by bus, which
     can be recognized from distinct patterns in the accelerometer samples resulting from a
     combination of vibrations from the bus engine and its tires on a rough road surface.. It.
15   is noted that the processor 114 does not need to determine the real-world environment
     of each cluster, but it is sufficient to store cluster identifiers and boundaries between
    clusters.
    The processor 114 assigns a context identifier to each context and counts the number of
20  times each feature is accessed by the user while in that context. For example, the user
    watches five videos from the news feed that are tagged with "interview" while the user
    travels by bus, The processor 114 then adds five to the count of the features "news"
    and "interview" in context 702. This means that the processor 114 maintains separate
    feature counts for each of the contexts 702 and 704. The processor 114 determines
25  based on the feature count a feature context weight, such as by normalizing the feature
    count to a number between zero and one. The processor 114 repeats these steps to
    determine a feature context weight for each of the one or more features and for each of
    the contexts, such that the feature context weight indicates how likely the user will
    access content items with that feature in each of the contexts.
30
    In one example, the processor 114 counts the number of times each context has
    occurred in a particular cyclical time. This way, the processor 114 creates a histogram
    for each context over the cyclical time. For example, this histogram shows that context
    602 has been encountered for 30 times on a Monday moving but only 3 times during
35  Monday lunchtime. The processor 114 can then determine an expected value, which is
    the time with the highest occurrence of a particular cluster and a standard variation.

    WO 2013/059864                                                            PCT/AU2012/001296
                                                  14
       These values serve as context weights, that is, factors that can be used to augment the
       feature estimation by the context data.
       The feature context weights above are context specific but not access time specific
  5    while the context weights are time specific. Therefore, the processor 114 determines
      feature weights that are associated with an access time by multiplying the context
      weight for that particular access time with the feature context weight. As a result, for
      each possible access time, the processor determines a separate feature weight.
 10   Referring back the method of Fig, 5, the processor 114 then receives 504 content data,
      such as the recommendation feeds of Fig. 1. The content data includes for each of the
      multiple content items, such as videos, one or more features of the set of features. This
      means, the content data includes information that a content item is from a particular
      recommendation feed, or that a content item is tagged with a particular tag.
 15
      The processor 114 then determines 506 for each of the multiple content items the
      benefit value based on the feature weight for each feature of the set of features, In one
      example, the processor 114 determines the benefit value for multiple different access
      times. These benefit values are based on feature weights, which are associated with
20   -multiple different access times as explained earlier.
      For example, the processor 114 receives a video meta-data in the "sport"
      recommendation feed that is tagged with "goal". The processor 114 determines the
      benefit value on Monday morning of that video by receiving the feature weights of the
25    feature "sport" and the feature "goals" for Monday morning. The processor 114 adds
      the two feature weights to determine the combined benefit value of that video.
      In one example, the processor receives features of content items that are already stored
      on the local data store and reduces the benefit value based on the received features.
30    This way, content items with feature that are already downloaded in large numbers are
     not downloaded. For example, if 10 soccer videos are already downloaded, a further
     soccer video will have less benefit to the user and therefore attracts a reduced benefit
     value, such as a reduction of 10% per similar content item.
35   Other examples of algorithms that could be used for scoring the content are NaYve
     Bayesian classification and collaborative filtering.

    WO 2013/059864                                                            PCT/AU2012/001296
                                                  15
      In yet another example, the benefit value is based on a freshness parameter, such as a
      creation date. This may be achieved by associating particular features with a time
      criticality, such that these features only contribute to the benefit value if the content
      item.has a recent creation date, that is, the content is fresh. For example, breaking
  5  news are time critical and not much use when they are three days old. Therefore, the
     tag "breaking news" only contributes positively to the benefit value if the video has
     been created within the last 6 hours. It is noted here that other features, such as a tag
     "United States" since it is news about the United States, may still contribute to the
     benefit value and may ever result in a high benefit value although the content is not
10   fresh. Creation date in this context does not refer to the date the actual file was created
     or the final video data was released but to the date of the event that took place at that
     date to which the content item is related.
     The feature weights may have further scaling factors such as factor determined by a
15   content provider policy. For example, the policy could define a scaling factor for
     promotional content or subscription content, identified by a feature, such as
     "feed=sport".
     The next step of method 400 in Fig. 4 is determining 404 for each of the multiple
20   content items an estimated prefetching cost. It is to be understood that the step of
     determining the prefetching cost may be performed before, after or at the same time as
     the step of determining the benefit values. The prefetching cost is associated with a
     prefetching time and indicates the cost to download that content item at that prefetching
     time. In one example, the prefetching cost is associated with a downloading
25   opportunity.
     A similar learning process as explained with reference to Fig. 7 is applied to determine
     downloading opportunities at prefetching times. The processor 114 receives historic
     network status data of one or more networks. It is noted here that the processor 114
30   may receive the network data before, after or while receiving the historic user access
     data. The historic network data includes time-based download costs, which means that
     the data indicates the time at which a particular cost is to be paid when downloading
     over the network.     This cost may be constant for all times under consideration. The
     networks may have context-based network parameters, which means that the
35   parameters of the networks change with the context the user 130 is in. For example,
     the download speed of a telecommunications network 204 in Fig, 2 depends on the

   WO 2013/059864                                                           PCT/AU2012/001296
                                                16
     location of the user 130 because LTE coverage may be replaced by 30 coverage in
    rural areas. The download speed may also depend on the time of day since many user
    are downloading content items during certain times and thereby reducing the download
    speed.
 5
    As the user 130 travels or as the network parameters change while the user 130 is
    stationary, the processor 114 receives the network data and stores it on data store 118.
    In one example, the processor 114 periodically determines, such as every minute, the
    available networks and the associated network parameters and stores the network data.
10  In a different example, the processor 114 is triggered to receive network parameters by
    external events, such as a change in network parameters.
    Using the network data, the processor 114 trains a model for predicting future network
    parameters and in particular, downloading opportunities. In one example, the processor
15   114 clusters the received context data into clusters and counts the occurrence of these
    clusters for different cyclical times. This way, the processor 114 determines when
    there is a likelihood that a downloading opportunity is present. For each downloading
    opportunity, the processor 114 also determines a prefetching cost. For example, the
    processor 114 determines that free public Wifi is available in cluster 704 and that
20  cluster 704 occurs mainly on Tuesday lunchtime. Therefore the cluster 704 represents
    a downloading opportunity on Tuesday lunchtime with zero cost. The download cost
    via an LTE network may be determined as a monetary value payable by the user, such
    as 0.05 $/MB.
25  The network operator may have a contract with the content provider and therefore, the
    sports feed items can be downloaded over off peak hours of cellular networks. This is
    expressed by a policy specifying a low cost to items with the feature "feed=sport". The
    policy may also prohibit some networks for some features and therefor assign a high
    number to that feature.
30
    When the processor 114 selects a content item for downloading, the processor 114 also
    considers the distribution of download opportunities in the future. This way, if a video
    has a great benefit value associated with a late time, that occurs after two separate
    download opportunities, then this video does not need to be downloaded at the first
35  opportunity but a different video with a possibly smaller benefit value may be

    WO 2013/059864                                                             PCT/AU2012/001296
                                                   17
       downloaded first. However, if there is only one download opportunity, then the video
       with the greater benefit value will be downloaded first.
      For example, the processor 114 has predicted that a particular content item will likely
  5   be accessed in 18 hours and has also predicted that a Wifi network with high download
      speed will be available in 12 hours, Therefore, the processor 114 determines that the
      prefetching opportunity is in 12 hours or that the prefetching opportunity is when the
      user 130 is located at a certain location or within range of a certain Wifi hotspot or LTE
      cell,
 10
      In one example, one of the internal resources to consider is battery state, that is, battery
      is charging or has enough power left to prefetch the content and keep the device usable
      until the time the device is estimated to be charged again. The processor 114 calculates
      the amount of content to prefetch to ensure that the user will have enough content to
 15   consume before the next opportunity for prefetching is likely to occur, This calculation
      takes into account the estimated accuracy of the recommendations, duration of each
      content, estimated time that the user will have to watch the videos, free storage
      capacity, available battery, cost of network bandwidth and the time until next
      prefetching. Additionally, it manages the deletion of old items to make space for new
20    prefetched content. The decision to delete content is made based on, for example, the
      score, age and watched status of the content.
     As a next step of method 400 in Fig. 4 the processor 114 selects 406 one of the multiple
     content items for downloading. The processor 114 accesses the benefit values of the
25   videos, which are associated with an access time, and also accesses the prefetching
     costs at a prefetching time. Therefore, the processor 114 selects the content item based
     on the benefit values for each of the multiple content items and the prefetching cost at
     the prefetching time for each of the multiple content items. In one example, the
     processor 114 determines a combined measure of cost and benefit, such as by
30   subtracting the prefetching cost from the benefit value and selects the content item that
     has the highest combined value. This way, processor 114 optimises the combined
     measure of cost and benefit for the prefetching time.
     It is noted here that the prefetching time may be the current time, such that the
35   processor 114 downloads the selected content item straight away. Alternatively, the
     prefetching time may be in the future.

    WO 2013/059864                                                            PCT/AU2012/001296
                                                   18
      In one example, the processor 114 determines an earlier prefetching cost and a later
      prefetching cost for each of the multiple content items. The earlier prefetching cost is
      associated with an earlier prefetching time and the later prefetching cost is associated
  5   with a later prefetching time. The processor 114 determines a combined measure of
      benefit for first and second content items and compares the two measures to a
      predetermined threshold. This threshold may be a minimum value that the content item
      needs to have in order to be considered for prefetching. In this example, the measure of
      the first content item is above the predetermined threshold associated with an access
 10  time before the later prefetching time, Further, the measure of the second content item
     is above a predetermined threshold associated with an access time after the later
     prefetching time. In this example, the processor 114 determines that the second content
     item does not need to be downloaded at the earlier prefetching time since a later
     prefetching opportunity is expected to come up. Therefore, the processor 114 selects
15   the first content item over the second context item to be downloaded at the first
     prefetching time.
     It is to be understood that "receiving" data also incorporates accessing the data on a
     data store, such as a volatile or non-volatile memory. The processor 114 requests the
20   data and then receives the data as a reply from the data store. In one example, the
     processor 114 receives user access data from a data collector, such as a video viewing
     application. In a different example, the processor 114 accesses historic user access data
     stored on data memory 118. Historic user access data may be received by the processor
     114 in real time, that is, every time the user 130 accesses a content item, the processor
25   is notified. Alternatively, the historic access data may be accumulated on data memory
      118 over a period of time and received by the processor 114 at a later stage. The
     historic user access data may be historic user access data of other users and may be
     received from other devices of the same user. In another example, the historic user
     access may be received from any application that runs on the mobile device, such as a
30   browser, a video application or a third party App.
     The user 130 starts a video viewing application and accesses video 128 to watch the
     video 128, such as by tapping the screen to select the video, To create the historic user
     access data, the video viewing application copies one item from item list 404 in Fig. 4
35   into a list representing the historic user access data. Each time the user accesses a

   WO 2013/059864                                                               PCT/AU2012/001296
                                                 19
    video, a new entry is added to the list representing the historic user access data which
     therefore includes an indication of access of content items,
    The historic user access data further includes an associated access context. The context
 5  in which the user 130 accesses the content item may comprise a variety of parameters
    either individually or in any combination. After the item from list 404 in Fig. 4 is
    copied into the list representing the historic user access data, the processor 114 stores
    the access context associated with the accessed content item. For example, the list
    representing the historic user access comprises separate columns or data fields for each
10  sensor representing the access context. Alternatively, the processor 114 increments the
    count for each feature of the accessed content item for that context.
    In one example, the context is completely defined by the cyclical access time, which
    can be defined, for example, by day of week and hour of day. Cyclical time means that
15  cyclical repetitions are not considered separately. For example, all Mondays are
    considered together as a single context and accordingly, the other days of the week are
    considered as further contexts resulting in seven different contexts. The historic access
    data comprises for each accessed content item one or more features, such as tags, feed
    names and categories.
20
    The period of time for which historic user access data is considered may be the last 20
    days. This means that the processor 114 deletes older user access data. In one
    example, the different weekdays are not considered separately and the processor 114
    counts the number of days each tag is accessed. For example, if a user 130 watches
25  sports on 5 days of the last 20 days, the probability p that the user 130 watches sports at
    any day is p,=5/20=0.25. The processor assumes that this probability stays constant
    over the predicted period of access time, such as for each of the coming 3 days.
    While the processor 114 selects content items for downloading, the processor 114 also
30  selects content items to present to the user such that content items are selected which
    the user is most likely to access in the current context. The processor 114 receives
    current sensor data to determine a current context, that is, a current cluster. The
    processor 114 determines based on the boundaries the cluster in which the current
    sensor data is located and retrieves the cluster identifier for that cluster. In the example
35  of Fig. 7, when the processor 114 receives similarly high accelerometer samples, the
    processor 114 determines that the user 130 is in the first context 702.

    WO 2013/059864                                                             PCT/AU2012/001296
                                                    20
      If the historic access data indicates that the user 130 has been in context 502 for twenty
      times and has accessed news videos for 10 times when being in context 502, the
     probability p that the user accesses a news video when the user 130 is in context 502 is
  5  p=10/2 0=0.5.
     A variety of events may trigger the processor 114 to update the clustering 700. In one
     example, a timer triggers the update, such that the clustering 700 is recomputed
     periodically once a day, for example when the device 112 is charging and idle. In
 10  another example, the update is triggered by a change in context, such as by the
     detection of the battery being charged or by the availability of new content items or the
     availability of data networks. In yet another example, the update is triggered by the
     accuracy of prediction going below a static or dynamic threshold.
15   Each time the processor 114 updates the clustering 500 the historic access data may be
     different, since access data that is older than a predetermined use-by date is deleted and
     new, recent access data is available. Therefore, the clustering 500 adapts to a change in
     user behaviour. Alternatively, new data can be given a larger importance than older
     data when calculating predictions. Further, instead of storing the old data for a window
20   of time, by using online learning as opposed to batch learning, the old raw data may not
     need to be stored, only the parameters of the learning model, which are updated every
     time new data is added to the model.
     In one example, the processor 114 determines the clustering 700 for each cyclical time
25   separately, which means that one clustering 700 is stored in data store 118 for each of
     Monday morning, Monday lunchtime, Monday afternoon, Monday night, Tuesday
     morning, and so on. As a result, the processor 114 can determine a feature weight
     associated with an access time, such as a probability pj(t) that user 130 accesses
     content with feature i at cyclical time tk. The probabilities may be determined using a
30   neural network or a support vector machine,
     The processor may then determine an expected value to the user as
     e,(tk) = v, P,(k) size, where v, is a value to the user or service provider and is provided
     as a policy, pushed to the client from the service provider. Prefetching policies are a
35   set of rules which determine what content should be prefetched, in which networks or
     which parts of networks (e.g. cells) and at what times. Prefetching policies can be

    WO 2013/059864                                                            PCT/AU2012/001296
                                                   21
      defined or set, for instance, by the user, the network operator, content providers,
      application providers, corporate IT departments, and many more. The prefetching
      policies can be rules created on the device, preloaded at times of manufacturing, sales,
      or service provisioning. Alternatively, the policies can be pushed or pulled onto the
  5   device over the network or the policies can be stored on the network, so that the mobile
      device polls the rules every time a prefetching decision is made.
     The value to the user v, may depend on a number of factors including the source of the
     content, its size and quality. It may also be used to create a preference for promotional
 10  or subscription content. The size is provided with the recommendations as described
     earlier, In another example, the expected value does not scale linearly with the size.
     Instead, the value to the user encompasses this implicitly, such as a I hour clip could be
     30% more valuable if watched compared to a 30 minute clip.
 15  The processor 144 adjusts the expected value by an adjustment factor al(n), which is
     based on how many other similar videos (n) there are. In one example, the user
     already has 10 soccer videos and therefore, the adjustment factor has a value of 0.65.
     The adjusted value is then a (tA)     e (1k )a, (n,),
20   The processor 114 further determines a download cost c,(t) for downloading content
     item i at time tk based on the available download opportunities. In one example, a cost
     per MB is known in from of a network policy, such as 0.85 $/MB and the download
     cost is determined by multiplying the cost per MB by the size of the content item.
     Freely accessible Wifi networks are assigned a cost of 0 $/MB.
25
     In another example, the cost has multiple contributing factors as described earlier. The
     cost would then be calculated using a weighted sum of monetary, energy costs and
     opportunity costs. Further, the energy cost for the mobile would depend on the
     charging state and the battery level of the device.
30
                                  C(I,t) c(I,t) + c, (i, t) + c, (i, t)
     Where cm is the monetary cost, ce energy cost, which would be 0, if charging at time t,
     and correlate with the inverse of the battery level at time t, e.g. c, = 2, if battery level
35   =75% and c, =50, if battery level = 10%. c, is opportunity cost, which is 0 if device is

    WO 2013/059864                                                           PCT/AU2012/001296
                                                 22
      idle (user not active) and otherwise depends on app the user is using, i.e. car game, 0,
      streaming a video, 10.
      The processor 114 determines the cost based on a prediction of download opportunities
  5   in the future. The cost may be defined in a static policy defined on a per network
      access technology and per operator basis. It also may be queried over the network. The
      cost may be purely monetary or may take into account also the battery cost and impact
      on other applications, which would have to share the bandwidth.
 10   The processor 114 then subtracts the cost from the adjusted value to derive at a final
      prediction value.
      For example, a soccer game video will have adjusted expected value of
      as,(tk) =v, *p,(tk)*a,(n,) =100*0.65*0.65*50 =2112.5           and      goal      video
 15   100*0.65*0.45 = 29.25.
     The most expected value with minimal cost is gained by downloading the more time
     dependent last night's soccer game today:
      ai(today) -c,(today) = 100*0.65-0.85 =65 -0.85 = 64.15
20   and the soccer goal video tomorrow:
     250* 0.45 - 0.85=1 12.5-0.85-1 11.65,
     since it has the same expected value tomorrow afternoon.
     Examine
25   Fig. 8 illustrates an example schedule 800 of a weekday in the life of user 130. The
     user 130 wakes up at 7am, leaves home 802 at 8 am, and commutes for 45 minutes by
     bus 804 to office 806. User 130 visits the cafeteria 808 at 8:50am for 10 minutes and
     walks to the office 806. User 130 stays at office 806 from 9am to 5am. Takes bus 810
     at 5:05, which takes 45 minutes back to home 802.
30
     At home 802 no WiFi is available but operator LTE network 204, such as a 4G cellular
     network, The LTE network 204 corresponds to telecommunications network 204 in
     Fig. 2. Typically, the LTE network 204 has a light load during night, heavy load in
     evening and moderate load in morning. This load variation is represented by the step
35   like shape of the LTE network 204 in Fig. 8. The prefetching provider, that is, the
     provider of content server 206 in Fig. 2, has an agreement with the operator of the LTE

   WO 2013/059864                                                               PCT/AU2012/001296
                                                 23
    network 204, that the LTE network 204 can be used for prefetching content, whenever
     and wherever the LTE network 204 has spare capacity, without billing the user 130.
    Instead, the prefetching service provider gets charged for the downloads, such as total
    size or number of prefetched content items, and the rate or price depends on the load of
 5  the LTE network 204 when the content items are downloaded,                     As a result,
    downloading content items during heavy load periods is more expensive than
    downloading the content items during light load periods.
    During commute in bus 804 or 810 only the LTE network 204 is available. In some
10  scenarios, the LTE network 204 may even change to a slower 3G network if parts of
    the journey are not covered by the LTE network 204.
    At cafeteria 808 an operator managed WiFi network 822 is available while at office
    806 an opportunistic WiFi network 824, such as a corporate network is available.
15
    The processor 114 of computer system 112 in Fig. 1 uses the following context to
    detect and predict prefetching opportunities: LTE and 3G cell identifiers, cyclical time,
    power state, headphone presence and brightness, The processor 114 uses these context
    parameters to detect the situation the user is in and to predict the situations the user will
20  likely be in.
    The user 130 watches recent financial news 842 and interviews 844 in the morning on
    the bus for the duration of the ride. The content of news 842 comes from a subscription
    service, while the interviews 844 come from a free content service. The provider of the
25  prefetching service has an agreement with the news provider to deliver these to the user
    130 and the prefetching service provider gets paid for content being watched by the
    user.
    User 130 watches and shares entertaining short video clips 846 with colleagues in
30  cafeteria before work. These videos come from a popular video sharing website, such
    as YouTube.
    On the commute back home on bus 810, user 130 watches sports videos 850 and 852 to
    relax after day at work. These videos come from a sports content subscription service,
35  The provider of the prefetching service has an agreement with the sports content

   WO 2013/059864                                                            PCT/AU2012/001296
                                                  24
    provider to deliver these to the user and the prefetching service provider gets paid for
     content being watched by the user.
    In one example, the processor 114 of computer system 112 does not learn the topics,
 5  such as tags, of these content items, but only that the content items are of distinct types
    which the user views in different situations. 'type of content' may be defined by any
    combination of content metadata, such as rcccncy, duration, content description,
    publisher, social commentary, and characteristics of those people in a social network
    who have shared the content.
10
    Processor 114 learns the user's 130 regular access patterns of content items, that is
    what content the user prefers in different, regularly occurring contexts or situations.
    The prefetching of content item is triggered by download opportunities,
15  At night, when the user 130 is at home 802, the LTE network 204 has nearly no traffic.
    The spare capacity in the LTE network 204 is detected by the network 204, which
    sends a message including an indication of the spare capacity as network status data to
    the mobile device 112 of the user,
20  The mobile device 112 receives the-message including the network status data, wakes
    up the processor 114 performing the prefetching service.         The processor 114 then
    downloads the content identified by the scoring service for the predicted context of the
    morning.
25  Based on the cyclical time, (4 am Tuesday) and LTE cell id, the processor 114 predicts
    that the user will be in a situation in which he is most likely to consume content from
    recommendation feeds for financial news, interview and entertaining short videos,
    before better connectivity is available for prefetching content, In other words, the
    situation is labelled in terms of the user content consumption preferences,
30
    The system performs the prediction by analyzing the frequencies of situations in which
    the user consumes content in terms of cyclical time, This analysis reveals that the user
    consumes videos with a probability of 80% every Tuesday morning before noon.
    Further, the analysis finds that the user consumes on the average 10 minutes of news,
35  15 minutes of interviews and 5 minutes of entertaining videos.

    WO 2013/059864                                                            PCT/AU2012/001296
                                                  25
      As a second step, the system analyses the frequency of availability of prefetching
      opportunities on Tuesday mornings. This analysis shows that 90% of the time there are
      no prefetching opportunities before the content is consumed. These two analyses are
      combined to make a decision that enough content from news, interview, and
  5   entertainment feeds should be downloaded to offer the user different options to choose
      from.
      In one example, the received network status data includes a network policy for the
      service, which specifies that only the subscription service news videos can be delivered
 10   over LTE network 204, The system 112 does not download interviews from the free
     content sharing service for the commute or short entertainment videos for the cafeteria
     visit over LTE network 204, since delivering these would not provide revenue to the
     prefetching service provider, in spite of the provider still needing to pay for the cost of
     delivering the content to the LTE operator. In contrast, the prefetching service provider
15   does get paid by the content provider for delivering the subscription content.
     Fig. 9 illustrates a graphical user interface 900 of a video application displayed on
     screen 126. In addition to being used for prefetching, the content ranking mechanism is
     used also in the user interface to show the most appropriate content to the user. The
20   user interface 900 comprises a time of day 902 and a search input field 904. Most
     importantly, the user interface 900 comprises a list of content items 906 that are most
     likely to be accessed by user 130 in the current context, such as time of day or situation.
     Basic information is displayed for each item along with the thumbnail for the video.
25   The scope of the basic information is dependent on the screen size. For example for a
     mobile phone, only the title and an icon for the person who posted the content would be
     displayed. On the other hand, on a tablet computer, the screen size would allow
     displaying additional information, such as likes, comments or reviews. A user can
     select to directly view a video from the list or to view additional information about the
30   video, such as comments or likes on a mobile phone which could not be displayed on
     the list due to screen size limitations.
     When the user launches the video application in the bus 504, the system detects the
     situation based on a combination of time of day, day of week, location and user using
35   headphones as a situation where the user prefers to view news and accordingly displays
     fresh news related videos 942 and 944 prominently as the topmost items on the video

   WO 2013/059864                                                            PCT/AU2012/001296
                                                26
    preview screen. The prediction is made possible by the system 112 recording the video
    playback actions of the user in relation to the context data and training a model based
    on this data. The model gives scores or probabilities to the user viewing a video in a
    certain context. The model gives a probability of 80% that the user will view a news
 5  video and a probability of 65% that he will view an interview video.
    The probabilities may also refer to a cluster of content that could mostly be labelled as
     'News' or 'Comedy'.
10  The system 112 displays on screen 126 interviews 944 close to the top of the screen
     126 along with the news 942 due to their slightly lower viewing probability. Relevant
    news items 942 and interviews 944 are recognized from features of the videos that have
    been present in videos that the user has viewed completely, liked or shared with friends
    before. These features are individual words and combinations of words derived from
15  titles and textual descriptions of the videos, and also the sources of the video
    recommendations.        The features are stored as key-value pairs, e.g. author:joe,
    tag:soccer, tag:goal, source:sports. The values can also be references, such as URLs
    pointing to other information e.g. rdf://foo.bar/actors/Elizabeth Taylor. This makes it
    possible for the features to be represented as an information graph with links between
20  features. For example, videos coming from a political blogger's social network stream
    that the user has subscribed to and liked videos from in the past would be ranked
    highly.
    The system 112 recognizes the prefetch opportunity using the managed WiFi network
25  in the cafeteria 808 before work. It predicts that the user will not be consuming content
    in the near future before getting access to the lower cost corporate network 824, and
    does not prefetch any content using the managed WiFi network 822. This is predicted
    similarly as explained above.
30  The system also recognizes the situation in the cafeteria 808 from the context data, such
    as cell id, cyclical time and headphones not on, and predicts that the user will want to
    view a video of short duration and prefers more entertaining content that can be easily
    shared with friends with a probability of 65%.          These kinds of videos are then
    recommended to the user at the top of the preview screen. However, as the probability
35  of the user viewing these kinds of videos is only moderately high, the system will also

   WO 2013/059864                                                          PCT/AU2012/001296
                                                 27
    recommend other types of videos of short duration, such as news and sports because
    short duration of video is more important than topic.
    In the office 806, the system 112 detects the office WiFi 822 and uses the prefetching
 5  opportunity to download sports content 850 and 852 for the afternoon commute 810.
    The system recognizes using cyclical time as context, that the next day is a weekday
    and predicts that the user will commute 804 to work 806 with a high probability and
    visit the cafeteria 808 with a medium probability. Due to the low cost of the office
    network 822 and availability of A/C power the system 112 then prefetches interview
10  content for the next day's commute 804 and entertaining and non timely short videos
    846 for the cafeteria 808, which can also be viewed the following days, if the user 130
    does not visit the cafeteria 808 the next day.
    On the commute 810 back home 802, the system 112 recognizes- the situation from the
15  context data (cell id, cyclical time and headphones on) and predicts that the user will
    want to view videos of sports with a probability of 73%. Sports videos are then
    suggested to the user and displayed prominently in the video preview screen at the top
    of the list. The recommendations are a mix of prefetched videos and real time sports
    available for streaming.
20
    It will be appreciated by persons skilled in the art that numerous variations and/or
    modifications may be made to the specific embodiments without departing from the
    scope as defined in the claims.
25  It should be understood that the techniques of the present disclosure might be
    implemented using a variety of technologies. For example, the methods described
    herein may be implemented by a series of computer executable instructions residing on
    a suitable computer readable medium. Suitable computer readable media may include
    volatile (e.g. RAM) and/or non-volatile (e.g. ROM, disk) memory, carrier waves and
30  transmission media. Exemplary carrier waves may take the form of electrical,
    electromagnetic or optical signals conveying digital data steams along a local network
    or a publically accessible network such as the intemet.
    It should also be understood that, unless specifically stated otherwise as apparent from
35  the following discussion, it is appreciated that throughout the description, discussions
    utilizing terms such as "estimating" or "processing" or "computing" or "calculating",

   WO 2013/059864                                                         PCT/AU2012/001296
                                                28
      'optimizing" or "determining" or "displaying" or "maximising" or the like, refer to the
     action and processes of a computer system, or similar electronic computing device, that
     processes and transforms data represented as physical (electronic) quantities within the
     computer system's registers and memories into other data similarly represented as
 5   physical quantities within the computer system memories or registers or other such
     information storage, transmission or display devices.
     References
     [1] Naive Bayesian Classification of Structured Data, Peter A. Flach and Nicolas
10   Lachiche, in Journal of Machine Learning, pp. 233---269, December 2004.

     WO 2013/059864                                                              PCT/AU2012/001296
                                                   29
       CLAIMS:
       1.     A computer-implemented method for prefetching one of multiple content items
       onto a mobile device to make the content item accessible from a local data store of the
       mobile device, the method comprising:
   5          (a) determining for each of the multiple content items a benefit value associated
       with an access time, the benefit value being based on an estimate of the likelihood of
      that content item to be accessed by a user at the access time;
              (b) determining for each of the multiple content items an estimated prefetching
      cost associated with a prefetching time, the prefetching cost indicating the cost to
 10   download that content item at the prefetching time; and
              (c) selecting one of the multiple content items for downloading at the associated
      prefetching time based on the benefit values for each of the multiple content items and
      the prefetching cost at the prefetching time for each of the multiple content items.
 15   2.      The computer-implemented method of claim 1, wherein step (c) comprises
      selecting the content item such that a combined measure of cost and benefit is
      optimised.
      3.      The computer-implemented method of claim 1 or 2, wherein step (a) comprises
20    determining multiple benefit values for each of the multiple content items, each of the
      multiple benefit values being associated with one of multiple access times,
      4.      The computer-implemented method of any one of the preceding claims, further
      comprising:
25           receiving historic network status data including time-based download costs; and
             determining multiple prefetching times based on the historic network data, each
     prefetching time indicating a prefetching opportunity.
     5.      The computer-implemented method of any one of the preceding claims, wherein
30   the prefetching cost is based on a network policy,
     6.      The computer-implemented method of claim 5, wherein step (b) comprises
     determining multiple prefetching costs for each of the multiple content items, each of
     the multiple prefetching costs being associated with one of the multiple prefetching
35   times.

     WO 2013/059864                                                               PCT/AU2012/001296
                                                   30
       7,       The computer-implemented method of claim 6 wherein
                step (b) comprises determining an earlier prefetching cost and a later prefetching
       cost for each of the multiple content items, the earlier prefetching cost being associated
       with an earlier prefetching time and the later prefetching cost being associated with a
   5   later prefetching time; and
                step (c) comprises selecting one of the multiple content items such that a first
       content item is selected over a second context item where the first content item has a
       combined measure of benefit and cost above a predetermined threshold associated with
       an access time before the later prefetching time and the second content item has a
 10   benefit value above a predetermined threshold associated with an access time after the
      later prefetching time.
      8.        The computer-implemented method of claim 6 or 7 wherein the prefetching cost
      is based on a monetary cost.
 15
      9.       The computer-implemented method of any one of claims 6 to 9, wherein the
      prefetching cost is based on an energy cost.
      10.      The computer-implemented method of any one of the preceding claims, wherein
20    step (a) further comprises:
               receiving feature data including a set of features for describing content items
     and including for each feature of the set of features a feature weight associated with an
     access time;
              receiving content data, including for each of the multiple content items one or
25   more features of the set of features; and
              determining for each of the multiple content items the benefit value based on the
     feature weight for each feature of the set of features.
     11,      The computer-implemented method of claim 10, further comprising
30            receiving for each feature and each context a feature context weight associated
     with that context, the feature context weight indicating how likely a feature is accessed
     by the user in the associated context;
              receiving for each context a context weight associated with an access time, the
     context weight indicating how likely the context occurs at the associated access time;
35   and

     WO 2013/059864                                                                PCT/AU2012/001296
                                                     31
                 determining for each feature and for each context based on the context weight
        and the feature context weight a feature weight associated with an access time, the
        feature weight indicating how likely the user will access content items with that feature
        in each of the contexts.
   5
        12.     The computer-implemented method of claim 11, further comprising:
                receiving historic user access data including sensor data associated with access
        times when content items were accessed; and
                determining contexts and context weights based on the sensor data, each of the
 10     context weights being associated with an access time.
        13.     The computer-implemented method of claim 12, wherein the historic user access
        data includes features of accessed content items and the method further comprises
        determining based on the received features and the determined contexts for each feature
 15     and for each context a feature context weight,
        14.    The computer-implemented method of any one of the claims 10 to 13, wherein
       the method further comprises:
               receiving features of content items stored on the local data store; and
20             reducing the benefit value based on the received features.
       15.     The computer-implemented method of any one of the preceding claims, wherein
       the benefit value is based on a creation date of the content item.
25     16.     The computer-implemented method of any one of the preceding claims, wherein
       one or more of the multiple content items are advertisement.
       17,     The computer-implemented method of any one of the preceding claims, further
       comprising downloading the selected content item.
30
       18.     Software, that when installed on a computer causes the computer to perform the
      method of any one or more of the preceding claims,
       19.    A mobile device for prefetching one of multiple content items onto the mobile
35    device to make the content item accessible from a local data store of the mobile device,
      the mobile device comprising a processor

   WO 2013/059864                                                              PCT/AU2012/001296
                                                 32.
            (a) to determine for each of the multiple content items a benefit value associated
    with an access time, the benefit value being based on an estimate of the likolihood of
    that content item to be accessed by a user at the access time;
            (b) to determine for each of the multiple content items an estimated prefetching
 5  cost associated with a prefetching time, the prefetching cost indicating the cost to
    download that content item at the prefetching time; and
            (c) to select one of the multiple content items for downloading at the associated
    prefetching time based on the benefit values for each of the multiple content items and
    the prefetching cost at the prefetching time for each of the multiple content items,
10

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
