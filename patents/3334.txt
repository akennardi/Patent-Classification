ABSTRACT
         Multiple virtual source locations may be defined for a volume within which audio
objects can move.       A set-up process for rendering audio data may involve receiving
reproduction speaker location data and pre-computing gain values for each of the virtual
sources according to the reproduction speaker location data and each virtual source location.
The gain values may be stored and used during "run time," during which audio reproduction
data are rendered for the speakers of the reproduction environment.      During run time, for
each audio object, contributions from virtual source locations within an area or volume
defined by the audio object position data and the audio object size data may be computed. A
set of gain values for each output channel of the reproduction environment may be computed
based, at least in part, on the computed contributions. Each output channel may correspond
to at least one reproduction speaker of the reproduction environment.
(Figure 5C)

                                      8/17
      Receive audio reproduction data including one or more audio objects     540
         including audio signals and associated metadata, the metadata
     including at least audio object position data and audio object size data
510  Compute contributions from virtual sources within an area or volume      545
    defined by the audio object position data and the audio object size data
       Compute a set of audio object gain values for each of a plurality of   50
       output channels of the reproduction environment based, at least in     550
                        part, on the computed contributions
                                 Figure 5C

  RENDERING OF AUDIO OBJECTS WITH APPARENT SIZE
             TO ARBITRARY LOUDSPEAKER LAYOUTS
CROSS REFERENCE TO RELATED APPLICATIONS
        [1]     This    application  claims   priority to  Spanish  Patent Application    No.
P201330461, filed on 28 March 2013 and United States Provisional Patent Application No.
61/833,581, filed on 11 June 2013, each of which is hereby incorporated by reference in its
entirety.
TECHNICAL FIELD
        [2]     This disclosure relates to authoring and rendering of audio reproduction data.
In particular, this disclosure relates to authoring and rendering audio reproduction data for
reproduction environments such as cinema sound reproduction systems.
BACKGROUND
        [3]     Any discussion of the prior art throughout the specification should in no way
be considered as an admission that such prior art is widely known or forms part of common
general knowledge in the field.
        [4]     Since the introduction of sound with film in 1927, there has been a steady
evolution of technology used to capture the artistic intent of the motion picture sound track
and to replay it in a cinema environment. In the 1930s, synchronized sound on disc gave way
to variable area sound on film, which was further improved in the 1940s with theatrical
acoustic considerations and improved loudspeaker design, along with early introduction of
multi-track recording and steerable replay (using control tones to move sounds). In the 1950s
and 1960s, magnetic striping of film allowed multi-channel playback in theatre, introducing
surround channels and up to five screen channels in premium theatres.
        [5]     In the 1970s Dolby introduced noise reduction, both in post-production and on
film, along with a cost-effective means of encoding and distributing mixes with 3 screen
channels and a mono surround channel. The quality of cinema sound was further improved
in the 1980s with Dolby Spectral Recording (SR) noise reduction and certification programs
such as THX. Dolby brought digital sound to the cinema during the 1990s with a 5.1 channel
format that provides discrete left, center and right screen channels, left and right surround
arrays and a subwoofer channel for low-frequency effects. Dolby Surround 7.1, introduced in
2010, increased the number of surround channels by splitting the existing left and right
surround channels into four "zones."
                                                 1

         [6]     As the number of channels increases and the loudspeaker layout transitions
from a planar two-dimensional (2D) array to a three-dimensional (3D) array including
elevation, the tasks of authoring and rendering sounds are becoming increasingly complex.
Improved methods and devices would be desirable.
SUMMARY
         [7]     Some aspects of the subject matter described in this disclosure can be
implemented in tools for rendering audio reproduction data that includes audio objects
created without reference to any particular reproduction environment.        As used herein, the
term "audio object" may refer to a stream of audio signals and associated metadata. The
metadata may indicate at least the position and apparent size of the audio object. However,
the metadata also may indicate rendering constraint data, content type data (e.g. dialog,
effects, etc.), gain data, trajectory data, etc. Some audio objects may be static, whereas others
may have time-varying metadata: such audio objects may move, may change size and/or may
have other properties that change over time.
         [8]     When audio       objects are monitored or played back in a reproduction
environment, the audio objects may be rendered according to at least the position and size
metadata. The rendering process may involve computing a set of audio object gain values for
each channel of a set of output channels.        Each output channel may correspond to one or
more reproduction speakers of the reproduction environment.
         [9]     Some implementations described herein involve a "set-up" process that may
take place prior to rendering any particular audio objects.      The set-up process, which also
may be referred to herein as a first stage or Stage 1, may involve defining multiple virtual
source locations in a volume within which the audio objects can move.          As used herein, a
"virtual source location" is a location of a static point source.            According to such
implementations, the set-up process may involve receiving reproduction speaker location data
and pre-computing virtual source gain values for each of the virtual sources according to the
reproduction speaker location data and the virtual source location. As used herein, the term
"speaker location data" may include location data indicating the positions of some or all of
the speakers of the reproduction environment. The location data may be provided as absolute
coordinates of the reproduction speaker locations, for example Cartesian coordinates,
spherical coordinates, etc. Alternatively, or additionally, location data may be provided as
coordinates (e.g., for example Cartesian coordinates or angular coordinates) relative to other
reproduction environment locations, such as acoustic "sweet spots" of the reproduction
environment.
                                                  2

         [10]   In some implementations, the virtual source gain values may be stored and
used during "run time," during which audio reproduction data are rendered for the speakers
of the reproduction environment. During run time, for each audio object, contributions from
virtual source locations within an area or volume defined by the audio object position data
and the audio object size data may be computed. The process of computing contributions
from virtual source locations may involve computing a weighted average of multiple pre
computed virtual source gain values, determined during the set-up process, for virtual source
locations that are within an audio object area or volume defined by the audio object's size and
location.    A set of audio object gain values for each output channel of the reproduction
environment may be computed based, at least in part, on the computed virtual source
contributions. Each output channel may correspond to at least one reproduction speaker of
the reproduction environment.
         [11]   Accordingly,   some methods described        herein  involve receiving audio
reproduction data that includes one or more audio objects. The audio objects may include
audio signals and associated metadata.       The metadata may include at least audio object
position data and audio object size data. The methods may involve computing contributions
from virtual sources within an audio object area or volume defined by the audio object
position data and the audio object size data. The methods may involve computing a set of
audio object gain values for each of a plurality of output channels based, at least in part, on
the computed contributions.        Each output channel may correspond to at least one
reproduction speaker of a reproduction environment.            For example, the reproduction
environment may be a cinema sound system environment.
         [12]   The process of computing contributions from virtual sources may involve
computing a weighted average of virtual source gain values from the virtual sources within
the audio object area or volume. The weights for the weighted average may depend on the
audio object's position, the audio object's size and/or each virtual source location within the
audio object area or volume.
         [13]   The methods may also involve receiving reproduction environment data
including reproduction speaker location data.      The methods may also involve defining a
plurality of virtual source locations according to the reproduction environment data and
computing, for each of the virtual source locations, a virtual source gain value for each of the
plurality of output channels. In some implementations, each of the virtual source locations
may correspond to a location within the reproduction environment.           However, in some
                                                3

implementations at least some of the virtual source locations may correspond to locations
outside of the reproduction environment.
         [14]     In some implementations, the virtual source locations may be spaced
uniformly along x, y and z axes. However, in some implementations the spacing may not be
the same in all directions. For example, the virtual source locations may have a first uniform
spacing along x and y axes and a second uniform spacing along a z axis. The process of
computing the set of audio object gain values for each of the plurality of output channels may
involve independent computations of contributions from virtual sources along the x, y and z
axes.    In alternative implementations, the virtual source locations may be spaced non
uniformly.
         [15]     In some implementations, the process of computing the audio object gain
value for each of the plurality of output channels may involve determining a gain value
(gi(xo,yo,zo;s)) for an audio object of size (s) to be rendered at location xo,yO,zo.  For example,
the audio object gain value (gi(xo,yo,zo;s)) may be expressed as:
           [w(x,,,y,,,,,,; xo, yo, zo; s)gl(x.,,,,z",,)]"
wherein (xs, y,s, zs) represents a virtual source location, g(xs, ys, zs) represents a gain value
for channel I for the virtual source location xs, Yvs, zs and w(x,, yv, Z,; Xo, yo, Zo;s) represents
one or more weight functions for gi(xvs, yvs, zs) determined, at least in part, based on the
location (xo, yo, zo) of the audio object, the size (s) of the audio object and the virtual source
location (x ys,   s,).
         [16]     According to some such implementations, gi(xvs, yvs, zs)     = gi(xvs)g(yvs)g(zvs),
wherein gi(xvs), gi(yv) and gi(zvs) represent independent gain functions of x, y and z. In some
such implementations, the weight functions may factor as:
 W(X,,Y",z" ;xoz          ;s)= w,(x,,;x ;s)w,(y",; y;s)wz(z,,;z   ;s),
wherein w,(xvs; xo; s), wy(yvs; yo; s) and wz(zys;zo; s) represent independent weight functions of
x, y, and z,. According to some such implementations, p may be a function of audio object
size (s).
         [17]     Some such methods may involve storing computed virtual source gain values
in a memory system. The process of computing contributions from virtual sources within the
audio object area or volume may involve retrieving, from the memory system, computed
                                                      4

virtual source gain values corresponding to an audio object position and size and
interpolating between the computed virtual source gain values. The process of interpolating
between the computed virtual source gain values may involve: determining a plurality of
neighboring virtual source locations near the audio object position; determining computed
virtual source gain values for each of the neighboring virtual source locations; determining a
plurality of distances between the audio object position and each of the neighboring virtual
source locations; and interpolating between the computed virtual source gain values
according to the plurality of distances.
         [18]   In some implementations, the reproduction environment data may include
reproduction environment boundary data. The method may involve determining that an
audio object area or volume includes an outside area or volume outside of a reproduction
environment boundary and applying a fade-out factor based, at least in part, on the outside
area or volume. Some methods may involve determining that an audio object may be within
a threshold distance from a reproduction environment boundary and providing no speaker
feed signals to reproduction speakers on an opposing boundary of the reproduction
environment. In some implementations, an audio object area or volume may be a rectangle, a
rectangular prism, a circle, a sphere, an ellipse and/or an ellipsoid.
         [19]   Some methods may involve decorrelating at least some of the audio
reproduction data. For example, the methods may involve decorrelating audio reproduction
data for audio objects having an audio object size that exceeds a threshold value.
         [20]   Alternative methods are described herein.          Some such methods involve
receiving reproduction environment data including reproduction speaker location data and
reproduction environment boundary data, and receiving audio reproduction data including
one or more audio objects and associated metadata. The metadata may include audio object
position data and audio object size data. The methods may involve determining that an audio
object area or volume, defined by the audio object position data and the audio object size
data, includes an outside area or volume outside of a reproduction environment boundary and
determining a fade-out factor based, at least in part, on the outside area or volume. The
methods may involve computing a set of gain values for each of a plurality of output channels
based, at least in part, on the associated metadata and the fade-out factor. Each output
channel may correspond to at least one reproduction speaker of the reproduction
environment. The fade-out factor may be proportional to the outside area.
         [21]   The methods also may involve determining that an audio object may be within
a threshold distance from a reproduction environment boundary and providing no speaker
                                                 5

feed signals to reproduction speakers on an opposing boundary of the reproduction
environment.
        [22]    The methods also may involve computing contributions from virtual sources
within the audio object area or volume.       The methods may involve defining a plurality of
virtual source locations according to the reproduction environment data and computing, for
each of the virtual source locations, a virtual source gain for each of a plurality of output
channels. The virtual source locations may or may not be spaced uniformly, depending on
the particular implementation.
        [23]    Some implementations may be manifested in one or more non-transitory
media having software stored thereon. The software may include instructions for controlling
one or more devices for receiving audio reproduction data including one or more audio
objects. The audio objects may include audio signals and associated metadata. The metadata
may include at least audio object position data and audio object size data. The software may
include instructions for computing, for an audio object from the one or more audio objects,
contributions from virtual sources within an area or volume defined by the audio object
position data and the audio object size data and computing a set of audio object gain values
for each of a plurality of output channels based, at least in part, on the computed
contributions. Each output channel may correspond to at least one reproduction speaker of a
reproduction environment.
        [24]    In some implementations, the process of computing contributions from virtual
sources may involve computing a weighted average of virtual source gain values from the
virtual sources within the audio object area or volume. Weights for the weighted average
may depend on the audio object's position, the audio object's size and/or each virtual source
location within the audio object area or volume.
        [25]    The software may include instructions for receiving reproduction environment
data including reproduction speaker location data. The software may include instructions for
defining a plurality of virtual source locations according to the reproduction environment data
and computing, for each of the virtual source locations, a virtual source gain value for each of
the plurality of output channels.    Each of the virtual source locations may correspond to a
location within the reproduction environment. In some implementations, at least some of the
virtual source locations may correspond to locations outside of the reproduction environment.
        [26]    According to some implementations, the virtual source locations may be
spaced uniformly.     In some implementations, the virtual source locations may have a first
uniform spacing along x and y axes and a second uniform spacing along a z axis.             The
                                                 6

process of computing the set of audio object gain values for each of the plurality of output
channels may involve independent computations of contributions from virtual sources along
the x, y and z axes.
        [27]    Various devices and apparatus are described herein.    Some such apparatus
may include an interface system and a logic system. The interface system may include a
network interface. In some implementations, the apparatus may include a memory device.
The interface system may include an interface between the logic system and the memory
device.
        [28]    The logic system may be adapted for receiving, from the interface system,
audio reproduction data including one or more audio objects. The audio objects may include
audio signals and associated metadata.     The metadata may include at least audio object
position data and audio object size data. The logic system may be adapted for computing, for
an audio object from the one or more audio objects, contributions from virtual sources within
an audio object area or volume defined by the audio object position data and the audio object
size data. The logic system may be adapted for computing a set of audio object gain values
for each of a plurality of output channels based, at least in part, on the computed
contributions. Each output channel may correspond to at least one reproduction speaker of a
reproduction environment.
        [29]    The process of computing contributions from virtual sources may involve
computing a weighted average of virtual source gain values from the virtual sources within
the audio object area or volume. Weights for the weighted average may depend on the audio
object's position, the audio object's size and each virtual source location within the audio
object area or volume. The logic system may be adapted for receiving, from the interface
system, reproduction environment data including reproduction speaker location data.
        [30]    The logic system may be adapted for defining a plurality of virtual source
locations according to the reproduction environment data and computing, for each of the
virtual source locations, a virtual source gain value for each of the plurality of output
channels.    Each of the virtual source locations may correspond to a location within the
reproduction environment. However, in some implementations, at least some of the virtual
source locations may correspond to locations outside of the reproduction environment. The
virtual source locations may or may not be spaced uniformly, depending on the
implementation.     In some implementations, the virtual source locations may have a first
uniform spacing along x and y axes and a second uniform spacing along a z axis.          The
process of computing the set of audio object gain values for each of the plurality of output
                                               7

channels may involve independent computations of contributions from virtual sources along
the x, y and z axes.
         [31]   The apparatus also may include a user interface.     The logic system may be
adapted for receiving user input, such as audio object size data, via the user interface. In
some implementation, the logic system may be adapted for scaling the input audio object size
data.
         [32]   Details of one or more implementations of the subject matter described in this
specification are set forth in the accompanying drawings and the description below.      Other
features, aspects, and advantages will become apparent from the description, the drawings,
and the claims. Note that the relative dimensions of the following figures may not be drawn
to scale.
         [33]   One embodiment provides method, comprising:
                receiving audio reproduction data comprising one or more audio objects, the
audio objects comprising audio signals and associated metadata, the metadata including at
least audio object position data and audio object size data;
                computing, for an audio object from the one or more audio objects, virtual
source gain values from virtual sources at respective virtual source locations within an audio
object area or volume defined by the audio object position data and the audio object size data;
and
                computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed virtual source gain values, wherein each
output channel corresponds to at least one reproduction speaker of a reproduction
environment and each of said virtual source locations corresponds to a respective static
location within the reproduction environment.
         [34]   One embodiment provides a non-transitory medium having software stored
thereon, the software including instructions for controlling at least one apparatus to perform
the following operations:
                receiving audio reproduction data comprising one or more audio objects, the
audio objects comprising audio signals and associated metadata, the metadata including at
least audio object position data and audio object size data;
                computing, for an audio object from the one or more audio objects, virtual
source gain values from virtual sources at respective virtual source locations within an audio
object area or volume defined by the audio object position data and the audio object size data;
and
                                               8

               computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed virtual source gain values, wherein each
output channel corresponds to at least one reproduction speaker of a reproduction
environment and each of said virtual source locations corresponds to a respective static
location within the reproduction environment.
        [35]    One embodiment provides an apparatus, comprising:
               an interface system; and
               a logic system adapted for:
               receiving, from the interface system, audio reproduction data comprising one
or more audio objects, the audio objects comprising audio signals and associated metadata,
the metadata including at least audio object position data and audio object size data;
               computing, for an audio object from the one or more audio objects, virtual
source gain values from virtual sources at respective virtual source locations within an audio
object area or volume defined by the audio object position data and the audio object size data;
and
               computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed virtual source gain values, wherein each
output channel corresponds to at least one reproduction speaker of a reproduction
environment and each of said virtual source locations corresponds to a respective static
location within the reproduction environment.
        [36]    One embodiment provides a method, comprising:
               receiving audio reproduction data comprising one or more audio objects, the
audio objects comprising audio signals and associated metadata, the metadata including at
least audio object position data and audio object size data;
               computing, for an audio object from the one or more audio objects,
contributions from virtual sources within an audio object area or volume defined by the audio
object position data and the audio object size data; and
               computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed contributions, wherein each output channel
corresponds to at least one reproduction speaker of a reproduction environment.
        [37]    One embodiment provides a method, comprising:
               receiving reproduction environment data including reproduction speaker
location data and reproduction environment boundary data;
                                                9

               receiving audio reproduction data comprising one or more audio objects and
associated metadata, the metadata including audio object position data and audio object size
data;
               determining that an audio object area or volume, defined by the audio object
position data and the audio object size data, includes an outside area or volume outside of a
reproduction environment boundary;
               determining a fade-out factor based, at least in part, on the outside area or
volume; and
               computing a set of gain values for each of a plurality of output channels based,
at least in part, on the associated metadata and the fade-out factor, wherein each output
channel corresponds to at least one reproduction speaker of the reproduction environment.
         [38]  One embodiment provides a non-transitory medium having software stored
thereon, the software including instructions for controlling at least one apparatus to perform
the following operations:
               receiving audio reproduction data comprising one or more audio objects, the
audio objects comprising audio signals and associated metadata, the metadata including at
least audio object position data and audio object size data;
               computing, for an audio object from the one or more audio objects,
contributions from virtual sources within an audio object area or volume defined by the audio
object position data and the audio object size data; and
               computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed contributions, wherein each output channel
corresponds to at least one reproduction speaker of a reproduction environment.
         [39]  One embodiment provides an apparatus, comprising:
               an interface system; and
               a logic system adapted for:
               receiving, from the interface system, audio reproduction data comprising one
or more audio objects, the audio objects comprising audio signals and associated metadata,
the metadata including at least audio object position data and audio object size data;
               computing, for an audio object from the one or more audio objects,
contributions from virtual sources within an audio object area or volume defined by the audio
object position data and the audio object size data; and
                                               10

                computing a set of audio object gain values for each of a plurality of output
channels based, at least in part, on the computed contributions, wherein each output channel
corresponds to at least one reproduction speaker of a reproduction environment.
         [40]   One embodiment provides a non-transitory medium having software stored
thereon, the software including instructions for controlling at least one apparatus to perform
the following operations:
        receiving audio reproduction data comprising one or more audio objects, the audio
objects comprising audio signals and associated metadata, the metadata including at least
audio object position data and audio object size data;
        computing, for an audio object from the one or more audio objects, virtual source gain
values from virtual sources at respective virtual source locations within an audio object area
or volume defined by the audio object position data and the audio object size data; and
        computing a set of audio object gain values for each of a plurality of output channels
based, at least in part, on the computed virtual source gain values, wherein each output
channel corresponds to at least one reproduction speaker of a reproduction environment and
each of said virtual source locations corresponds to a respective static location within the
reproduction environment,
        wherein the process of computing the set of audio object gain values involves
computing a weighted average of virtual source gain values from the virtual sources within
the audio object area or volume.
         [41]   One embodiment provides an apparatus, comprising:
        an interface system; and
        a logic system adapted for:
        receiving, from the interface system, audio reproduction data comprising one or more
audio objects, the audio objects comprising audio signals and associated metadata, the
metadata including at least audio object position data and audio object size data;
computing, for an audio object from the one or more audio objects, virtual source gain values
from virtual sources at respective virtual source locations within an audio object area or
volume defined by the audio object position data and the audio object size data; and
        computing a set of audio object gain values for each of a plurality of output channels
based, at least in part, on the computed virtual source gain values, wherein each output
channel corresponds to at least one reproduction speaker of a reproduction environment and
each of said virtual source locations corresponds to a respective static location within the
reproduction environment,
                                               11

         wherein the process of computing the set of audio object gain values involves
computing a weighted average of virtual source gain values from the virtual sources within
the audio object area or volume.
         [42]   One embodiment provides a method of rendering input audio including at least
one audio object and associated metadata, the method comprising:
         determining a plurality of virtual audio objects based on the metadata;
         for each virtual audio object of the plurality of virtual audio objects, determining a
location of the corresponding virtual audio object;
         for each virtual audio object of the plurality of virtual audio objects, determining a
gain of the corresponding virtual audio object;
         for each virtual audio object, rendering the audio object and the plurality of virtual
audio objects to the one or more speaker feeds, wherein the plurality of virtual audio objects
are rendered based on the corresponding locations and gains of the plurality of virtual audio
objects.
         [43]   One embodiment provides an apparatus for rendering input audio including at
least one audio object and associated metadata, the method comprising:
         a processor configured to determine a plurality of virtual audio objects based on the
metadata, the processor further configured to:
         for each virtual audio object of the plurality of virtual audio objects, determining a
location of the corresponding virtual audio object;
         for each virtual audio object of the plurality of virtual audio objects, determining a
gain of the corresponding virtual audio object;
         for each virtual audio object, rendering the audio object and the plurality of virtual
audio objects to the one or more speaker feeds, wherein the plurality of virtual audio objects
are rendered based on the corresponding locations and gains of the plurality of virtual audio
objects.
         [44]   Unless the context clearly requires otherwise, throughout the description and
the claims, the words "comprise", "comprising", and the like are to be construed in an
inclusive sense as opposed to an exclusive or exhaustive sense; that is to say, in the sense of
"including, but not limited to".
BRIEF DESCRIPTION OF THE DRAWINGS
         [45]   Figure 1 shows an example of a reproduction environment having a Dolby
Surround 5.1 configuration.
         [46]   Figure 2 shows an example of a reproduction environment having a Dolby
                                                 12

Surround 7.1 configuration.
        [47]    Figure 3 shows an example of a reproduction environment having a Hamasaki
22.2 surround sound configuration.
        [48]    Figure 4A shows an example of a graphical user interface (GUI) that portrays
speaker zones at varying elevations in a virtual reproduction environment.
        [49]    Figure 4B shows an example of another reproduction environment.
        [50]    Figure 5A is a flow diagram that provides an overview of an audio processing
method.
        [51]    Figure 5B is a flow diagram that provides an example of a set-up process.
        [52]    Figure 5C is a flow diagram that provides an example of a run-time process of
computing gain values for received audio objects according to pre-computed gain values for
virtual source locations.
        [53]    Figure 6A shows an example of virtual source locations relative to a
reproduction environment.
        [54]    Figure 6B shows an alternative example of virtual source locations relative to
a reproduction environment.
        [55]    Figures 6C-6F show examples of applying near-field and far-field panning
techniques to audio objects at different locations.
        [56]    Figure 6G illustrates an example of a reproduction environment having one
speaker at each corner of a square having an edge length equal to 1.
        [57]    Figure 7 shows an example of contributions from virtual sources within an
area defined by audio object position data and audio object size data.
        [58]    Figures 8A and 8B show an audio object in two positions within a
reproduction environment.
        [59]    Figure 9 is a flow diagram that outlines a method of determining a fade-out
factor based, at least in part, on how much of an area or volume of an audio object extends
outside a boundary of a reproduction environment.
        [60]    Figure 10 is a block diagram that provides examples of components of an
authoring and/or rendering apparatus.
        [61]    Figure 11 A is a block diagram that represents some components that may be
used for audio content creation.
        [62]    Figure 11 B is a block diagram that represents some components that may be
used for audio playback in a reproduction environment.
                                                13

         [63]   Like reference numbers and designations in the various drawings indicate like
elements.
DESCRIPTION OF EXAMPLE EMBODIMENTS
         [64]   The following description is directed to certain implementations for the
purposes of describing some innovative aspects of this disclosure, as well as examples of
contexts in which these innovative aspects may be implemented. However, the teachings
herein can be applied in various different ways. For example, while various implementations
have been described in terms of particular reproduction environments, the teachings herein
are widely applicable to other known reproduction environments, as well as reproduction
environments that may be introduced in the future. Moreover, the described implementations
may be implemented in various authoring and/or rendering tools, which may be implemented
in a variety of hardware, software, firmware, etc.        Accordingly, the teachings of this
disclosure are not intended to be limited to the implementations shown in the figures and/or
described herein, but instead have wide applicability.
         [65]   Figure 1 shows an example of a reproduction environment having a Dolby
Surround 5.1 configuration.      Dolby Surround 5.1 was developed in the 1990s, but this
configuration is still widely deployed in cinema sound system environments. A projector 105
may be configured to project video images, e.g. for a movie, on the screen 150. Audio
reproduction data may be synchronized with the video images and processed by the sound
processor 110. The power amplifiers 115 may provide speaker feed signals to speakers of the
reproduction environment 100.
         [66]   The Dolby Surround 5.1 configuration includes left surround array 120 and
right surround array 125, each of which includes a group of speakers that are gang-driven by
a single channel. The Dolby Surround 5.1 configuration also includes separate channels for
the left screen channel 130, the center screen channel 135 and the right screen channel 140.
A separate channel for the subwoofer 145 is provided for low-frequency effects (LFE).
         [67]   In 2010, Dolby provided enhancements to digital cinema sound by introducing
Dolby Surround 7.1. Figure 2 shows an example of a reproduction environment having a
Dolby Surround 7.1 configuration. A digital projector 205 may be configured to receive
digital video data and to project video images on the screen 150. Audio reproduction data
may be processed by the sound processor 210.          The power amplifiers 215 may provide
speaker feed signals to speakers of the reproduction environment 200.
         [68]   The Dolby Surround 7.1 configuration includes the left side surround array
220 and the right side surround array 225, each of which may be driven by a single channel.
                                               14

Like Dolby Surround 5.1, the Dolby Surround 7.1 configuration includes separate channels
for the left screen channel 230, the center screen channel 235, the right screen channel 240
and the subwoofer 245.      However, Dolby Surround 7.1 increases the number of surround
channels by splitting the left and right surround channels of Dolby Surround 5.1 into four
zones: in addition to the left side surround array 220 and the right side surround array 225,
separate channels are included for the left rear surround speakers 224 and the right rear
surround speakers 226.     Increasing the number of surround zones within the reproduction
environment 200 can significantly improve the localization of sound.
        [69]    In an effort to create a more immersive environment, some reproduction
environments may be configured with increased numbers of speakers, driven by increased
numbers of channels.      Moreover, some reproduction environments may include speakers
deployed at various elevations, some of which may be above a seating area of the
reproduction environment.
        [70]    Figure 3 shows an example of a reproduction environment having a Hamasaki
22.2 surround sound configuration.       Hamasaki 22.2 was developed at NHK Science &
Technology Research Laboratories in Japan as the surround sound component of Ultra High
Definition Television. Hamasaki 22.2 provides 24 speaker channels, which may be used to
drive speakers arranged in three layers.         Upper speaker layer 310 of reproduction
environment 300 may be driven by 9 channels. Middle speaker layer 320 may be driven by
10 channels. Lower speaker layer 330 may be driven by 5 channels, two of which are for the
subwoofers 345a and 345b.
        [71]    Accordingly, the modern trend is to include not only more speakers and more
channels, but also to include speakers at differing heights.     As the number of channels
increases and the speaker layout transitions from a 2D array to a 3D array, the tasks of
positioning and rendering sounds becomes increasingly difficult.     Accordingly, the present
assignee has developed various tools, as well as related user interfaces, which increase
functionality and/or reduce authoring complexity for a 3D audio sound system.        Some of
these tools are described in detail with reference to Figures 5A-19D of United States
Provisional Patent Application No. 61/636,102, filed on April 20, 2012 and entitled "System
and Tools for Enhanced 3D Audio Authoring and Rendering" (the "Authoring and Rendering
Application") which is hereby incorporated by reference.
        [72]    Figure 4A shows an example of a graphical user interface (GUI) that portrays
speaker zones at varying elevations in a virtual reproduction environment. GUI 400 may, for
example, be displayed on a display device according to instructions from a logic system,
                                               15

according to signals received from user input devices, etc. Some such devices are described
below with reference to Figure 10.
         [73]   As used herein with reference to virtual reproduction environments such as the
virtual reproduction environment 404, the term "speaker zone" generally refers to a logical
construct that may or may not have a one-to-one correspondence with a reproduction speaker
of an actual reproduction environment. For example, a "speaker zone location" may or may
not correspond to a particular reproduction speaker location of a cinema reproduction
environment. Instead, the term "speaker zone location" may refer generally to a zone of a
virtual reproduction environment.     In some implementations, a speaker zone of a virtual
reproduction environment may correspond to a virtual speaker, e.g., via the use of
virtualizing technology such as Dolby Headphone,TM (sometimes referred to as Mobile
SurroundTM), which creates a virtual surround sound environment in real time using a set of
two-channel stereo headphones. In GUI 400, there are seven speaker zones 402a at a first
elevation and two speaker zones 402b at a second elevation, making a total of nine speaker
zones in the virtual reproduction environment 404. In this example, speaker zones 1-3 are in
the front area 405 of the virtual reproduction environment 404. The front area 405 may
correspond, for example, to an area of a cinema reproduction environment in which a screen
150 is located, to an area of a home in which a television screen is located, etc.
         [74]   Here, speaker zone 4 corresponds generally to speakers in the left area 410 and
speaker zone 5 corresponds to speakers in the right area 415 of the virtual reproduction
environment 404. Speaker zone 6 corresponds to a left rear area 412 and speaker zone 7
corresponds to a right rear area 414 of the virtual reproduction environment 404. Speaker
zone 8 corresponds to speakers in an upper area 420a and speaker zone 9 corresponds to
speakers in an upper area 420b, which may be a virtual ceiling area. Accordingly, and as
described in more detail in the Authoring and Rendering Application, the locations of speaker
zones 1-9 that are shown in Figure 4A may or may not correspond to the locations of
reproduction    speakers   of an actual reproduction        environment.       Moreover, other
implementations may include more or fewer speaker zones and/or elevations.
         [75]   In various implementations described in the Authoring and Rendering
Application, a user interface such as GUI 400 may be used as part of an authoring tool and/or
a rendering tool. In some implementations, the authoring tool and/or rendering tool may be
implemented via software stored on one or more non-transitory media. The authoring tool
and/or rendering tool may be implemented (at least in part) by hardware, firmware, etc., such
as the logic system and other devices described below with reference to Figure 10. In some
                                               16

authoring implementations, an associated authoring tool may be used to create metadata for
associated audio data. The metadata may, for example, include data indicating the position
and/or trajectory of an audio object in a three-dimensional space, speaker zone constraint
data, etc. The metadata may be created with respect to the speaker zones 402 of the virtual
reproduction environment 404, rather than with respect to a particular speaker layout of an
actual reproduction environment. A rendering tool may receive audio data and associated
metadata, and may compute audio gains and speaker feed signals for a reproduction
environment. Such audio gains and speaker feed signals may be computed according to an
amplitude panning process, which can create a perception that a sound is coming from a
position P in the reproduction environment.        For example, speaker feed signals may be
provided to reproduction speakers 1 through N of the reproduction environment according to
the following equation:
         [76]   xi(t) = gix(t), i = 1, ... N           (Equation 1)
         [77]   In Equation 1, xi(t) represents the speaker feed signal to be applied to speaker
i, gi represents the gain factor of the corresponding channel, x(t) represents the audio signal
and t represents time. The gain factors may be determined, for example, according to the
amplitude panning methods described in Section 2, pages 3-4 of V. Pulkki, Compensating
Displacement of Amplitude-Panned Virtual Sources (Audio Engineering Society (AES)
International Conference on Virtual, Synthetic and Entertainment Audio), which is hereby
incorporated by reference. In some implementations, the gains may be frequency dependent.
In some implementations, a time delay may be introduced by replacing x(t) by x(t- t).
         [78]   In some rendering implementations, audio reproduction data created with
reference to the speaker zones 402 may be mapped to speaker locations of a wide range of
reproduction environments, which may be in a Dolby Surround 5.1 configuration, a Dolby
Surround 7.1 configuration, a Hamasaki 22.2 configuration, or another configuration.         For
example, referring to Figure 2, a rendering tool may map audio reproduction data for speaker
zones 4 and 5 to the left side surround array 220 and the right side surround array 225 of a
reproduction environment having a Dolby Surround 7.1 configuration. Audio reproduction
data for speaker zones 1, 2 and 3 may be mapped to the left screen channel 230, the right
screen channel 240 and the center screen channel 235, respectively. Audio reproduction data
for speaker zones 6 and 7 may be mapped to the left rear surround speakers 224 and the right
rear surround speakers 226.
         [79]   Figure 4B shows an example of another reproduction environment. In some
implementations, a rendering tool may map audio reproduction data for speaker zones 1, 2
                                                17

and 3 to corresponding screen speakers 455 of the reproduction environment 450.              A
rendering tool may map audio reproduction data for speaker zones 4 and 5 to the left side
surround array 460 and the right side surround array 465 and may map audio reproduction
data for speaker zones 8 and 9 to left overhead speakers 470a and right overhead speakers
470b.    Audio reproduction data for speaker zones 6 and 7 may be mapped to left rear
surround speakers 480a and right rear surround speakers 480b.
         [80]    In some authoring implementations, an authoring tool may be used to create
metadata for audio objects. As noted above, the term "audio object" may refer to a stream of
audio data signals and associated metadata. The metadata may indicate the 3D position of the
audio object, the apparent size of the audio object, rendering constraints as well as content
type (e.g. dialog, effects), etc. Depending on the implementation, the metadata may include
other types of data, such as gain data, trajectory data, etc. Some audio objects may be static,
whereas others may move. Audio object details may be authored or rendered according to
the associated metadata which, among other things, may indicate the position of the audio
object in a three-dimensional space at a given point in time.        When audio objects are
monitored or played back in a reproduction environment, the audio objects may be rendered
according to their position and size metadata according to the reproduction speaker layout of
the reproduction environment.
         [81]    Figure 5A is a flow diagram that provides an overview of an audio processing
method. More detailed examples are described below with reference to Figures 5B et seq.
These methods may include more or fewer blocks than shown and described herein and are
not necessarily performed in the order shown herein. These methods may be performed, at
least in part, by an apparatus such as those shown in Figures 10-11 B and described below. In
some embodiments, these methods may be implemented, at least in part, by software stored
in one or more non-transitory media. The software may include instructions for controlling
one or more devices to perform the methods described herein.
         [82]    In the example shown in Figure 5A, method 500 begins with a set-up process
of determining virtual source gain values for virtual source locations relative to a particular
reproduction environment (block 505).        Figure 6A shows an example of virtual source
locations relative to a reproduction environment.       For example, block 505 may involve
determining virtual source gain values of the virtual source locations 605 relative to the
reproduction speaker locations 625 of the reproduction environment 600a. The virtual source
locations 605 and the reproduction speaker locations 625 are merely examples.           In the
example shown in Figure 6A, the virtual source locations 605 are spaced uniformly along x, y
                                                18

and z axes. However, in alternative implementations, the virtual source locations 605 may be
spaced differently. For example, in some implementations the virtual source locations 605
may have a first uniform spacing along the x and y axes and a second uniform spacing along
the z axis. In other implementations, the virtual source locations 605 may be spaced non
uniformly.
         [83]   In the example shown in Figure 6A, the reproduction environment 600a and
the virtual source volume 602a are co-extensive, such that each of the virtual source locations
605 corresponds to a location within the reproduction environment 600a.             However, in
alternative implementations, the reproduction environment 600 and the virtual source volume
602 may not be co-extensive. For example, at least some of the virtual source locations 605
may correspond to locations outside of the reproduction environment 600.
         [84]   Figure 6B shows an alternative example of virtual source locations relative to
a reproduction environment. In this example, the virtual source volume 602b extends outside
of the reproduction environment 600b.
         [85]   Returning to Figure 5A, in this example, the set-up process of block 505 takes
place prior to rendering any particular audio objects. In some implementations, the virtual
source gain values determined in block 505 may be stored in a storage system. The stored
virtual source gain values maybe used during a "run time" process of computing audio object
gain values for received audio objects according to at least some of the virtual source gain
values (block 510). For example, block 510 may involve computing the audio object gain
values based, at least in part, on virtual source gain values corresponding to virtual source
locations that are within an audio object area or volume.
         [86]   In some implementations, method 500 may include optional block 515, which
involves decorrelating audio data. Block 515 may be part of a run-time process. In some
such implementations, block 515 may involve convolution in the frequency domain.             For
example, block 515 may involve applying a finite impulse response ("FIR") filter for each
speaker feed signal.
         [87]   In some implementations, the processes of block 515 may or may not be
performed, depending on an audio object size and/or an author's artistic intention. According
to some such implementations,         an authoring tool may link audio object size with
decorrelation by indicating (e.g., via a decorrelation flag included in associated metadata) that
decorrelation should be turned on when the audio object size is greater than or equal to a size
threshold value and that decorrelation should be turned off if the audio object size is below
the size threshold value.   In some implementations, decorrelation may be controlled (e.g.,
                                                19

increased, decreased or disabled) according to user input regarding the size threshold value
and/or other input values.
        [88]   Figure 5B is a flow diagram that provides an example of a set-up process.
Accordingly, all of the blocks shown in Figure 5B are examples of processes that may be
performed in block 505 of Figure 5A. Here, the set-up process begins with the receipt of
reproduction environment data (block 520). The reproduction environment data may include
reproduction speaker location data. The reproduction environment data also may include
data representing boundaries of a reproduction environment, such as walls, ceiling, etc. If the
reproduction environment is a cinema, the reproduction environment data also may include
an indication of a movie screen location.
        [89]   The reproduction environment data also may include data indicating a
correlation of output channels with reproduction speakers of a reproduction environment.
For example, the reproduction environment may have a Dolby Surround 7.1 configuration
such as that shown in Figure 2 and described above.          Accordingly, the reproduction
environment data also may include data indicating a correlation between an Lss channel and
the left side surround speakers 220, between an Lrs channel and the left rear surround
speakers 224, etc.
        [90]   In this example, block 525 involves defining virtual source locations 605
according to the reproduction environment data. The virtual source locations 605 may be
defined within a virtual source volume. In some implementations, the virtual source volume
may correspond with a volume within which audio objects can move. As shown in Figures
6A and 6B, in some implementations the virtual source volume 602 may be co-extensive with
a volume of the reproduction environment 600, whereas in other implementations at least
some of the virtual source locations 605 may correspond to locations outside of the
reproduction environment 600.
        [91]   Moreover, the virtual source locations 605 may or may not be spaced
uniformly within the virtual source volume 602, depending on the particular implementation.
In some implementations, the virtual source locations 605 may be spaced uniformly in all
directions. For example, the virtual source locations 605 may form a rectangular grid of N,
by N by N virtual source locations 605. In some implementations, the value of N may be in
the range of 5 to 100.     The value of N may depend, at least in part, on the number of
reproduction speakers in the reproduction environment: it may be desirable to include two or
more virtual source locations 605 between each reproduction speaker location.
        [92]   In other implementations, the virtual source locations 605 may have a first
                                             20

uniform spacing along x and y axes and a second uniform spacing along a z axis. The virtual
source locations 605 may form a rectangular grid of N, by N by Mz virtual source locations
605. For example, in some implementations there may be fewer virtual source locations 605
along the z axis than along the x or y axes. In some such implementations, the value of N
may be in the range of 10 to 100, whereas the value of M may be in the range of 5 to 10.
        [93]    In this example, block 530 involves computing virtual source gain values for
each of the virtual source locations 605.       In some implementations, block 530 involves
computing, for each of the virtual source locations 605, virtual source gain values for each
channel of a plurality of output channels of the reproduction environment.             In some
implementations, block 530 may involve applying a vector-based amplitude panning
("VBAP") algorithm, a pairwise panning algorithm or a similar algorithm to compute gain
values for point sources located at each of the virtual source locations 605.           In other
implementations, block 530 may involve applying a separable algorithm, to compute gain
values for point sources located at each of the virtual source locations 605. As used herein, a
"separable" algorithm is one for which the gain of a given speaker can be expressed as a
product of two or more factors that may be computed separately for each of the coordinates
of the virtual source location. Examples include algorithms implemented in various existing
mixing console panners, including but not limited to the Pro ToolsTM software and planners
implemented in digital film consoles provided by AMS Neve.               Some two-dimensional
examples are provided below.
        [94]    Figures 6C-6F show examples of applying near-field and far-field panning
techniques to audio objects at different locations.     Referring first to Figure 6C, the audio
object is substantially outside of the virtual reproduction environment 400a. Therefore, one
or more far-field panning methods will be applied in this instance. In some implementations,
the far-field panning methods may be based on vector-based amplitude panning (VBAP)
equations that are known by those of ordinary skill in the art. For example, the far-field
panning methods may be based on the VBAP equations described in Section 2.3, page 4 of V.
Pulkki,    Compensating     Displacement    of    Amplitude-Panned     Virtual   Sources   (AES
International Conference on Virtual, Synthetic and Entertainment Audio), which is hereby
incorporated by reference. In alternative implementations, other methods may be used for
panning far-field and near-field audio objects, e.g., methods that involve the synthesis of
corresponding acoustic planes or spherical wave. D. de Vries, Wave Field Synthesis (AES
Monograph 1999), which is hereby incorporated by reference, describes relevant methods.
        [95]    Referring now to Figure 6D, the audio object 610 is inside of the virtual
                                                21

reproduction environment 400a. Therefore, one or more near-field panning methods will be
applied in this instance. Some such near-field panning methods will use a number of speaker
zones enclosing the audio object 610 in the virtual reproduction environment 400a.
         [96]    Figure 6G illustrates an example of a reproduction environment having one
speaker at each corner of a square having an edge length equal to 1. In this example, the
origin (0,0) of the x-y axis is coincident with left (L) screen speaker 130. Accordingly, the
right (R) screen speaker 140 has coordinates (1,0), the left surround (Ls) speaker 120 has
coordinates (0,1) and the right surround (Rs) speaker 125 has coordinates (1,1). The audio
object position 615 (x,y) is x units to right of the L speaker and y units from the screen 150.
In this example, each of the four speakers receives a factor cos/sin proportional to their
distance along the x axis and the y axis. According to some implementations, the gains may
be computed as follows:
G_ (x)   =  cos(pi/2* x) if 1=L,Ls
G_ (x)   =  sin(pi/2* x) if 1=R,Rs
G_ (y)   =  cos(pi/2* y) if 1=L,R
G_ (y)   =  sin(pi/2* y) if 1=Ls,Rs
         [97]    The overall gain is the product: Gl(x,y) =Gl(x) Gl(y).         In general, these
functions depend on all the coordinates of all speakers. However, Gl(x) does not depend on
the y-position of the source, and Gl(y) does not depend on its x-position. To illustrate a
simple calculation, suppose that the audio object position 615 is (0,0), the location of the L
speaker. GL (x)       = cos (0) =  1. GL (y)    =  cos (0) =  1. The overall gain is the product:
GL(x,y) =GL(x) GL(y)          = 1. Similar calculations lead to G_Ls = G_Rs   = GR   = 0.
         [98]    It may be desirable to blend between different panning modes as an audio
object enters or leaves the virtual reproduction environment 400a. For example, a blend of
gains computed according to near-field panning methods and far-field panning methods may
be applied when the audio object 610 moves from the audio object location 615 shown in
Figure 6C to the audio object location 615 shown in Figure 6D, or vice versa.            In some
implementations, a pair-wise panning law (e.g., an energy-preserving sine or power law) may
be used to blend between the gains computed according to near-field panning methods and
far-field panning methods. In alternative implementations, the pair-wise panning law may be
amplitude-preserving rather than energy-preserving, such that the sum equals one instead of
the sum of the squares being equal to one. It is also possible to blend the resulting processed
signals, for example to process the audio signal using both panning methods independently
and to cross-fade the two resulting audio signals.
                                                 22

         [99]    Returning now to Figure 5B, regardless of the algorithm used in block 530, the
resulting gain values may be stored in a memory system (block 535), for use during run-time
operations.
         [100]   Figure 5C is a flow diagram that provides an example of a run-time process of
computing gain values for received audio objects according to pre-computed gain values for
virtual source locations. All of the blocks shown in Figure 5C are examples of processes that
may be performed in block 510 of Figure 5A.
         [101]   In this example, the run-time process begins with the receipt of audio
reproduction data that includes one or more audio objects (block 540). The audio objects
include audio signals and associated metadata, including at least audio object position data
and audio object size data in this example. Referring to Figure 6A, for example, the audio
object 610 is defined, at least in part, by an audio object position 615 and an audio object
volume 620a.      In this example, the received audio object size data indicate that the audio
object volume 620a corresponds to that of a rectangular prism. In the example, shown in
Figure 6B, however, the received audio object size data indicate that the audio object volume
620b corresponds to that of a sphere.          These sizes and shapes are merely examples; in
alternative implementations, audio objects may have a variety of other sizes and/or shapes.
In some alternative examples, the area or volume of an audio object may be a rectangle, a
circle, an ellipse, an ellipsoid, or a spherical sector.
         [102]   In this implementation, block 545 involves computing contributions from
virtual sources within an area or volume defined by the audio object position data and the
audio object size data. In the examples shown in Figures 6A and 6B, block 545 may involve
computing contributions from the virtual sources at the virtual source locations 605 that are
within the audio object volume 620a or the audio object volume 620b. If the audio object's
metadata change over time, block 545 may be performed again according to the new
metadata values.      For example, if the audio object size and/or the audio object position
changes, different virtual source locations 605 may fall within the audio object volume 620
and/or the virtual source locations 605 used in a prior computation may be a different
distance from the audio object position 615. In block 545, the corresponding virtual source
contributions would be computed according to the new audio object size and/or position.
         [103]   In some examples, block 545 may involve retrieving, from a memory system,
computed virtual source gain values for virtual source locations corresponding to an audio
object position and size, and interpolating between the computed virtual source gain values.
The process of interpolating between the computed virtual source gain values may involve
                                                  23

determining a plurality of neighboring virtual source locations near the audio object position,
determining computed virtual source gain values for each of the neighboring virtual source
locations, determining a plurality of distances between the audio object position and each of
the neighboring virtual source locations and interpolating between the computed virtual
source gain values according to the plurality of distances.
         [104]  The process of computing contributions from virtual sources may involve
computing a weighted average of computed virtual source gain values for virtual source
locations within an area or volume defined by the audio object's size.          Weights for the
weighted average may depend, for example, on the audio object's position, the audio object's
size and each virtual source location within the area or volume.
         [105]  Figure 7 shows an example of contributions from virtual sources within an
area defined by audio object position data and audio object size data. Figure 7 depicts a
cross-section of an audio environment 200a, taken perpendicular to the z axis. Accordingly,
Figure 7 is drawn from the perspective of a viewer looking downward into the audio
environment 200a, along the z axis. In this example, the audio environment 200a is a cinema
sound system environment having a Dolby Surround 7.1 configuration such as that shown in
Figure 2 and described above. Accordingly, the reproduction environment 200a includes the
left side surround speakers 220, the left rear surround speakers 224, the right side surround
speakers 225, the right rear surround speakers 226, the left screen channel 230, the center
screen channel 235, the right screen channel 240 and the subwoofer 245.
         [106]  The audio object 610 has a size indicated by the audio object volume 620b, a
rectangular cross-sectional area of which is shown in Figure 7.         Given the audio object
position 615 at the instant of time depicted in Figure 7, 12 virtual source locations 605 are
included in the area encompassed by the audio object volume 620b in the x-y plane.
Depending on the extent of the audio object volume 620b in the z direction and the spacing of
the virtual source locations 605 along the z axis, additional virtual source locations 605s may
or may not be encompassed within the audio object volume 620b.
         [107]  Figure 7 indicates contributions from the virtual source locations 605 within
the area or volume defined by the size of the audio object 610. In this example, the diameter
of the circle used to depict each of the virtual source locations 605 corresponds with the
contribution from the corresponding virtual source location 605. The virtual source locations
605a are closest to the audio object position 615 are shown as the largest, indicating the
greatest   contribution   from the corresponding      virtual sources.      The    second-largest
contributions are from virtual sources at the virtual source locations 605b, which are the
                                               24

second-closest to the audio object position 615. Smaller contributions are made by the virtual
source locations 605c, which are further from the audio object position 615 but still within
the audio object volume 620b. The virtual source locations 605d that are outside of the audio
object volume 620b are shown as being the smallest, which indicates that in this example the
corresponding virtual sources make no contribution.
         [108]    Returning to Figure 5C, in this example block 550 involves computing a set of
audio object gain values for each of a plurality of output channels based, at least in part, on
the computed contributions.            Each output channel may correspond to at least one
reproduction speaker of the reproduction environment. Block 550 may involve normalizing
the resulting audio object gain values.           For the implementation shown in Figure 7, for
example, each output channel may correspond to a single speaker or a group of speakers.
         [109]    The process of computing the audio object gain value for each of the plurality
of output channels may involve determining a gain value (g/fze(x,yo,zo,;s)) for an audio object
of size (s) to be rendered at location x0 ,y0 ,z.   This audio object gain value may sometimes be
referred to herein as an "audio              object size contribution."        According   to some
implementations, the audio object gain value (g/sze(xo,yo,zo,;s)) may be expressed as:
           [w(x,,,y,,,Ylz",;x",y",zI;s)gl(x,,,,",z    )]"    .(Equation 2)
         [110]    In Equation 2, (xs, ys, zos) represents a virtual source location, gi(xs, ys, zs)
represents a gain value for channel I for the virtual source location      xs,  ys, zs and w(x,,, yv,
zy; Xo, yo, Zo;s) represents a weight for gi(xvs, yvs, zs) that is determined, based at least in part,
on the location (xo, yo, zo) of the audio object, the size (s) of the audio object and the virtual
source location (x ys,      zv,,).
         [111]    In some examples, the exponent p may have a value between 1 and 10. In
some implementations, p may be a function of the audio object size s. For example, if s is
relatively larger, in some implementations p may be relatively smaller. According to some
such implementations, p may be determined as follows:
 p = 6,      if s O 0.5
 p = 6 + (-4)(s - 0.5) /(s,1 _ - 0.5),     if s > 0.5 ,
wherein    Smax  corresponds to the maxiumum value of an internal scaled-up size               Sinternal
(described below) and wherein an audio object size s            =  1 may correspond with an audio
object having a size (e.g., a diameter) equal to a length of one of the boundaries of the
reproduction environment (e.g., equal to the length of one wall of the reproduction
                                                    25

environment).
           [112]       Depending in part on the algorithm(s) used to compute the virtual source gain
values, it may be possible to simplify Equation 2 if the virtual source locations are uniformly
distributed along an axis and if the weight functions and the gain functions are separable, e.g.,
as described above.            If these conditions are met, then gi(xs, ys, zs) may be expressed as
gx(xvs)gy(yys)gz(zys), wherein gix(xys), gix(yys) and giz(zys) represent independent gain functions
of x, y and z coordinates for a virtual source's location.
           [113]       Similarly,           w(xm, ym, zm; X, yO, zO; s)        may          factor         as
 wx (x,.,; x,; s)w, (y,.,; y,;s)wz (z,.,; z,; s) , wherein wj(xys,; xo; s), wy(yvs; yo; s) and wz(zs,,;zo; s)
represent independent weight functions of x, y and z coordinates for a virtual source's
location. One such example is shown in Figure 7. In this example, weight function 710,
expressed as w,(xvs; x0,; s), may be computed independently from weight function 720,
expressed as wy(yvs; x0,; s). In some implementations, the weight functions 710 and 720 may
be gaussian functions, whereas the weight function wz(zys; z; s) may be a product of cosine
and gaussian functions.
           [114]       If          w(x,,zm; x0 , y, z0 ;s) can              be          factored           as
 w (x.; x;s)w, (y,,; y,; s)wz (z,.,; z,; s) , Equation 2 simplifies to:
 [fx(x,;s)fy(y 0 ;s)fz(z;s)I"l,           wherein
 fix(x";s)=           [g,(x,)wx;x 0 ;s)],
                  x
 fj(y0 ;s)=           [g,(y,)w(y,,;y 0 ;s)]   and
                 YS
 fz(z;s) =           [g,(z)w(z,;Z    0;s)]'.
                 z
                   S
           [115]       The functions f        may contain all the required information regarding the
virtual sources.          If the possible object positions are discretized along each axis, one can
express each function f            as a matrix. Each function f       may be pre-computed during the set
up process of block 505 (see Figure 5A) and stored in a memory system, e.g., as a matrix or
as a look-up table. At run-time (block 510), the look-up tables or matrices may be retrieved
from the memory system. The run-time process may involve interpolating, given an audio
object position and size, between the closest corresponding values of these matrices. In some
implementations, the interpolation may be linear.
                                                         26

         [116]   In some implementations, the audio object size contribution g/z" may be
combined with the "audio object neargain" result for the audio object position.                  As used
herein, the "audio object neargain" is a computed gain that is based on the audio object
position 615. The gain computation may be made using the same algorithm used to compute
each of the virtual source gain values. According to some such implementations, a cross-fade
calculation may be performed between the audio object size contribution and the audio object
neargain result, e.g., as a function of audio object size. Such implementations may provide
smooth panning and smooth growth of audio objects, and may allow a smooth transition
between the smallest and the largest audio object sizes. In one such implementation,
  total                        agi     X   YOZ;S)+        ()-ieXOYOZ;S,
 g""(xO,yO,z0 ;s)= a(s)g,"""'(x          0,y 0 , z;s)+  p(s)gi""(x 0,y0 ,z;s),    wherein
 S <SIde,      a = cos ((s/ s,,d)(;c /    2)}        f = sin((s / s,,d )(; /2))
 S  :S~qde     a = ,P3=1,
and wherein giz" represents the normalized version of the previously computed                   g, ze  .  In
some such implementations, sqd,,          =  0.2 . However, in alternative implementations, sxfade may
have other values.
[117]    According to some implementations, the audio object size value may be scaled up in
the larger portion of its range of possible values.                In some authoring implementations, for
example, a user may be exposed to audio object size values s,,,. e [0,1] which are mapped
into the actual size used by the algorithm to a larger range, e.g., the range [0, s.]ax ], wherein
smax > 1. This mapping may ensure that when size is set to maximum by the user, the gains
become truly independent of the object's position. According to some such implementations,
such mappings may be made according to a piece-wise linear function that connects pairs of
points (suser, Sinternal), wherein    Suser represents a user-selected audio object size and        Sinternal
represents a corresponding audio object size that is determined by the algorithm. According
to some such implementations, the mapping may be made according to a piece-wise linear
function that connects pairs of points (0, 0), (0.2, 0.3), (0.5, 0.9), (0.75, 1.5) and (1, Smax). In
one such implementation,      Smax   = 2.8.
         [118]   Figures 8A and 8B show an audio object in two positions within a
reproduction environment.          In these examples, the audio object volume 620b is a sphere
having a radius of less than half of the length or width of the reproduction environment 200a.
The reproduction environment 200a is configured according to Dolby 7.1. At the instant of
time depicted in Figure 8A, the audio object position 615 is relatively closer to the middle of
                                                       27

the reproduction environment 200a.       At the time depicted in Figure 8B, the audio object
position 615 has moved close to a boundary of the reproduction environment 200a. In this
example, the boundary is a left wall of a cinema and coincides with the locations of the left
side surround speakers 220.
         [119]  For aesthetical reasons, it may be desirable to modify audio object gain
calculations for audio objects that are approaching a boundary of a reproduction environment.
In Figures 8A and 8B, for example, no speaker feed signals are provided to speakers on an
opposing boundary of the reproduction environment (here, the right side surround speakers
225) when the audio object position 615 is within a threshold distance from the left boundary
805 of the reproduction environment. In the example shown in Figure 8B, no speaker feed
signals are provided to speakers corresponding to the left screen channel 230, the center
screen channel 235, the right screen channel 240 or the subwoofer 245 when the audio object
position 615 is within a threshold distance (which may be a different threshold distance) from
the left boundary 805 of the reproduction environment, if the audio object position 615 is also
more than a threshold distance from the screen.
         [120]  In the example shown in Figure 8B, the audio object volume 620b includes an
area or volume outside of the left boundary 805. According to some implementations, a fade
out factor for gain calculations may be based, at least in part, on how much of the left
boundary 805 is within the audio object volume 620b and/or on how much of the area or
volume of an audio object extends outside such a boundary.
         [121]  Figure 9 is a flow diagram that outlines a method of determining a fade-out
factor based, at least in part, on how much of an area or volume of an audio object extends
outside a boundary of a reproduction environment. In block 905, reproduction environment
data are received. In this example, the reproduction environment data include reproduction
speaker location data and reproduction environment boundary data.         Block 910 involves
receiving audio reproduction data including one or more audio objects and associated
metadata. The metadata includes at least audio object position data and audio object size data
in this example.
         [122]  In this implementation, block 915 involves determining that an audio object
area or volume, defined by the audio object position data and the audio object size data,
includes an outside area or volume outside of a reproduction environment boundary. Block
915 also may involve determining what proportion of the audio object area or volume is
outside the reproduction environment boundary.
         [123]  In block 920, a fade-out factor is determined. In this example, the fade-out
                                               28

factor may be based, at least in part, on the outside area. For example, the fade-out factor
may be proportional to the outside area.
         [124]    In block 925, a set of audio object gain values may be computed for each of a
plurality of output channels based, at least in part, on the associated metadata (in this
example, the audio object position data and the audio object size data) and the fade-out
factor.    Each output channel may correspond to at least one reproduction speaker of the
reproduction environment.
         [125]    In some implementations, the audio object gain computations may involve
computing contributions from virtual sources within an audio object area or volume. The
virtual sources may correspond with plurality of virtual source locations that may be defined
with reference to the reproduction environment data. The virtual source locations may or
may not be spaced uniformly. For each of the virtual source locations, a virtual source gain
value may be computed for each of the plurality of output channels. As described above, in
some implementations these virtual source gain values may be computed and stored during a
set-up process, then retrieved for use during run-time operations.
         [126]    In some implementations, the fade-out factor may be applied to all virtual
source gain values corresponding to virtual source locations within a reproduction
environment. In some implementations, g/ize may be modified as follows:
 g|   = g-""bod +(fade-out factor)xg"''         I , wherein
 fade - out factor= 1,         if do
                                   0 1 d > s,
 fade -out factor=doI,ld/s,            if dound <S
wherein dhoond represents the minimum distance between an audio object location and a
boundary of the reproduction environment and           gzbound represents the contribution of virtual
sources along a boundary. For example, referring to Figure 8B,              glbound may represent the
contribution of virtual sources within the audio object volume 620b and adjacent to the
boundary 805. In this example, like that of Figure 6A, there are no virtual sources located
outside of the reproduction environment.
         [127]    In alternative implementations, gf'e may be modified as follows:
 giz =l   gi "'(fade-out         factor)xg|"''de I ,
wherein glo"'side represents audio object gains based on virtual sources located outside of a
reproduction environment but within an audio object area or volume. For example, referring
to Figure 8B, glo"'side may represent the contribution of virtual sources within the audio object
                                                    29

volume 620b and outside of the boundary 805. In this example, like that of Figure 6B, there
are virtual sources both inside and outside of the reproduction environment.
         [128]  Figure 10 is a block diagram that provides examples of components of an
authoring and/or rendering apparatus. In this example, the device 1000 includes an interface
system 1005. The interface system 1005 may include a network interface, such as a wireless
network interface. Alternatively, or additionally, the interface system 1005 may include a
universal serial bus (USB) interface or another such interface.
         [129]  The device 1000 includes a logic system 1010. The logic system 1010 may
include a processor, such as a general purpose single- or multi-chip processor.    The logic
system 1010 may include a digital signal processor (DSP), an application specific integrated
circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device,
discrete gate or transistor logic, or discrete hardware components, or combinations thereof
The logic system 1010 may be configured to control the other components of the device
1000.    Although no interfaces between the components of the device 1000 are shown in
Figure 10, the logic system 1010 may be configured with interfaces for communication with
the other components.        The other components may or may not be configured for
communication with one another, as appropriate.
         [130]  The logic system 1010 may be configured to perform audio authoring and/or
rendering functionality, including but not limited to the types of audio authoring and/or
rendering functionality described herein. In some such implementations, the logic system
1010 may be configured to operate (at least in part) according to software stored in one or
more non-transitory media. The non-transitory media may include memory associated with
the logic system 1010, such as random access memory (RAM) and/or read-only memory
(ROM). The non-transitory media may include memory of the memory system 1015. The
memory system 1015 may include one or more suitable types of non-transitory storage
media, such as flash memory, a hard drive, etc.
         [131]  The display system 1030 may include one or more suitable types of display,
depending on the manifestation of the device 1000. For example, the display system 1030
may include a liquid crystal display, a plasma display, a bistable display, etc.
         [132]  The user input system 1035 may include one or more devices configured to
accept input from a user. In some implementations, the user input system 1035 may include a
touch screen that overlays a display of the display system 1030. The user input system 1035
may include a mouse, a track ball, a gesture detection system, a joystick, one or more GUIs
and/or menus presented on the display system 1030, buttons, a keyboard, switches, etc. In
                                                30

some implementations, the user input system 1035 may include the microphone 1025: a user
may provide voice commands for the device 1000 via the microphone 1025.             The logic
system may be configured for speech recognition and for controlling at least some operations
of the device 1000 according to such voice commands.
        [133]  The power system 1040 may include one or more suitable energy storage
devices, such as a nickel-cadmium battery or a lithium-ion battery. The power system 1040
may be configured to receive power from an electrical outlet.
        [134]  Figure 11 A is a block diagram that represents some components that may be
used for audio content creation.    The system 1100 may, for example, be used for audio
content creation in mixing studios and/or dubbing stages. In this example, the system 1100
includes an audio and metadata authoring tool 1105 and a rendering tool 1110.          In this
implementation, the audio and metadata authoring tool 1105 and the rendering tool 1110
include audio connect interfaces 1107 and 1112, respectively, which may be configured for
communication via AES/EBU, MADI, analog, etc. The audio and metadata authoring tool
1105 and the rendering tool 1110 include network interfaces 1109 and 1117, respectively,
which may be configured to send and receive metadata via TCP/IP or any other suitable
protocol. The interface 1120 is configured to output audio data to speakers.
        [135]  The system 1100 may, for example, include an existing authoring system, such
as a Pro ToolsTM system, running a metadata creation tool (i.e., a panner as described herein)
as a plugin.   The panner could also run on a standalone system (e.g., a PC or a mixing
console) connected to the rendering tool 1110, or could run on the same physical device as
the rendering tool 1110.     In the latter case, the panner and renderer could use a local
connection, e.g., through shared memory. The panner GUI could also be provided on a tablet
device, a laptop, etc. The rendering tool 1110 may comprise a rendering system that includes
a sound processor that is configured for executing rendering methods like the ones described
in Figs. 5A-C and Fig. 9.      The rendering system may include, for example, a personal
computer, a laptop, etc., that includes interfaces for audio input/output and an appropriate
logic system.
        [136]  Figure 11 B is a block diagram that represents some components that may be
used for audio playback in a reproduction environment (e.g., a movie theater). The system
1150 includes a cinema server 1155 and a rendering system 1160 in this example.           The
cinema server 1155 and the rendering system 1160 include network interfaces 1157 and
1162, respectively, which may be configured to send and receive audio objects via TCP/IP or
any other suitable protocol.     The interface 1164 is configured to output audio data to
                                              31

speakers.
         [137]  Various modifications to the implementations described in this disclosure may
be readily apparent to those having ordinary skill in the art. The general principles defined
herein may be applied to other implementations without departing from the spirit or scope of
this disclosure. Thus, the claims are not intended to be limited to the implementations shown
herein, but are to be accorded the widest scope consistent with this disclosure, the principles
and the novel features disclosed herein.
                                               32

                                             CLAIMS
1.      A method of rendering input audio including at least one audio object and associated
metadata, the method comprising:
         determining a plurality of virtual audio objects based on the metadata;
         for each virtual audio object of the plurality of virtual audio objects, determining a
location of the corresponding virtual audio object;
         for each virtual audio object of the plurality of virtual audio objects, determining a
gain of the corresponding virtual audio object;
         for each virtual audio object, rendering the audio object and the plurality of virtual
audio objects to the one or more speaker feeds, wherein the plurality of virtual audio objects
are rendered based on the corresponding locations and gains of the plurality of virtual audio
objects.
2.      An apparatus for rendering input audio including at least one audio object and
associated metadata, the method comprising:
         a processor configured to determine a plurality of virtual audio objects based on the
metadata, the processor further configured to:
         for each virtual audio object of the plurality of virtual audio objects, determining a
location of the corresponding virtual audio object;
         for each virtual audio object of the plurality of virtual audio objects, determining a
gain of the corresponding virtual audio object;
         for each virtual audio object, rendering the audio object and the plurality of virtual
audio objects to the one or more speaker feeds, wherein the plurality of virtual audio objects
are rendered based on the corresponding locations and gains of the plurality of virtual audio
objects.
                                                 33

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
