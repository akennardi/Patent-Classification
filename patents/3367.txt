ABSTRACT
A computing system, comprising:
        an image source;
        a microprocessor programmed with a building structure estimation
system of instructions to generate a roof report that includes a 3D model of a
roof, the system of instructions including:
               a roof modeling engine,
               an image acquisition engine,
               a point pattern matching computation engine, and
               a report generation engine;
        a non-transitory computer-readable memory having microprocessor
executable instructions stored thereon; and
        a network selectively communicatively coupled to the image source, the
memory, and the microprocessor.

              STATISTICAL POINT PATTERN MATCHING TECHNIQUE
       CROSS REFERENCE TO RELATED APPLICATIONS
[0001]        This application is a divisional application of Australian patent application
       No. 2014212188, the entire contents of which are to be taken as incorporated
       herein by reference. This application claims the benefit under 35 U.S.C. §
       119(e) to U.S. Non Provisional Application No. 13/959,406 filed August 5, 2013,
       U.S. Non Provisional Application No. 13/844,572 filed March 15, 2013, and U.S.
       Provisional Application No. 61/759,251 filed January 31, 2013, all of which are
       hereby incorporated by reference in their entireties.
       BACKGROUND
       Field of the Invention:
[0002]        This disclosure relates generally to a computer-based method of
       rendering an image of a three-dimensional structure from several views of the
       structure. In particular, the computer-based method for creating a roof model
       relies upon a statistical method of point pattern matching of an aerial top plan
       view and one or more aerial perspective views of the roof.
       Description of the Related Art:
[0003]        The building and insurance industries have historically relied on human
       beings to evaluate roofs in person, to determine labor and materials needed for
       repair or replacement. Sending a claims adjuster or a roofing specialist out to
       each individual property can be time-consuming and costly, especially when
       many buildings need to be evaluated, for instance, following natural disasters
       such as hurricanes, floods, hail storms, and the like. If the roof is complex,
       including multiples of roof features such as hips, gables, dormers, and the like,
       it may not be feasible for a human being to climb onto the roof to take actual
       measurements. Consequently, insurance evaluations for such roofs often rely
                                              1

       on estimates made by a person standing on the ground, who can only give a
       rough estimate of the sizes of the roof features.
:0004]               Recently, imaging and mapping technologies have made possible
       computer-based calculations of roof dimensions from aerial photographs. A top
       plan view ("orthogonal") looking straight down from above, together with one or
       more different perspective views ("oblique") looking at an angle from, for example,
       the north, south, east, or west directions, can be sufficient to generate a three
       dimensional (3D) reconstruction depth model of the roof structure. Such a 3D
       model can include roof features such as dormers, gables, hips, and the like that
       can add a significant degree of complexity to a roof. Accurate measurements of
       roof lines and areas can then be made from the 3D model.                Such methods
       pertaining to roofs are described in U.S. Patent Nos. 8,088,436 and 8,170,840.
       Furthermore, there are many techniques known in the art (e.g., in the field of
       computer vision) for generation of 3D models of structures from multiple
       perspective images. Such 3D architectural images have many applications in the
       building industry.
[0005]               In the generation of a 3D roof model, combining information from
       orthogonal and oblique views of the roof entails an initial step of point matching.
       First, a set of points is identified on each view to represent the shape of the
       roof, and then corresponding points from each view are matched. Usually the
       points are at locations where the roof lines merge. Human beings can easily
       recognize and associate points from the orthogonal view that match points on
       the oblique view. For example, it is easy for a human being to identify which
        points are the highest points on either view of the roof, and which points are the
        lowest. However, requiring human intervention to perform the step of point
        matching precludes achieving a fully computer-generated model. When many
        roof models need to be processed, it is inefficient and cumbersome to interrupt
        a computerized process to obtain a human-generated data set, and then
        resume the computerized process.
                                                      2
        9481810_1 (GHMaulers)P100512AU

-0006]             Unfortunately, existing computerized point matching algorithms for
       performing such a task (e.g., geometrical contour matching, or the scale
       invariant feature transform (SIFT) technique of feature matching) tend to be
       complex and exhaustive. For example, if N=20 points are identified on an
       orthogonal view of a roof and M=10 points are identified on an oblique view of
       the roof, if all possible permutations are considered, nearly 200,000 potential
       point match sets must be evaluated to complete the step of point matching.
       Thus, a more efficient method of computer-based point matching is desirable.
       SUMMARY
 0007]             A statistical point pattern matching technique can be used to narrow
       down a full set of point match set permutations by assigning probabilities to the
       point match sets, so that it is not necessary to evaluate all possible matches.
       By applying a variational analysis algorithm, a computational system can
       estimate which point combinations are most likely to match one another without
       using either a predetermined or an interactive threshold specification. Applying
       such a variational analysis to, for example, a 20 x 10 point set can reduce the
       number of permutations evaluated from about 200,000 to about 20, with a
       matching error of only about 1%. In a study of 127 different roofs, the average
       match time to complete the statistical point pattern matching method was about
       20 seconds.
                   The statistical point pattern matching technique described herein
       includes a transform process and an evaluation process. The transform
       process includes selecting a subset of points from the orthogonal view,
       generating radial point patterns for each aerial view, calculating the origin of
       each point pattern, performing a metadata transform, and fitting the orthogonal
       point pattern to the oblique point pattern in an iterative fashion. Then, each fit
       iteration can be evaluated by representing the shape of the point pattern as a
       radial function, and Fourier-transforming the radial function to produce a feature
       space plot. A feature profile correlation function can then be computed to relate
                                                      3
       9481810_1(GHMauers)P100512AU

the point match sets. From the correlation results, a vote occupancy table can
be generated to evaluate the variance of the point match sets, indicating which
sets of points are most likely to match one another.
        The systems and methods for point pattern matching as described
herein may be used as part of, in combination with, or in conjunction with,
various processes for generating 3D models of building structures such as
roofs, from orthogonal and oblique perspective imagery. The systems and
methods for point pattern matching as described herein may also be
applicable to processes for generating 3D models of other types of structures
other than building structures.
        In accordance with an aspect, the present invention provides a
computing system, comprising: an image source; a microprocessor
programmed with a building structure estimation system of instructions to
generate a roof report that includes a 3D model of a roof, the system of
instructions including: a roof modeling engine, an image acquisition engine, a
point pattern matching computation engine, and a report generation engine; a
non-transitory computer-readable memory having microprocessor-executable
instructions stored thereon; and a network selectively communicatively
coupled to the image source, the memory, and the microprocessor.
BRIEF DESCRIPTION OF THE DRAWINGS
        Figure 1 is an exemplary block diagram of a computing system for
practicing embodiments of the statistical point pattern matching method
described herein, and for practicing embodiments of a building structure
estimation system based on the point pattern matching.
        Figure 2 is an exemplary flow diagram of a microprocessor based
method of generating a 3D model of a roof.
                                        4

             Figure 3 is an exemplary flow diagram of a statistical method of point
pattern matching, according to one embodiment.
             Figure 4 is a top plan (orthogonal) view of an exemplary roof derived
from an aerial photograph, showing exemplary orthogonal point assignments
represented by numerals.
             Figure 5 is a perspective (oblique) view of the exemplary roof shown in
Figure 1, derived from an aerial photograph, showing exemplary oblique point
assignments represented by numerals.
             Figure 6 is a radial plot showing a spatial distribution of an oblique point
pattern corresponding to the oblique point assignments shown in Figure 2
superimposed on the oblique view.
             Figure 7 is a schematic diagram showing different coordinate systems
that relate to camera angles used in obtaining the orthogonal and oblique views
by aerial imaging.
             Figure 8 is a radial plot showing a spatial distribution of the oblique point
pattern shown in Figure 6, and a spatial distribution of an orthogonal point
pattern superimposed on the oblique view.
             Figure 9 is a radial plot corresponding to the oblique point pattern shown
in Figure 6.
             Figure 10 is a plot of angular variational data obtained by sampling the
spatial distribution shown in Figure 9.
             Figure 11 is a feature space plot of the Fourier transform of the angular
variational data shown in Figure 10.
             Figure 12 is a vote occupancy table showing results of twenty-one
exemplary point pattern matching trials.
             Figure 13 is a spatial occupancy point spread function after fitting the
orthogonal and oblique data.
             Figure 14 is a spatial occupancy point spread function created after the
orthogonal data has been transformed to the oblique reference frame, but prior
to fitting the data.
                                                5
9481810_1 (GHMallers) P100512 AUJ

                   Figure 15 is a point match table showing most likely point match pairs
       based on statistical data for the 21-trial example shown in Figures 12 and 13.
       DETAILED DESCRIPTION
-0008]             Embodiments described herein provide enhanced computer- and
       network-based methods, techniques, and systems for point pattern matching
       computation for handling variant density data within obscured non-linear
       deformed orthogonal and oblique perspective imagery of a structure of a
       building.
 0009]             Figure 1 is an example block diagram of a computing system 100 for
       practicing embodiments of the statistical point pattern matching method
       described herein, and for practicing embodiments of a building structure
       estimation system that can include, as a component, the point pattern matching
       method described herein.
 0010]             One or more general purpose or special purpose computing systems
       may be used to implement the computer-and network-based methods,
       techniques, and systems for point pattern matching computation described
       herein and for practicing embodiments of a building structure estimation system
       based on the point pattern matching. More specifically, the computing system
       100 may comprise one or more distinct computing systems present at
       distributed locations. In addition, each block shown may represent one or more
       such blocks as appropriate to a specific embodiment or may be combined with
       other blocks. Moreover, in one example embodiment, the various components
       of a building structure estimation system 114 may physically reside on one or
       more machines, which use standard inter-process communication mechanisms
       (e.g., TCP/IP) to communicate with each other. Further, the building structure
       estimation system 114 may be implemented in software, hardware, firmware, or
       in some combination to achieve the capabilities described herein.
[0011]             In the embodiment shown, the computing system 100 comprises a
       computer memory ("memory") 102, a display 104, one or more Central
                                                     6
       9481810_1(GHMauers)P100512AU

       Processing Units ("CPU") 106, Input/Output devices 108 (e.g., keyboard,
       mouse, joystick, track pad, CRT or LCD display, and the like), other computer
       readable media 110, and network connections 112. A building structure
       estimation system 114 is shown residing in the memory 102. In other
       embodiments, some portion of the contents, some of, or all of the components
       of the building structure estimation system 114 may be stored on and/or
       transmitted over the other computer-readable media 110. The components of
       the building structure estimation system 114 preferably execute on one or more
       CPUs 106 and generate roof estimate reports, as described herein. Other code
       or programs 116 (e.g., a Web server, a database management system, and the
       like) and potentially other data repositories, such as data repository 118, also
       reside in the memory 102, and preferably execute on one or more CPUs 106.
       Not all of the components in Figure 1 are required for each implementation. For
       example, some embodiments embedded in other software do not provide
       means for user input, for display, for a customer computing system, or other
       components.
:0012]              In a typical embodiment, the building structure estimation system 114
       includes an image acquisition engine 120; a roof modeling engine 122; a point
       pattern matching computation engine 124 within, or as part of, the roof
       modeling engine 122; a report generation engine 126, an interface engine 128,
       and a data repository 130. Other and/or different modules may be
       implemented. In addition, the building structure estimation system 114 interacts
       via a communication system 132 with an image source computing system 134,
       an operator computing system 136, and/or a customer computing system 138.
       Communication system 132 may utilize one or more protocols to communicate
       via one or more physical networks, including local area networks, wireless
       networks, dedicated lines, internets, the Internet, and the like.
[0013]              The image acquisition engine 120 performs at least some of the
       functions described herein, with respect to the processes described herein. In
       particular, the image acquisition engine 120 interacts with the image source
                                                     7
       9481810 1 (GHMaters) P100512AU

       computing system 134 to obtain one or more images of a building, and stores
       those images in the building structure estimation system data repository 130 for
       processing by other components of the building structure estimation system
       114.
:0014]              The roof modeling engine 122 performs at least some of the functions
       described with reference to Figures 2-13 below. In particular, the roof modeling
       engine 122 generates a model based on one or more images of a building that
       are obtained from the building structure estimation system data repository 130
       or directly from the image source computing system 134. As noted, model
       generation may be performed semi-automatically, based on at least some
       inputs received from the operator computing system 136.
[0015]              In addition, at least some aspects of the model generation may be
       performed automatically. In particular, to generate a 3D model, the roof
       modeling engine 122 may use output from the point pattern matching
       computation engine 124 which employs variational analysis to compute a point
       to-point probability spread function. The point-to-point probability spread
       function can be used to estimate which individual points on one image of the
       building most likely match corresponding points on another image of the
       building (i.e., the point pattern matching computation engine endeavors to
       "optimize" point matching associations). This estimation may be based on
       adaptive predominance voting probabilities generated from shape pattern
       matches. The shape pattern matches can be created by comparing
       combinations of points on an orthogonal view of the building with specific other
       points on an oblique view of the building, and as further described herein.
[0016]               These automated and semi-automated techniques are further described
       with respect to Figures 2-13 below. After the roof modeling engine 122
       generates a model, it can store the generated model in the building structure
       estimation system data repository 130 for further processing by other
       components of the building structure estimation system 114.
                                                      8
       9481810_1 (GHMatters) P100512AU

 0017]             The report generation engine 126 generates roof reports based on
       models stored in the building structure estimation system data repository 130.
       Generating a roof report may include preparing one or more views of a 3D
       model of the roof, annotating those views with indications of various
       characteristics of the model, such as dimensions of roof features (e.g., ridges,
       valleys, gables, hips, and the like), slopes of sections of the roof, calculated
       surface areas of sections of the roof, etc. In some embodiments, the report
       generation engine 126 facilitates transmission of roof measurement information
       that may or may not be incorporated into a roof estimate report. For example,
       the report generation engine 126 may transmit roof measurement information
       based on, or derived from, models stored in the building structure estimation
       system data repository 130. Such roof measurement information may be
       provided to, for example, third-party systems that generate roof estimate
       reports based on the provided information.
:0018]              The interface engine 128 provides a view and a controller that facilitate
       user interaction with the building structure estimation system 114 and its
       various components. For example, the interface engine 128 may implement a
       user interface engine. The display 104 may provide an interactive graphical
       user interface (GUI) that can be used by a human user operating the operator
       computing system 136 to interact with, for example, the roof modeling engine
       122, to perform functions such as specifying regions of interest for automated
       roof detection, specifying and/or identifying specific points on images of
       buildings, etc. In at least some embodiments, access to the functionality of the
       interface engine 128 is provided via a Web server, possibly executing as one of
       the other programs 116.
[0019]              In some embodiments, the interface engine 128 provides programmatic
       access to one or more functions of the building structure estimation system
        114. For example, the interface engine 128 provides a programmatic interface
        (e.g., as a Web service, static or dynamic library, etc.) to one or more roof
       estimation functions of the building structure estimation system 114 that may be
                                                    9
       9481810_1 (GHMaters)P100512AU

       invoked by one of the other programs 116 or some other module. In this
       manner, the interface engine 414 facilitates the development of third-party
       software, such as user interfaces, plug-ins, adapters (e.g., for integrating
       functions of the building structure estimation system 114 into desktop
       applications, Web-based applications, mobile device applications, embedded
       applications, etc.), and the like. In addition, the interface engine 128 may be, in
       at least some embodiments, invoked or otherwise accessed via remote entities,
       such as the operator computing system 136, the image source computing
       system 134, and/or the customer computing system 138, to access various roof
       estimation functionality of the building structure estimation system 114.
:0020]              The building structure estimation system data repository 130 stores
       information related to the roof estimation functions performed by the building
       structure estimation system 114. Such information may include image data,
       model data, and/or report data. Furthermore, the data repository 130 may
       include information related to automatic roof detection and/or image
       registration. Such information includes, for example, historical image data. In
       addition, the building structure estimation system data repository 130 may
       include information about customers, operators, or other individuals or entities
       associated with the building structure estimation system 114.
[0021]              In an example embodiment, components/modules of the building
       structure estimation system 114 can be implemented using standard
       programming techniques. For example, the building structure estimation
       system 114 may be implemented as a "native" executable running on the CPU
       106, along with one or more static or dynamic libraries. In other embodiments,
       the building structure estimation system 114 can be implemented as
       instructions processed by a virtual machine that executes as one of the other
       programs 116. In general, a range of programming languages known in the art
       may be employed for implementing such example embodiments, including
       representative implementations of various programming language paradigms,
       including but not limited to, object-oriented languages (e.g., Java, C++, C#,
                                                     10
       9481810_1 (GHMaters) P100512AU

       Matlab TM, Visual Basic.NET, Smalltalk, and the like), functional languages (e.g.,
       ML, Lisp, Scheme, and the like), procedural languages (e.g., C, Pascal, Ada,
       Modula, and the like), scripting languages (e.g., Perl, Ruby, Python, JavaScript,
       VBScript, and the like), and declarative languages (e.g., SQL, Prolog, and the
       like).
:0022]             The embodiments described above may also use well-known
       synchronous or asynchronous client-server computing techniques. However,
       the various components may be implemented using more monolithic
       programming techniques as well, for example, as an executable running on a
       single CPU computer system, or alternatively decomposed using a variety of
       structuring techniques known in the art, including but not limited to,
       multiprogramming, multithreading, client-server, or peer-to-peer, running on one
       or more computer systems each having one or more CPUs. Some
       embodiments execute concurrently and asynchronously, and communicate
       using message passing techniques. Equivalent synchronous embodiments are
       also supported by a building structure estimation system implementation. Also,
       other functions could be implemented and/or performed by each
       component/module, and in different orders, and by different
       components/modules, yet still achieve the functions of the building structure
       estimation system 114.
[0023]             In addition, programming interfaces to the data stored as part of the
       building structure estimation system 114, such as in the building structure
       estimation system data repository 130, can be available by standard
       mechanisms such as through C, C++, Cf, and Java APIs; libraries for
       accessing files, databases, or other data repositories; through scripting
       languages such as XML; or through Web servers, FTP servers, or other types
       of servers providing access to stored data. For example, the building structure
       estimation system data repository 130 may be implemented as one or more
       database systems, file systems, memory buffers, or any other technique for
                                                   11
       9481810_1(GHMauers) P100512AU

      storing such information, or any combination of the above, including
      implementations using distributed computing techniques.
0024]              Also, the example building structure estimation system 114 can be
      implemented in a distributed environment comprising multiple, even
      heterogeneous, computer systems and networks. For example, in one
      embodiment, the image acquisition engine 120, the roof modeling engine 122,
      the report generation engine 126, the interface engine 128, and the data
      repository 130 are all located in physically different computer systems. In
      another embodiment, various modules of the building structure estimation
      system 114, including the point pattern matching computation engine 124, are
      hosted each on a separate server machine and are remotely located from the
      tables which are stored in the data repository 130. Also, one or more of the
      modules may themselves be distributed, pooled or otherwise grouped, such as
      for load balancing, reliability or security reasons. Different configurations and
      locations of programs and data are contemplated for use with techniques of
      described herein. A variety of distributed computing techniques are appropriate
      for implementing the components of the illustrated embodiments in a distributed
      manner including but not limited to TCP/IP sockets, RPC, RMI, HTTP, Web
      Services (XML-RPC, JAX-RPC, SOAP, and the like).
0025]              Furthermore, in some embodiments, some or all of the components of
      the building structure estimation system 114 are implemented or provided in
      other manners, such as at least partially in firmware and/or hardware, including,
      but not limited to one or more application-specific integrated circuits (ASICs),
      standard integrated circuits, controllers (e.g., by executing appropriate
      instructions, and including microcontrollers and/or embedded controllers), field
      programmable gate arrays (FPGAs), complex programmable logic devices
      (CPLDs), and the like Some or all of the system components and/or data
      structures may also be stored (e.g., as software instructions or structured data)
      on a computer-readable medium, such as a hard disk, a memory, a network, or
      a portable media article to be read by an appropriate drive or via an appropriate
                                                    12
      9481810_1 (GHMaers) P100512AU

       connection. The system components and data structures may also be stored
       as data signals (e.g., by being encoded as part of a carrier wave or included as
       part of an analog or digital propagated signal) on a variety of computer
       readable transmission mediums, which are then transmitted, including across
       wireless-based and wired/cable-based mediums, and may take a variety of
       forms (e.g., as part of a single or multiplexed analog signal, or as multiple
       discrete digital packets or frames). Such computer program products may also
       take other forms in other embodiments. Accordingly, embodiments of this
       disclosure may be practiced with other computer system configurations.
[0026]              Figure 2 shows a high-level computer-based method of obtaining a three
       dimensional (3D) reconstruction depth model of a structure from two or more
       2D image views of the structure, according to one embodiment. Such a method
       can be carried out by a software-based building structure estimation system
       114 (of instructions) to construct a 3D model of a roof structure from two or
       more aerial images of the roof, taken from different perspectives.
[0027]              At 202, the image acquisition engine 120 acquires two or more 2D image
       views of the roof. In the embodiment as described herein, one view is an
       orthogonal view, looking straight down on the roof. In practice, such an
       orthogonal view can be obtained either by aerial imaging or by imaging from
       space (e.g., satellite imaging). Oblique images can be obtained by aerial
       imaging, satellite imaging, or ground-based imaging. Desirably, four or more
       oblique images can be obtained, however, embodiments described herein are
       effective with as few as one oblique image. The orthogonal and oblique images
       can be produced by a digital camera or the images can be digitized from
       images captured on film. Images can be expressly gathered for the purposes
       described herein, or alternatively, images can be acquired from a database, for
       example, a Google Earth TM database of satellite images, or a Google MapsTM
       database of ground-based images.
                    At 204, the point pattern matching computation engine 124 identifies roof
       features and assigns representative points (x, y) from each view for point
                                                     13
       94B1810_1 (GHMaters)P100512AU

      matching. For example, Figure 4 shows a substantially orthogonal view 350 of
      an exemplary building roof, on which are indicated twenty orthogonal points
      having point index numbers 0 through 19. Point assignments may favor
      locations at which various roof lines converge. For example, points 5 and 7 are
      both located at what appears to be the top of a gable, where four roof lines
      converge. A carport 400 serves as a landmark in this example that can be
      used to quickly identify the two ends of the roof. It is noted that the roof location
      of point 5 (401) is farther from the carport 400 than is the roof location of point 7
      (402).
                   Figure 5 shows an oblique view 403 of the same roof shown in Figure 1,
      on which are indicated twenty oblique points having point index numbers 0
      through 19. However, in the present example, orthogonal point assignments
      shown in Figure 4 are not necessarily at the same roof location as the
      corresponding oblique points in Figure 5. For example, point 5 in Figure 4
      corresponds to point 2 in Figure 5; and point 7 in Figure 4 corresponds to point
      9 in Figure 5.
0028]              At 206, the point pattern matching computation engine 124 performs a
      method of statistical point pattern matching to align the multiple views. Point
      pattern matching associates similar points within multiple images of the
      structure from different perspectives. Figure 3 shows in greater detail the tasks
      needed to complete step 206 in particular, in which a computer-based,
      statistical method of point pattern matching 300, as described herein, can be
      carried out by the point pattern matching computation engine 124. Step 206 of
      the method is further illustrated in Figures 4-13 using a roof example, as
       described below. However, step 206 of the method can be applied similarly to
       other structures (e.g., walls, floors, roads, bridges, vehicles, and the like) as
       part of a computer-based 3D model generation for such structures, which
       currently rely on human-assisted point pattern matching (e.g., see U.S. Patent
       Application Nos. 13/757,712 and 13/757,694, which are hereby incorporated by
       reference in their entirety).
                                                    14
       9481810_1(GHMautes) P100512AU

            At 208, the roof modeling engine 122 calculates a distance between
matched points to derive height data (z).
            At 210, the roof modeling engine 122 can apply a perspective
transformation to generate a 3D view of the roof from the calculated (x,y,z)
coordinates.
             Once the 3D coordinates of the matched points are known, it is possible
to compute accurate spatial dimensions of each of the roof segments. Such
dimensions can then be sent to the report generation engine 126 for inclusion in
a roof report product that can be provided to an insurance adjuster,
homeowner, builder, or roofing contractor, for example.
             With reference to Figure 3, the objective in point matching is to
determine such corresponding pairs of points. At least three such point match
sets (from the twenty point match sets obtained in the present example) are
needed to match the orthogonal point pattern to the oblique point pattern.
 Desirably, the three sets of matched points are at opposite ends of the roof
structure, for example, one set at a high point of the roof, one set at one corner
of the roof, and a third set at a diagonally opposite corner of the roof.
             As mentioned above, point matching is an easy, intuitive task for a
human being, but a difficult one for a computer. Nevertheless, it would be
advantageous for computers to perform the point matching task so that the
 method 200 is a fully computer-based method that does not require human
 intervention to carry out certain steps.
             When M # N (i.e., the number of points, M, identified on the oblique view
differs from N, the number of points identified on the orthogonal view), the
 problem of point matching becomes more difficult. For example, instead of 20
 orthogonal points and 20 oblique points (having 400 possible point match
 combinations), there may be, for example, 20 orthogonal points and only 18
 oblique points. Such a difference may arise, for example, if, in the oblique
 perspective view, certain roof features are partly obscured by other roof
features. In such a case, a non-zero value of |M-NI is referred to as a "point
                                              15
9481810_1 (GHMauters)P100512AU

spread". Because it is unknown which 18 of the 20 orthogonal points are
represented on the oblique view, a conventional computer-based method would
evaluate all possible 18-point subsets of the 20 orthogonal points, to be
matched with the 18 oblique points. Such an exhaustive calculation is
impractical because the total number of point-matching runs would take too
long to complete using a standard desktop computer. Using the probabilistic
approach described herein, however, such an exhaustive calculation becomes
unnecessary.
             The present technique uses an iterative method to geometrically fit the
orthogonal and oblique sets of points thereby narrowing down the choices. The
iterative method uses the oblique point pattern ("scene") as a fixed reference,
and matches an orthogonal point pattern ("model") to the scene on a multi-trial
basis. For example, in a first trial, a first 18-point model is matched to the 18
point scene. Then, in a second trial, one or more points may be added to the
model, while other points are removed from the model, so that a second (e.g.
18-point) orthogonal point pattern, different from the point pattern used in the
first trial, can be matched to the scene. Hereinafter, the terms "model" and
"orthogonal point pattern" are used interchangeably; and the terms "scene" and
"oblique point pattern" are used interchangeably.
             The iterative process is repeated with various orthogonal point subsets
until, for example, 20 trials have been run. Then, trial statistics can be
summarized in a table (see the "Vote Occupancy Table" in Figure 12 below),
and evaluated to see which point matches recur. The method of point matching
300 described below is thus a statistical method that estimates the likelihood
that a certain orthogonal point from Figure 4 matches a certain oblique point
from Figure 5.
             Steps in the method 300 are illustrated by example below.
             At 301, a subset of points from the orthogonal view can be selected as a
model to use in an initial statistical trial. The selected subset defines an
orthogonal point pattern which can be transformed to the oblique image plane
                                              16
9481810_1 (GHMalte-) P100512AU

       and then fit to corresponding oblique points in the scene. As mentioned above,
       typically one or two points out of a 20-point set selected from the orthogonal
       view are omitted in each trial to match the oblique point pattern.
 0029]             At 302, an oblique origin can be computed as the centroid, or geometric
       center, of a point pattern shape defined by the oblique points. Likewise, an
       orthogonal origin can be computed as the centroid of a point pattern shape
       defined by the selected orthogonal points. Figure 6 shows an oblique radial
       point pattern 404 superimposed onto the oblique view 403. The oblique radial
       point pattern 404 includes twenty radii, each radius drawn from an origin to
       each one of the twenty oblique points. In this example, the origin is the central
       point located near point 9. Points 3 and 15 lie on approximately the same
       radius, and the points 18 and 19 lie on approximately the same radius. The
       centroid can be calculated as the average of the (x,y) coordinates of the twenty
       oblique points. Similarly, the orthogonal origin can be computed as the centroid
       of a shape defined by the 20 orthogonal points.
:0030]             Once the origin has been determined, a radial point pattern 404 can be
       generated for the orthogonal view 350 and the oblique view 403. Figure 7
       shows the oblique radial point pattern 404 and a corresponding orthogonal
       radial point pattern, both superimposed onto the oblique view 403. Because
       the distances between points in the oblique view 403 and the orthogonal view
       350 are different, neither the origins nor the radial point patterns are the same.
       Therefore, the radial point patterns contain information distinguishing the
       oblique view 403 from the orthogonal view 350. The task of point matching can
       therefore be reduced to a task of pattern matching, that is, one of matching the
       radial point patterns.
[0031]             Figure 9 shows the radial point pattern 404 removed from the oblique view
       403 and superimposed onto a pixel plot 406. In general, pixels are spatial units of
       an image. The pixel-space, or feature space, plot shown in Figure 9 facilitates
       measuring the lengths and angles of the radii.             The present inventor has
       recognized that the radial point pattern 404 is a type of shape signature, and that
                                                    17
       9481810_1(GHMatlers)P100512AU

       techniques used for shape matching by those of skill in the art of image processing
       can be applied with success to the problem of point pattern matching. Such
       techniques are discussed in an article entitled, "A Comparative Study on Shape
       Retrieval Using Fourier Descriptors with Different Shape Signatures," by
       Dengsheng Zhang and Guojun Lu, published in the Journal of Visual
       Communication and Image Representation, No. 14 (1), 2003, pp. 41-60.
-0032]             At 304, a geometrical metadata transform can be applied to the selected
       orthogonal point subset, or model. The term 'metadata' as used herein refers to
       information accompanying an aerial image, such as, for example, details about
       camera parameters used (e.g., focal length, lens aperture, shutter speed), the
       position of the camera (e.g., GPS coordinates of the aircraft at the time of image
       capture, airplane speed), the angular orientation of the camera, the time interval
       between image capture events, and the date and time the image was captured, as
       generally illustrated in Figure 7. The metadata transform can be, for example, a
       log-polar transform in which a first camera angle of the aircraft from which the
       orthogonal view was captured is transformed to a second camera angle of the
       aircraft from which the oblique view was captured. Such a metadata transform is
       described in greater detail in U.S. Patent No. 8,078,436 issued December 13,
       2011; 8,170,840 issued May 1, 2012; U.S. Patent No. 8,145,578 issued March 27,
       2012; and U.S. Patent No. 8,209152 issued June 26, 2012, each of which is
       assigned to the same assignee as is this patent application, and hereby
       incorporated by reference in their entireties.
                   At 305, it is decided whether or not to conduct another trial by choosing a
       new subset of points from the orthogonal view and repeating the geometrical
       metadata transform process to collect further statistical data. It is noted that, for
       each trial, as points are added or removed from the subset of orthogonal points,
       the orthogonal point pattern shape changes. Thus, for each trial, a new
       orthogonal origin is calculated, and a new radial point pattern 404 is generated.
       Once a geometrical transform is completed and the (orthogonal) model is fit to
                                                    18
       9A81B10_1(GHMaters) P100512AU

the (oblique) scene, a point-by-point nearest neighbor evaluation can be
conducted, starting at step 306.
             At 306, the statistical pattern matching algorithm can represent the radial
point pattern 404 as a waveform. This can be done by tracing the edges of the
radial point pattern 404 using a conventional edge tracing algorithm, and then
radially sampling the edge trace of the shape signature (radial point pattern
404) to generate a plot of r vs. Which can be refer red to by the term "angular
variational data" 408. The radial sampling waveform that corresponds to the
oblique radial point pattern 404 is shown in Figure 10. The amplitude of the
resulting waveform fluctuates between 0 and the longest radius drawn between
the origin of the point pattern and the farthest point.
             At 308, one method of evaluation entails calculating a two-dimensional
(2D) FFT and then computing a cross-correlation of the 2D FFT to obtain a 2D
correlation function. A fast Fourier transform (FFT) can be performed on the
angular variational data (r vs. Shown in Figure 10 to yield a Fourier space
plot of amplitude vs. wavenumber (k) for the oblique point pattern, as shown in
Figure 11.             Choosing a number of sampling points used to generate the radial
sampling waveform to be a power of two facilitates the FFT calculation. In this
example, 128 radial sampling points were extracted from a full set of about
2100 radial sampling points, for use in performing the FFT.
             Figure 11 also shows the corresponding Fourier space plot for the
orthogonal radial point pattern. The data points, which are the Fourier
coefficients, are Fourier descriptors of the radial point pattern shape i.e., they
represent the shape of the radial point pattern in the frequency domain. Low
frequency data points 410 correspond to low wavenumber values, wherein a
wavenumber k = 2#as is known in the art. The low               frequency data points
410 of the Fourier space plot shown in Figure 11 describe general shape
features of the radial point patterns (e.g., 404), while the higher frequency data
points 420 describe finer details of the shape of the radial point patterns 404.
An advantage of such Fourier space representations is that they are spatially
                                               19
9481810_1 (GHMaters)P100512AU

       normalized with respect to radius (i.e., scale invariant), and also rotationally and
       translationally invariant.
                    At 310, a statistical correlation between the two plots shown in Figure 11
       can be represented by a feature profile correlation function. The peak
       amplitude of the 2D correlation function indicates the highest probability of a
       match. Once the best 10 matches are indicated, they can be further evaluated
       on a point-by-point basis. For each oblique point that is deemed likely to
       belong in the subset that matches the orthogonal points, a spatial Gaussian
       distribution of nearest neighbors to that oblique point can be accumulated by
       performing a chi-squared clustering analysis. (A related chi-squared goodness
       of fit test is known to those skilled in the art as a test for variance in a normal
       statistical distribution.) In the present application, the chi-squared clustering
       analysis takes into account a weighted proximity of the nearest neighboring
       points. The spread of the Gaussian distribution is plotted as a map (i.e., as a
       function of area) in Figure 13 below.
-0033]              At 312, each of the trial outcomes given by their resulting calculated
       correlation probabilities 438 can be tabulated in a vote occupancy table 430,
       shown in Figure 12. Each one of the 21 rows of the table (labeled 0-20)
       represents a different trial. Orthogonal points that have been excluded from the
       subset used for that trial are indicated by an entry of "-1" substituted for the
       oblique point value. For example, in the first trial (row 0 of the table in Figure
       12), orthogonal point 15 has been excluded, and in the second trial (row 1 of
       the table in Figure 12), orthogonal point 3 has been excluded. Rows of the vote
       occupancy table 430 are sorted from best fit to worst fit according to a fit error
       value shown in the first column (436). Rows having a low fit error are at the top
       of the vote occupancy table, and rows having a high fit error are at the bottom
       of the table as shown in Figure 12. If,for example, a point-matched set (0,15)
       recurs in 20 of the 21 trials, it is concluded that (0,15) is likely to be a match.
       Figure 12 also shows, at 432, that the orthogonal point indicated by index
       number "13" likely matches the oblique point indicated by index number "11"
                                                       20
       9481810_1 (GHManers)P100512AU

       according to the "vote occupancy," or number of times the matched pair
       appears in the table. At 432, it is evident that, in the fourteenth trial, the oblique
       point 10 was matched to the orthogonal point 11, however, in all other trials the
       oblique point 11 was matched to the orthogonal point 13. Therefore, it is
       concluded that (13, 11) is likely a point matched set. Likewise, all of the
       matched pairs shown, which recur frequently in the vote occupancy table are
       found to have a high probability of being matched.
 0034]             At 314, the multi-trial fit data shown in the vote occupancy table can be
       plotted on a graph as a statistical point spread function, as shown in Figure 13.
       . Here, each point is considered individually, by looking radially outward from
       the point, and plotting the nearest neighbors to that point. If the oblique and
       orthogonal values coincide, with little point spread, (e.g., 440, 442), they are
       deemed a match. However, point pairs that are not likely to be matched have a
       large point spread (e.g., 444, 446). The data shown in Figure 15 referred to as
       a "Range Based Association Probability" (RBAP) gives a fit distance which is a
       measure of the spread associated with each point as shown in Figure 13.
       When the data points coincide, the RBAP (spread) is small (e.g., 440, 442).
       When the data points are spread out, the RBAP is large (e.g., 444, 446). Thus,
       a numerically small value in Figure 13 (e.g., the value of 0.056 associated with
       matched points (0,15) indicates a high confidence level of a match. Figure 14
       is presented for comparison with Figure 13. The data in Figure 14 has been
       plotted after completing a metadata transform, but prior to running the data
       fitting algorithm.
[0035]             Figure 15 shows a table 450 in which first and second columns consist of
       point match sets (Orthogonal, Oblique), for example, (0,15), (1,0), (2,1), and so
       forth, indicating which pairs the statistical model has determined are most likely
       matched.
                   At 316, a point match probability based on a statistical variance can be
       determined, which values are listed in Figure 15.           In this context, the RBAP can
       be thought of as a ranking based on a statistical error associated with each set
                                                       21
       94818101 (GHMaltes) P100512AU

      of matched points. Thus, if one were to choose the three best matches from
      the set of twenty point match sets, the three best choices are indicated by the
      lowest RBAP values, e.g., (0,15), (19,17), and (5,2). An overall association fit
      for the twenty sets of matched points (M=20, N=20) is determined to be C =
      41.24. Comparing the matched pairs to the points in Figures 4,5 demonstrates
      that the statistical point matching method 300 was successful, because all the
      pairs are indeed corresponding points on the two views of the roof. Figure 15
      also shows the oblique view 403 of the exemplary roof of Figure 5. Overlaid on
      the image of the roof is a shaded line drawing of a 3D model of the roof that
      was generated based on the twenty point match sets shown in the table 450
      between corresponding orthogonal and oblique points selected in Figures 4 and
      5.
0036]             The point pattern registration described in the point pattern registration
      and elevation computation of roof structures described in U.S. Patent
      Application Serial No. 13/646,466 filed October 5, 2012 entitled "Systems and
      Methods for Point-To-Point Registration Using Perspective Imagery from
      Independent Sources Without Image Acquisition Metadata" (Attorney docket
      number: 290115.408), which is hereby incorporated by reference in its entirety,
      may provide initial predefined point combinations of the orthogonal and oblique
      point assignments on the orthogonal and oblique roof imagery described herein
      for use by the systems and methods for point pattern matching described
      herein. In particular, the point pattern registration described in Application
      Serial No. 13/646,466 in one embodiment is performed by the system matching
      locations of identified particular points of interest on an image showing a
      substantially orthogonal view of a roof of a building to locations of identified
      particular points on an image showing a perspective view of the roof using
      simulated perspective change data. In one embodiment, point combinations
      resulting from this point pattern registration described in U.S. Patent Application
      Serial No. 13/646,466 may provide initial predefined point combinations of the
                                                   22
      94818101 (GHMatters)P100512AU

       orthogonal and oblique point assignments on the example orthogonal and
       oblique roof imagery used by the system described herein.
 0037]             Also, for example, the point pattern matching system described herein
       may be used within, as part of, or in conjunction with the system for point
       pattern registration and elevation computation of roof structures described in
       U.S. Patent Application Serial No. 13/646,466. In particular, various
       embodiments of the point pattern matching process described herein may be
       used to implement or supplement the variational point matching part of the
       process implemented by the system for point pattern registration and elevation
       computation of roof structures described in U.S. Patent Application Serial No.
        13/646,466.
:0038]             In one embodiment, the point pattern registration part of the process
       described in U.S. Patent Application Serial No. 13/646,466 that is performed by
       matching locations of identified particular points of interest on an image
       showing a substantially orthogonal view of a roof of a building to locations of
       identified particular points on an image showing a perspective view of the roof
       may use the processes of point pattern matching described herein instead of or
       as a supplement to using the simulated perspective change data described in
       U.S. Patent Application Serial No. 13/646,466 to match the points. Elevational
       data of the matched points may then be generated as described in U.S. Patent
       Application Serial No. 13/646,466 and used, for example in a process of
       generating a three dimensional (3D model) of the roof, such as the roof shown
       in the oblique and orthogonal imagery in Figures 1 and 2 herein.
[0039]             From the foregoing it will be appreciated that, although specific
       embodiments have been described herein for purposes of illustration, various
       modifications may be made without deviating from the spirit and scope of the
       present disclosure. For example, the methods, systems, and techniques for
       point pattern matching computation discussed herein are applicable to other
       architectures other than the illustrated architecture or a particular Building
       Structure Estimation System implementation. For example, such processes
                                                    23
       9481810_1(GHMattes) P100512AU

        and system may be utilized to generate 3D models of other structures, or
        objects appearing in images. Also, the methods and systems discussed herein
        are applicable to differing network protocols, communication media (optical,
        wireless, cable, etc.) and devices (such as wireless handsets, electronic
        organizers, personal digital assistants, portable email machines, game
        machines, pagers, navigation devices such as GPS receivers, etc.). Further,
        the methods and systems discussed herein may be utilized by and/or applied to
        other contexts or purposes, such as by or for solar panel installers, roof gutter
        installers, awning companies, HVAC contractors, general contractors, and the
        like, and/or insurance companies.
:0040]              The various embodiments described above can be combined to provide
       further embodiments. All of the U.S. patents, U.S. patent application publications,
        U.S. patent applications, foreign patents, foreign patent applications and non
        patent publications referred to in this specification and/or listed.\ Aspects of the
        embodiments can be modified, if necessary to employ concepts of the various
        patents, applications and publications to provide yet further embodiments.
[0041]              These and other changes can be made to the embodiments in light of the
       above-detailed description. In general, in the following claims, the terms used
       should not be construed to limit the claims to the specific embodiments disclosed
       in the specification and the claims, but should be construed to include all possible
       embodiments along with the full scope of equivalents to which such claims are
       entitled. Accordingly, the claims are not limited by the disclosure.
                                                 24
       9481810_1 (GHMalters)P100512AU

The claims defining the invention are as follows:
1.      A computing system, comprising:
        an image source;
        a microprocessor programmed with a building structure estimation
system of instructions to generate a roof report that includes a 3D model of a
roof, the system of instructions including:
               a roof modeling engine,
               an image acquisition engine,
               a point pattern matching computation engine, and
               a report generation engine;
        a non-transitory computer-readable memory having microprocessor
executable instructions stored thereon; and
        a network selectively communicatively coupled to the image source, the
memory, and the microprocessor.
2.      The computing system of claim 1, further comprising a display
communicatively coupled to the building structure estimation system.
3.      The computing system of claim 1 or claim 2, wherein the building
structure estimation system further includes a data repository.
                                         25

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
