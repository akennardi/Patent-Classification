Abstract
Methods and systems to prevent adverse exchange limit effects are disclosed. A
method of message management includes tracking, at a gateway, a transaction count
of trade messages communicated to an exchange via an exchange link. The method
includes defining a first transaction limit based on the transaction count, and
calculating a second transaction limit as a function of the first transaction limit,
wherein the second transaction -limit is to correspond to a reserve capacity associated
with the exchange link. The method includes assigning a message priority to each of
a plurality of trade messages to communicate to the exchange. The method includes
communicating trade messages of the plurality of trade messages having a first
message priority to the exchange when the transaction count is greater than the
second transaction limit, and delaying or rejecting trade messages of the plurality of
trade messages having a second message priority.
                                                                               3517228v1

                          4/8
      400STR
405    DEFINE A FIRST TRANSACTION LIMIT FOR THE
                     EXCHANGE LINK
410 CALCULATE A SECOND TRANSACTION LIMIT FOR THE
                     EXCHANGE LINK
420 COMMUNICATE TRADE MESSAGE TO AN EXCHANGE
                VIA THE EXCHANGE LINK
                          END
                       FIG. 4

                TITLE:           METHODS AND SYSTEMS TO PREVENT
                                ADVERSE EXCHANGE LIMIT EFFECTS
                                        BACKGROUND
[0001]      An electronic trading system generally includes a trading device in
communication with an electronic exchange. The electronic exchange sends information
about a market, such as prices and quantities, to the trading device. The trading device sends
messages, such as messages related to orders, to the electronic exchange. The electronic
exchange attempts to match quantity of an order with quantity of one or more contra-side
orders.
[0002]      Electronic exchanges often include messaging and/or transaction limits in their
systems: Some transaction limits may cause a halt in trading for all participants, while some
transaction limits may effect only a single trader's ability to execute orders. In some cases,
the transaction limits are not provided to the market participants.
                         BRIEF DESCRIPTION OF THE FIGURES
[00031      Certain embodiments are disclosed with reference to the following drawings.
[0004]      FIG. 1 illustrates a block diagram representative of an example electronic trading
system in which certain embodiments may be employed.
10005]      FIG. 2 illustrates a block diagram of another example electronic trading system in
which certain embodiments may be employed.
[0006]      FIG. 3 illustrates a block diagram of an example computing device which may be
used to implement the disclosed embodiments.
100071      FIG. 4 illustrates a flow diagram representative of example machine readable
instructions that may be executed to implement disclosed embodiments.
[00081      FIG. 5 illustrates a flow diagram representative of example machine readable
instructions that may be executed to implement disclosed embodiments.

10009]       FIG. 6 illustrates a flow diagram representative of example machine readable
instructions that may be executed to implement disclosed embodiments.
[0010]       FIG. 7 illustrates a block diagram of an example message management system
that can implement the example machine readable instructions of FIGS. 4-6.
[0011]       FIG. 8 illustrates a flow diagram representative of example machine instructions
that may be executed to implement disclosed embodiments.
[0012]       Certain embodiments will be better understood when read in conjunction with the
provided figures, which illustrate examples. It should be understood, however, that the
embodiments are not limited to the arrangements and instrumentality shown in the attached
figures.
                                   DETAILED DESCRIPTION
10013]       This disclosure relates generally to electronic trading environments and, more
particularly, to methods and systems to prevent adverse exchange limit effects.
100141       An exchange may impose a limit on the number of transactions that may be
communicated to the exchange over a period of time (e.g., an exchange transaction limit or
throttle limit). However, the exchange may not provide (or inform) the limit to the
participants of the trading system. When the transaction limit is reached, the exchange may
hold or delay additional received trade messages, may charge or otherwise penalize the
sender for the trade messages in excess of the transaction limit or may simply reject trade
messages received after the transaction limit is reached. Prior systems make no
determination of the transaction limit and, thus, continue to send or communicate trade
messages to the exchange only to have them rejected by the exchange. As a result, high
priority or "critical" trade messages may not be executed.
10015]       Embodiments disclosed herein recognize that to prevent these adverse exchange
limit effects, high priority trade messages should be communicated to the exchange when
they will be executed by the exchange. Unlike prior trading systems, embodiments disclosed
herein implement reserving a number of trade messages to ensure that high priority trade
messages can be communicated to the exchange without receiving a rejection message or
other undesirable outcomes. Specifically, the reserve capacity is calculated by monitoring the
throughput of transactions communicated to the exchanges and the corresponding response

 messages. According to embodiments disclosed herein, the exchange transaction limit can be
 discovered (or defined) by tracking the number of transactions communicated before a
 rejection message is received. According to embodiments disclosed herein, an artificial
transaction limit may be calculated as a function of the exchange transaction limit. In some
 examples, the difference between the exchange transaction limit and the artificial transaction
 limit creates a reserve capacity of trade messages. In some examples, the low priority trade
 messages are rejected (e.g., canceled, delayed, etc.) while the reserve capacity is used to
communicate the high priority trade messages to the exchange. In some such embodiments,
the reserve capacity may be used to communicate high priority trade messages while
preventing (or canceling) low priority trade messages.
 [0016]      Although this description discloses embodiments including, among other
components, software executed on hardware, it should be noted that the embodiments are
merely illustrative and should not be considered as limiting. For example, it is contemplated
that any or all of these hardware and software components may be embodied exclusively in
hardware, exclusively in software, exclusively in firmware, or in any combination of
hardware, software, and/or firmware. Accordingly, certain embodiments may be
implemented in other ways.
1.       BRIEF DESCRIPTION OF CERTAIN EMBODIMENTS
 [0017]      Certain embodiments provide a method of message management including
tracking, at a gateway, a transaction count of trade messages communicated to an exchange
via an exchange link. The example method also includes defining a first transaction limit
based on the transaction count. The example method also includes calculating a second
transaction limit as a function of the first transaction limit, wherein the second transaction
limit is to correspond to a reserve capacity associated with the exchange link. The example
method also includes assigning a message priority to each of a plurality of trade messages to
communicate to the exchange. The example method also includes communicating trade
messages of the plurality of trade messages having a first message priority to the exchange
when the transaction count is greater than the second transaction limit, and delaying trade
messages of the plurality of trade messages having a second message priority.
[0018]       Certain embodiments provide a method of message management including
communicating, via a gateway, a plurality of trade messages to an exchange. The example
method also includes tracking a transaction count of trade messages communicated via an
                                                  3

exchange link. The example method also includes calculating a message latency associated
with each of a plurality of response messages received at the gateway in response to the
plurality of trade messages. The example method also includes defining a transaction limit
based on the transaction count and the message latency.
 10019]     Certain embodiments provide a method of message management including
communicating, via a gateway, a plurality of trade messages to an exchange. The example
method also includes tracking a transaction count of trade messages communicated via an
exchange link. The example method also includes, in response to receiving a rejection
message via the exchange link, defining a transaction limit based on the transaction count.
 [00201     Certain embodiments provide a method of message management including
defining a transaction limit of an exchange link. The example method also includes
calculating, via a processor, a second transaction limit based on the transaction limit, wherein
the second transaction limit is to correspond to a percentage of the transaction limit. The
example method also includes communicating, via the exchange link, a plurality of trade
messages to an exchange based on the second transaction limit and an order policy.
 [0021]     Certain embodiments provide a method of message management including
tracking, at an exchange, a transaction count of trade messages received via an exchange link
from a gateway. The example method also includes comparing the transaction count to a
portion of a transaction limit to form an indication. The example method also includes
communicating a warning message to the gateway based on the indication.
[0022]      Certain embodiments provide a method of message management including
assigning a message priority to each of a plurality of trade messages at a gateway, wherein
the gateway is to communicate each of the plurality of trade messages to an exchange. The
example method also includes, when a transaction count is a portion of a transaction limit,
wherein the transaction count is to correspond to a number of trade messages communicated
to the exchange, communicating trade messages of the plurality of trade messages having a
first message priority to the exchange, and delaying trade messages of the plurality of trade
messages having a second message priority.
II.     EXAMPLE ELECTRONIC TRADING SYSTEM
10023]      FIG. I illustrates a block diagram representative of an example electronic trading
system 100 in which certain embodiments may be employed. The system 100 includes a
                                                4

trading device 110, a gateway 120, and an exchange 130. The trading device 110 is in
communication with the gateway 120. The gateway 120 is in communication with the
exchange 130. As used herein, the phrase "in communication" encompasses direct
communication and/or indirect communication through one or more intermediary
components. The example electronic trading system 100 depicted in FIG. 1 may be in
communication with additional components, subsystems, and elements to provide additional
functionality and capabilities without departing from the teaching and disclosure provided
herein.
 [0024]      In operation, the trading device 110 may receive market data from the exchange
 130 through the gateway 120. A user may utilize the trading device 110 to monitor this
market data and/or base a decision to send an order message to buy or sell one or more
tradeable objects to the exchange 130.
[0025]       Market data may include data about a market for a tradeable object. For example,
market data may include the inside market, market depth, last traded price ("LTP"), a last
traded quantity ("LTQ"), or a combination thereof. The inside market is the lowest available
ask price (best offer) and the highest available bid price (best bid) in the market for a
particular tradable object at a particular point in time (since the inside market may vary over
time). Market depth refers to quantities available at the inside market and at other prices
away from the inside market. Due to the quantity available, there may be "gaps" in market
depth.
[00261      A tradeable object is anything which may be traded. For example, a certain
quantity of the tradeable object may be bought or sold for a particular price. A tradeable
object may include, for example, financial products, stocks, options, bonds, future contracts,
currency, warrants, funds derivatives, securities, commodities, swaps, interest rate products,
index-based products, traded events, goods, or a combination thereof. A tradeable object
may include a product listed and/or administered by an exchange (for example, the exchange
130), a product defined by the user, a combination of real or synthetic products, or a
combination thereof. There may be a synthetic tradeable object that corresponds and/or is
similar to a real tradeable object.
100271      An order message is a message that includes a trade order. A trade order may be,
for example, a command to place an order to buy or sell a tradeable object, a command to
initiate managing orders according to a defined trading strategy, a command to change or
                                                  5

cancel a previously submitted order (for example, modify a working order), an instruction to
an electronic exchange relating to an order, or a combination thereof.
[0028]       The trading device 110 may include one or more electronic computing platforms.
For example, the trading device 110 may include a desktop computer, hand-held device,
laptop, server, a portable computing device, a trading terminal, an embedded trading system,
a workstation, an algorithmic trading system such as a "black box" or "grey box" system,
cluster of computers, or a combination thereof. As another example, the trading device 110
may include a single or multi-core processor in communication with a memory or other
storage medium configured to accessibly store one or more computer programs, applications,
libraries, computer readable instructions, and the like, for execution by the processor.
100291       As used herein, the phrases "configured to" and "adapted to" encompass that an
element, structure, or device has been modified, arranged, changed, or varied to perform a
specific function or for a specific purpose.
10030]       By way of example, the trading device 110 may be implemented as a personal
computer running a copy of X_TRADER@, an electronic trading platform provided by
Trading Technologies International, Inc. of Chicago, Illinois ("Trading Technologies"). As
another example, the trading device 110 may be a server running a trading application
providing automated trading tools such as ADLTM, AUTOSPREADER@, and/or
AUTOTRADER Tm, also provided by Trading Technologies. In yet another example, the
trading device 110 may include a trading terminal in communication with a server, where
collectively the trading terminal and the server are the trading device 110.
[0031]       The trading device 110 is generally owned, operated, controlled, programmed,
configured, or otherwise used by a user. As used herein, the phrase "user" may include, but
is not limited to, a human (for example, a trader), trading group (for example, group of
traders), or an electronic trading device (for example, an algorithmic trading system). One or
more users may be involved in the ownership, operation, control, programming,
configuration, or other use, for example.
[0032]       The trading device 110 may include one or more trading applications. As used
herein, a trading application is an application that facilitates or improves electronic trading.
A trading application provides one or more electronic trading tools. For example, a trading
application stored by a trading device may be executed to arrange and display market data in
                                                 6

one or more trading windows. In another example, a trading application may include an
automated spread trading application providing spread trading tools. In yet another example,
a trading application may include an algorithmic trading application that automatically
processes an algorithm and performs certain actions, such as placing an order, modifying an
existing order, deleting an order. In yet another example, a trading application may provide
one or more trading screens. A trading screen may provide one or more trading tools that
allow interaction with one or more markets. For example, a trading tool may allow a user to
obtain and view market data, set order entry parameters, submit order messages to an
exchange, deploy trading algorithms, and/or monitor positions while implementing various
trading strategies. The electronic trading tools provided by the trading application may
always be available or may be available only in certain configurations or operating modes of
the trading application.
[00331      A trading application may include computer readable instructions that are stored
in a computer readable medium and executable by a processor. A computer readable medium
may include various types of volatile and non-volatile storage media, including, for example,
random access memory, read-only memory, programmable read-only memory, electrically
programmable read-only memory, electrically erasable read-only memory, flash memory, any
combination thereof, or any other tangible data storage device. As used herein, the term non
transitory or tangible computer readable medium is expressly defined to include any type of
computer readable storage media and to exclude propagating signals.
[0034]      One or more components or modules of a trading application may be loaded into
the computer readable medium of the trading device I10 from another computer readable
medium. For example, the trading application (or updates to the trading application) may be
stored by a manufacturer, developer, or publisher on one or more CDs or DVDs, which are
then loaded onto the trading device 110 or to a server from which the trading device 110
retrieves the trading application. As another example, the trading device 110 may receive the
trading application (or updates to the trading application) from a server, for example, via the
Internet or an internal network. The trading device 110 may receive the trading application
or updates when requested by the trading device 110 (for example, "pull distribution") and/or
un-requested by the trading device 110 (for example, "push distribution").
100351      The trading device 110 may be adapted to send order messages. For example, the
order messages may be sent through the gateway 120 to the exchange 130. As another
                                                7

example, the trading device 110 may be adapted to send order messages to a simulated
exchange in a simulation environment which does not effectuate real-world trades.
[0036]      The order messages may be sent at the request of a user. For example, a trader
may utilize the trading device 110 to send an order message or manually input one or more
parameters for a trade order (for example, an order price and/or quantity). As another
example, an automated trading tool provided by a trading application may calculate one or
more parameters for a trade order and automatically send the order message. In some
instances, an automated trading tool may prepare the order message to be sent but not
actually send it without confirmation from a user.
(00371      An order message may be sent in one or more data packets or through a shared
memory system. For example, an order message may be sent from the trading device 110 to
the exchange 130 through the gateway 120. The trading device 110 may communicate with
the gateway 120 using a local area network, a wide area network, a wireless network, a
virtual private network, a TI line, a T3 line, an integrated services digital network ("ISDN")
line, a point-of-presence, the Internet, and/or a shared memory system, for example.
[0038]      The gateway 120 may include one or more electronic computing platforms. For
example, the gateway 120 may be implemented as one or more desktop computer, hand-held
device, laptop, server, a portable computing device, a trading terminal, an embedded trading
system, workstation with a single or multi-core processor, an algorithmic trading system such
as a "black box" or "grey box" system, cluster of computers, or any combination thereof.
100391      The gateway 120 may facilitate communication. For example, the gateway 120
may perform protocol translation for data communicated between the trading device 110 and
the exchange 130. The gateway 120 may process an order message received from the trading
device 110 into a data format understood by the exchange 130, for example. Similarly, the
gateway 120 may transform market data in an exchange-specific format received from the
exchange 130 into a format understood by the trading device 110, for example.
[0040]      The gateway 120 may include a trading application, similar to the trading
applications discussed above, that facilitates or improves electronic trading. For example, the
gateway 120 may include a trading application that tracks orders from the trading device 110
and updates the status of the order based on fill confirmations received from the exchange
 130. As another example, the gateway 120 may include a trading application that coalesces

market data from the exchange 130 and provides it to the trading device 110. In yet another
example, the gateway 120 may include a trading application that provides risk processing,
calculates implieds, handles order processing, handles market data processing, or a
combination thereof.
100411      In certain embodiments, how the gateway 120 interacts with the exchange 130 is
referred to as an exchange link. For example, the gateway 120 may communicate with the
exchange 130 via an exchange link using a local area network, a wide area network, a virtual
private network, a TI line, a T3 line, an ISDN line, a point-of-presence, the Internet, and/or a
shared memory system.
100421      The exchange 130 may be owned, operated, controlled, or used by an exchange
entity. Example exchange entities include the CME Group, the London International
Financial Futures and Options Exchange, the Intercontinental Exchange, and Eurex. The
exchange 130 may include an electronic matching system, such as a computer, server, or
other computing device, which is adapted to allow tradeable objects, for example, offered for
trading by the exchange, to be bought and sold. The exchange 130 may include separate
entities, some of which list and/or administer tradeable objects and others which receive and
match orders, for example. The exchange 130 may include an electronic communication
network ("ECN"), for example.
10043]      The exchange 130 may be an electronic exchange. The exchange 130 is adapted
to receive order messages and match contra-side trade orders to buy and sell tradeable
objects. Unmatched trade orders may be listed for trading by the exchange 130. The trade
orders may include trade orders received from the trading device 110 or other devices in
communication with the exchange 130, for example. For example, typically the exchange
130 will be in communication with a variety of other trading devices (which may be similar
to trading device 110) which also provide trade orders to be matched.
[0044]      The exchange 130 is adapted to provide market data. Market data may be
provided in one or more messages or data packets or through a shared memory system. For
example, the exchange 130 may publish a data feed to subscribing devices, such as the
trading device 110 or gateway 120. The data feed may include market data.
[00451      The system 100 may include additional, different, or fewer components. For
example, the system 100 may include multiple trading devices, gateways, and/or exchanges.
                                                9

In another example, the system 100 may include other communication devices, such as
middleware, firewalls, hubs, switches, routers, servers, exchange-specific communication
equipment, modems, security managers, and/or encryption/decryption devices.
III.    EXPANDED EXAMPLE ELECTRONIC TRADING SYSTEM
 [00461     FIG. 2 illustrates a block diagram of another example electronic trading system
200 in which certain embodiments may be employed. In this example, a trading device 2 10a
is in communication with an exchange 230a through a gateway 220a. The following
discussion mainly focuses on the trading device 210a, gateway 220a, and the exchange 230a.
However, the trading device 210a may also be connected to and communicate with any
number of gateways 220n connected to exchanges 230n. The communication between the
trading device 110a and other exchanges 230n may be the same, similar, or different than the
communication between the trading device 210a and exchange 230a. Generally, each
exchange has its own preferred techniques and/or formats for communicating with a trading
device, a gateway, the user, or another exchange.
 [0047]     The trading device 210a, which may be similar to the trading device 110 in FIG.
 1, may include a server 212a in communication with a trading terminal 214a. The server
212a may be located geographically closer to the gateway 120 than the trading terminal 214a.
As a result, the server 212a gains latency benefits that are not afforded to the trading terminal
214a. In operation, the trading terminal 214a may provide a trading screen to a user and
communicate commands to the server 212a for further processing. For example, a trading
algorithm may be deployed to the server 212a for execution based on market data. The
server 212a may execute the trading algorithm without further input from the user. In another
example, the server 212a may include a trading application providing automated trading tools
and communicate back to the trading terminal 214a. The trading device 2 10a may include,
additional, different, or fewer components.
10048]      The trading device 2 10a may communicate with the gateway 220a using one or
more communication networks. As used herein, a communication network is any network,
including the Internet, which facilitates or enables communication between, for example, the
trading device 210a, the gateway 220a and the exchange 220a. For example, as shown in
FIG. 2, the trading device 2 10a may communicate with the gateway 220a across a multicast
communication network 202a. The data on the network 202a may be logically separated by
subject (for example, prices, orders, or fills). As a result, the server 212a and trading terminal
                                                 10

214a can subscribe to and receive data (for example, data relating to prices, orders, or fills)
depending on their individual needs.
[0049]      The gateway 220a, which may be similar to the gateway 120 of FIG. 1, may
include a price server 222a, order server 224a, and fill server 226a. The gateway 220a may
include additional, different, or fewer components. The price server 222a may process price
data. Price data includes data related to a market for one or more tradeable objects. The
order server 224a may process order data. Order data is data related to a user's trade orders.
For example, order data may include order messages, confirmation messages, or other types
of messages. The fill server collects and provides fill data. Fill data includes data relating to
one or more fills of trade orders. For example, the fill server 226a may provide a record of
trade orders, which have been routed through the order server 224a, that have and have not
been filled. The servers 222a, 224a, 226a may run on the same machine or separate
machines.
100501      The gateway 220a may communicate with the exchange 230a using one or more
communication networks (or exchange links within a network). For example, as shown in
FIG. 2, there may be two communication networks connecting the gateway 220a and the
exchange 230a. The network (or exchange link) 204a may be used to communicate market
data to the price server 222a. In some instances, the exchange 230a may include this data in a
data feed that is published to subscribing devices. The network (or exchange link) 206a may
be used to communicate order data. In some examples, the exchange 230a may be associated
with a maximum number of transactions that may be communicated via an exchange link
over a transaction interval (e.g., a transaction period, an order entry interval, etc.). For
example, transactions communicated to the exchange 230a that exceed the transaction limit
during a transaction interval may not be executed by the exchange 230a.
[00511      The exchange 230a, which may be similar to the exchange 130 of FIG. 1, may
include an order book 232a and a matching engine 234a. The exchange 230a may include
additional, different, or fewer components. The order book 232a is a database that includes
data relating to unmatched quantity of trade orders. For example, an order book may include
data relating to a market for a tradeable object, such as the inside market, market depth at
various price levels, the last traded price, and the last traded quantity. The matching engine
234a may match contra-side bids and offers. For example, the matching engine 234a may
execute one or more matching algorithms that match contra-side bids and offers. A sell order
                                                 It

is contra-side to a buy order with the same price. Similarly, a buy order is contra-side to a sell
order with the same price.
10052]      In operation, the exchange 230a may provide price data from the order book 232a
to the price server 222a and order data and/or fill data from the matching engine 234a to the
order server 224a. Servers 222a, 224a, 226a may translate and communicate this data back
to the trading device 2 10a. The trading device 2 1Oa, for example, using a trading application,
may process this data. For example, the data may be displayed to a user. In another example,
the data may be utilized in a trading algorithm to determine whether a trade order should be
submitted to the exchange 230a. The trading device 2 10a may prepare and send an order
message to the exchange 230a.
10053]      In certain embodiments, the gateway 220a is part of the trading device 2 10a. For
example, the components of the gateway 220a may be part of the same computing platform
as the trading device 210a. As another example, the functionality of the gateway 220a may
be performed by components of the trading device 210a. In certain embodiments, the
gateway 220a is not present. Such an arrangement may occur when the trading device 21 Oa
does not need to utilize the gateway 220a to communicate with the exchange 230a, for
example. For example, if the trading device 210a has been adapted to communicate directly
with the exchange 230a.
[00541      Additional trading devices 210b - 210e, which are similar to trading device 210a,
may be connected to one or more of the gateways 220a - 220n and exchanges 230a - 230n.
Furthermore, additional gateways, similar to the gateway 220a, may be in communication
with multiple exchanges, similar to the exchange 230a. Each gateway may be in
communication with one or more different exchanges, for example. Such an arrangement
may, for example, allow one or more trading devices 210a to trade at more than one exchange
(and/or provide redundant connections to multiple exchanges).
IV.      EXAMPLE COMPUTING DEVICE
[0055]      FIG. 3 illustrates a block diagram of an example computing device 300 which
may be used to implement the disclosed embodiments. The trading device 110 of FIG. I may
include one or more computing devices 300, for example. The gateway 120 of FIG. I may
include one or more computing devices 300, for example. The exchange 130 of FIG. I may
include one or more computing devices 300, for example.
                                                I2

[00561       The computing device 300 includes a communication network 310, a processor
312, a memory 314, an interface 316, an input device 318, and an output device 320. The
computing device 300 may include additional, different, or fewer components. For example,
multiple communication networks, multiple processors, multiple memory, multiple
interfaces, multiple input devices, multiple output devices, or any combination thereof, may
be provided. As another example, the computing device 300 may not include an input device
318 or output device 320.
[00571       As shown in FIG. 3, the computing device 300 may include a processor 312
coupled to a communication network 3 10. The communication network 310 may include a
communication bus, channel, electrical or optical network, circuit, switch, fabric, or other
mechanism for communicating data between components in the computing device 300. The
communication network 310 may be communicatively coupled with and transfer data
between any of the components of the computing device 300.
10058]       The processor 312 may be any suitable processor, processing unit, or
microprocessor. The processor 312 may include one or more general processors, digital
signal processors, application specific integrated circuits, field programmable gate arrays,
analog circuits, digital circuits, programmed processors, and/or combinations thereof, for
example. The processor 312 may be a single device or a combination of devices, such as one
or more devices associated with a network or distributed processing. Any processing strategy
may be used, such as multi-processing, multi-tasking, parallel processing, and/or remote
processing. Processing may be local or remote and may be moved from one processor to
another processor. In certain embodiments, the computing device 300 is a multi-processor
system and, thus, may include one or more additional processors which are communicatively
coupled to the communication network 310.
10059]       The processor 312 may be operable to execute logic and other computer readable
instructions encoded in one or more tangible media, such as the memory 314. As used
herein, logic encoded in one or more tangible media includes instructions which may be
executable by the processor 3 12 or a different processor. The logic may be stored as part of
software, hardware, integrated circuits, firmware, and/or micro-code, for example. The logic
may be received from an external communication device via a communication network such
as the network 340. The processor 312 may execute the logic to perform the functions, acts,
or tasks illustrated in the figures or described herein.
                                                 13

 [00601     The memory 314 may be one or more tangible media, such as computer readable
storage media, for example. Computer readable storage media may include various types of
volatile and non-volatile storage media, including, for example, random access memory,
read-only memory, programmable read-only memory, electrically programmable read-only
memory, electrically erasable read-only memory, flash memory, any combination thereof, or
any other tangible data storage device. As used herein, the term non-transitory or tangible
computer readable medium is expressly defined to include any type of computer readable
medium and to exclude propagating signals. The memory 314 may include any desired type
of mass storage device including hard disk drives, optical media, magnetic tape or disk, etc.
100611      The memory 314 may include one or more memory devices. For example, the
memory 314 may include local memory, a mass storage device, volatile memory, non
volatile memory, or a combination thereof The memory 314 may be adjacent to, part of,
programmed with, networked with, and/or remote from processor 312, so the data stored in
the memory 314 may be retrieved and processed by the processor 312, for example. The
memory 314 may store instructions which are executable by the processor 312. The
instructions may be executed to perform one or more of the acts or functions described herein
or shown in the figures.
10062]      The memory 314 may store a trading application 330. In certain embodiments,
the trading application 330 may be accessed from or stored in different locations. The
processor 312 may access the trading application 330 stored in the memory 314 and execute
computer-readable instructions included in the trading application 330.
[00631      In certain embodiments, during an installation process, the trading application
may be transferred from the input device 318 and/or the network 340 to the memory 314.
When the computing device 300 is running or preparing to run the trading application 330,
the processor 312 may retrieve the instructions from the memory 314 via the communication
network 310.
V.      EXAMPLES OF PREVENTING ADVERSE EXCHANGE LIMIT EFFECTS AT
        THE GATEWAY
[00641      As described above, gateways may facilitate communication between trading
devices and exchanges via network connections. The network connection between a gateway
and an exchange may be referred to as an exchange link. For example, the exchange link
allows non-exchange software (e.g., software operating on the example gateway 120 of FIG.
                                               1A

1) to interact with exchange software (e.g., software operating on the example exchange 130
of FIG. 1). One gateway may manage different exchange links between one or more
exchanges. In some examples, the exchange charges a gateway for the use or creation of an
exchange link. To realize the most value from the exchange link, different traders and/or
trading devices (e.g., the example trading device 110 of FIG. 1) share the exchange link. As
a result, one exchange link between the exchange and the gateway communicates trade
messages from several trading devices. However, this also leads to situations where some
participants of the trading system (e.g., trading devices) are unaware of the activity in the
trading system.
[00651       Some exchanges impose limits on the use of the exchange link. For example, the
exchange may stop trading a tradeable object if the price of the tradeable object changes more
than a certain percentage over a period of time. This type of limit (e.g., a "circuit breaker")
effects all participants (e.g., gateways and/or trading devices) downstream from the
exchange. A participant is downstream from an exchange if the exchange can communicate a
message down to the participant. Other limits may effect only a portion of participants
downstream from the exchange. For example, some exchanges impose a transaction limit or
throttle limit for an exchange link. That is, an exchange imposes an upper limit (e.g., an
exchange transaction limit) on the number of trade messages communicated to the exchange
over the exchange link. Trade messages (e.g., trade orders) received when the exchange
transaction limit is reached may be rejected by the exchange. In some examples, the
exchange cancels (or deletes) a trade message when it is rejected. In other examples, the
exchange delays executing the trade message (e.g., includes an artificial delay) rather than
canceling the trade message. In some instances, the exchange transaction limit for the
exchange link is not provided to the downstream participants. As a result, a participant learns
when a trade message exceeds the exchange transaction limit based on the response to the
trade message received from the exchange (e.g., a rejection message).
 [00661      As multiple participants may share an exchange link and the exchange transaction
limit may not be known to the participants, no participant is likely to believe that their low
volume of trade orders could exceed the exchange transaction limit. However, taken
together, any one of the participants may consume the full exchange transaction limit and
cause other participants' trade orders to be rejected (e.g., canceled or artificially delayed). As
a result, participants are unaware when "critical" trade orders may be rejected. For example,
executing high priority trade messages may be needed for a participant to "get flat in a market
                                                 11

position." That is, rejecting a trade message may cause a participant to end up with a surplus
or deficit of a commodity. Thus, it is beneficial to lower the exchange transaction limit (e.g.,
calculate an artificial or operational transaction limit), which results in a reserve capacity that
can be used to communicate high priority (or critical) trade orders.
10067]      FIGS. 4-6 are flow diagrams representative of example operations that can be
executed to implement the teachings of this disclosure. The example operations of FIGS. 4-6
can be implemented by, for example, the example gateway 120 of FIG. 1 and/or the example
gateway 220a of FIG. 2. While the example gateway 120 of FIG. I is described as executing
the example operations of FIGS. 4-6 below, any suitable device can execute the example
operations of FIGS. 4-6. The example operations of FIGS. 4-6 implement preventing adverse
exchange limit effects by calculating an artificial transaction limit that is less than the
exchange transaction limit of the exchange link so that a reserve capacity of trade messages is
available to communicate high priority trade messages.
[0068]      To prevent adverse exchange limit effects, trade messages are communicated
based on an artificial (or operational) transaction limit of an exchange link. In the example of
FIG. 4, an artificial (or operational) transaction limit is calculated for the exchange link based
on an exchange transaction limit. The example process 400 of FIG. 4 begins by defining an
exchange transaction limit for an exchange link (block 405). Settings at the example
exchange 130 limit the number of trade messages communicated over a time period (e.g.,
during a transaction interval) over an exchange link (e.g., a transaction limit). For example,
the exchange 130 having a five second transaction interval may set a transaction limit of 1000
transactions per transaction interval for the exchange link. As a result, trade messages
communicated once the transaction limit is reached may not be executed (during the
transaction interval). In some examples, the transaction interval is a sliding window. For
example, the exchange 130 limits the number of trade messages to 1000 during a sliding, five
second window. That is, during any continuous five second period, a maximum number of
1000 trade messages can be communicated via the exchange link. In some examples, the
transaction intervals are independent and defined time periods. For example, a five second
transaction interval starts at a zero second mark and concludes at a five second mark. In
some examples, the exchange transaction limit is known (e.g., the exchange may broadcast
the exchange transaction limit or may provide the exchange transaction limit when requested
by the gateway). In other examples, the exchange transaction limit is estimated by the
gateway. In some examples, the exchange transaction limit varies based on the time of day,

the market conditions, etc. Thus, the exchange transaction limit is monitored (or
calculated/estimated) periodically or aperiodically throughout the trading period.
 [00691      FIG. 5 is a flow diagram representative of example operations that can be
executed to implement block 405 of FIG. 4, which defines the exchange transaction limit. In
the example of FIG. 5, the exchange transaction limit is calculated based on feedback
received from the example exchange 130. The example process of FIG. 5 begins by
determining whether the exchange transaction limit for the exchange link is known (block
505). In some examples, the exchange 130 may provide the transaction limit for the
exchange link to the example gateway 120. When the exchange transaction limit is provided
by the example exchange 130, that transaction limit is stored (e.g., recorded by the example
gateway 120). The example process of FIG. 5 then ends and control continues to block 410
of FIG. 4.
10070]       When the exchange transaction limit is not known to the example gateway 120
(block 505), a determination is made whether the example exchange 130 implements an
artificial delay when the exchange transaction limit is reached (block 510). For example, the
example exchange 130 may delay executing a trade order rather than deleting the trade order.
When the example exchange 130 does not implement an artificial delay, the throughput of
trade messages communicated via the exchange link is tracked (block 515) and the response
messages received from the example exchange 130 are monitored (block 520). By tracking
the throughput over a period of time, the number of trade messages communicated to the
example exchange 130 is known. As a result, when a rejection message in response to a trade
message is received from the example exchange 130 (block 520), the exchange transaction
limit is calculated based on the tracked throughput prior to receiving the rejection message
(block 525). For example, if the tracked throughput of trade messages per second over a five
second period is 298, 296, 299, 301 and 300, but a rejection message is received in response
to trade message number 301 during the fourth second (block 520), a 300 trade messages per
transaction interval exchange transaction limit for the exchange link is calculated (block 525).
The example process of FIG. 5 then ends and control continues to block 410 of FIG. 4.
100711       When the example exchange 130 does implement an artificial delay (block 510),
an average message latency for trade messages communicated via the exchange link is
calculated (block 530). In the illustrated example, the average message latency is calculated
by monitoring the round-trip time of trade messages. That is, an average of a time between
                                                17

when a trade message is communicated by the example gateway 120 and when a response
message to the trade message is received by the gateway 120 is calculated. The average
message latency may be calculated by recording and tracking the message identifier and time
stamps associated with each trade message communicated through the gateway 120.
Alternatively, the gateway 120 may be configured to track message identifiers and record
time information as each trade message is received and/or transmitted. The example process
tracks the throughput of trade messages communicated (block 535) and compares a current
message latency to the average message latency (block 540). That is, because the example
exchange 130 implements an artificial delay when the transaction limit is reached, a spike in
the message latency indicates the transaction limit was reached. As a result, when a message
latency is different from the average message latency (block 540), the exchange transaction
limit is calculated based on the throughput prior to the change (block 525). In some
examples, the current message latency is compared to a running average of message latencies
to smooth out the latencies. The example process of FIG. 5 then ends and control proceeds to
block 410 of FIG. 4.
[00721        Returning to the example process of FIG. 4, an artificial (or operational)
transaction limit is calculated based on the exchange transaction limit (block 410). The
artificial transaction limit is a limit imposed by the gateway 120 that is less than the exchange
transaction limit. The difference creates a reserve capacity of trade message to use. In some
examples, the reserve capacity is accessed in accordance with a usage policy. A usage policy
may specify a priority order for trade messages to communicate via the exchange link. For
example, when a transaction count (e.g., the number of trade messages communicated (or
sent) during the transaction interval) reaches the artificial transaction limit, the reserve
capacity is accessed to communicate trade messages according to the usage policy. As a
result, high priority trade messages (e.g., trade messages that improve the inside market) may
be ensured to be executed by the example exchange 130. For example, a trade message
canceling a trade order, a trade message adding a trade order and a second trade message
canceling a second trade order are received by the example gateway 120 with a reserve
capacity of two trade messages. According to an example usage policy, a trade message
canceling a trade order is prioritized over a trade message adding or changing a trade order.
As each trade message communicated to the example exchange 130 counts towards the
exchange transaction limit, and the example gateway 120 has a reserve capacity of two trade
messages, the gateway 120 communicates the two trade messages canceling trade orders to
                                                 18

the exchange 130 via the exchange link. In some examples, the gateway 120 cancels the
trade message adding the trade order. In some other examples, the gateway 120 delays
communicating the trade message adding the trade order until the next transaction interval.
In some other examples, the usage policy controls the volume of message traffic once the
artificial (or operational) transaction limit has been reached. For example, the usage policy
may limit the number of messages communicated in a given time period to prevent reaching
the exchange transaction limit. In some other examples, the usage policy limits which traders
may make trades once the artificial (or operational) transaction limit is reached. For example,
upon reaching the artificial transaction limit, the usage policy restricts communicating trade
messages to traders who have been designated as a market maker (e.g., a trader who quotes a
buy price and a sell price for a tradeable object to facilitate trading in that tradeable object),
and/or to any trader who has an unhedged position (e.g., an increased risk position in a
tradeable object by not assuming a position in a contrary (or opposing or offsetting) tradeable
object).
[00731       The artificial transaction limit is calculated as a function of the exchange
transaction limit. In the illustrated example, the artificial transaction limit is a portion (or
fraction, percentage, etc.) of the exchange transaction limit. In some examples, the artificial
transaction limit may be a constant number of trade messages less than the exchange
transaction limit (e.g., the artificial transaction limit is 100 trade messages less than the
exchange transaction limit). In some examples, the relationship between the artificial
transaction limit and the exchange transaction limit may vary based on the conditions of the
market. For example, the relationship may vary depending on the time of day (e.g., start of a
trading period, end of a trading period, etc.), the cumulative volume of trade messages
communicated to the exchange via different exchange links, etc.
[0074]       When the transaction limits (e.g., the exchange transaction limit, the artificial
transaction limit) are known (blocks 405 and 410), the example gateway 120 communicates
trade messages to the example exchange 130 via the exchange link based on the usage policy
and the transaction count (block 420). To this end, the example gateway 120 assigns a
message priority to trade messages and communicates the trade messages having a message
priority greater than a threshold priority. For example, the gateway 120 communicates to the
exchange 130 trade messages having the highest priority when using the reserve capacity
while delaying other trade messages.
                                                   19

[0075]      FIG. 6 is a flow diagram representative of example operations that can be
executed to implement block 420 of FIG. 4, which communicates trade messages from a
gateway to an exchange. In the example of FIG. 6, the example gateway 120 communicates
trade messages having a message priority greater than a transaction threshold. In some
examples, the transaction threshold varies based on a usage policy selected by, for example,
the participants of the trading system 100 of FIG. 1. The example process of FIG. 6 begins
by assigning a message priority to trade messages received during the transaction interval
(block 605). For example, the trading device 110 of FIG. I communicates trade messages to
the gateway 120 to be executed by the exchange 130. In the illustrated example, the example
gateway 120 assigns a message priority to each of the trade messages based on a usage
policy. In the illustrated example, the usage policy determines which trade messages are
communicated to the example exchange 130 during the transaction interval. In some
examples, a trader(s) or user(s) sets the usage policy. in some examples, trade messages are
prioritized based on the message type. For example, trade messages canceling a trade order
may be prioritized over trade messages performing other trade orders (e.g., change or modify
a previously communicated trade order, add a trade order, etc.). In some examples, trade
messages are prioritized based on the risk position associated with each trade message. For
example, trade messages associated with higher (or greater?) risk may be prioritized over
trade messages associated with less risk. In some examples, trade messages are prioritized
based on the likelihood of execution by the exchange. For example, trade messages may be
prioritized based on their relationship to the inside market such that trade orders closer to the
inside market may be given a higher priority than a similar trade order directed away from the
inside market. In some examples, trade messages delayed from a previous transaction
interval are assigned an improved message priority. For example, a trade message canceling
a trade order may have a higher priority than a trade message adding a trade order that was
delayed from a previous transaction interval, but may have a lower priority than a trade
message canceling a trade order that was delayed from the previous transaction interval. In
some examples, trade messages are prioritized based on the trader and/or trading device
associated with the trade message. As different trading devices may be connected to an
exchange link, the message priority for a trade message may be adjusted based on the trading
device communicating the trade message. For example, a trader may pay extra to have an
improved message priority for trade messages communicated by certain trading devices.
Other bases for prioritizing trade messages are also possible.
                                                 20

10076]       The example process of FIG. 6 compares the message priority of the trade
message to a transaction threshold (block 610). In some examples, the transaction threshold
varies based on the usage policy. For example, the usage policy may vary the transaction
threshold based on a transaction count of trade messages communicated to the example
exchange 130 during the transaction interval. For example, the transaction threshold may be
set to the lowest priority at the start of a transaction interval, may be set to a second priority
when the transaction count approaches the artificial transaction limit, and may be set to third
priority when the transaction count is greater than the artificial transaction limit (e.g.,
communicating trade messages using the reserve capacity). In the illustrated example, trade
messages having a message priority less than the transaction threshold (block 610) are
delayed in communicating to an exchange (block 615). For example, communicating the
trade message may be delayed to the following transaction interval. In some examples, the
trade message may be delayed within the same transaction interval (e.g., communicated to the
exchange after trade messages with a higher message priority are communicated). In some
examples, trade messages having a message priority less than the transaction threshold (block
610) are canceled by the example gateway 120. A determination is then made whether other
trade messages remain to be communicated (block 635). When another trade message is
received, control returns to block 610 to determine whether the message priority is greater
than the transaction threshold. Otherwise, the example processes of FIGS. 4 and 6 end.
[00771       When the message priority of the trade message is greater than the transaction
threshold (block 610), the trade message is communicated to the exchange (block 620). A
transaction count of trade messages communicated to the exchange via the exchange link is
updated (block 625). That is, the transaction count increases when a trade message is
communicated to the exchange and the transaction count is monitored during the transaction
interval. A determination is made whether the transaction threshold satisfies the usage policy
(block 630). For example, the usage policy may change the transaction threshold based on
the transaction count. When the transaction threshold does satisfy the usage policy (block
630), control proceeds to block 635 to determine if another trade message was received
during the transaction interval.
[0078]       Returning to block 630, when the transaction threshold does not satisfy the usage
policy, the transaction threshold is updated (block 640). For example, a usage policy may set
the transaction threshold so that all trade messages are communicated to the exchange 130
until the transaction count reaches the artificial transaction limit (block 640). When the
                                                   21

transaction count is greater than the artificial transaction limit, the transaction threshold
adjusts according to the usage policy so that high priority trade messages are communicated
while low priority trade messages are not. As a result, the transaction threshold is updated.
In some examples, when the transaction interval expires, the transaction threshold is set
according to the usage policy. In some examples, an indication is sent to the downstream
trading devices that are connected to the exchange link when the transaction threshold is
adjusted. As a result, the trading device 110 may adjust the trade messages communicated to
the gateway 120. For example, the trading device 110 of FIG. I may not communicate trade
messages to the gateway 120 with a message priority less than the current transaction
threshold (e.g., the trade message is delayed or canceled by the trading device 110 rather than
the gateway 120 or the exchange 130). Control then proceeds to block 635 to determine if
another trade message was received during the transaction interval.
100791      FIG. 7 is a block diagram of an example system 700 that may implement and/or
execute the example operations of FIGS. 4-6. In some examples, the system 700 may be
implemented as part of software (or an application) associated with the gateway 120 of FIG.
 1 and/or the gateway 220a of FIG. 2. In some examples, the system 700 may be implemented
as computer implemented code or instructions operable independent of software associated
with the gateway 120. In some examples, the features and functionality of the system 700
may be implemented in hardware operable in connection with the gateway 120 of FIG. 1
and/or the gateway 220a of FIG. 2.
100801      The example system 700 of FIG. 7 includes a transaction monitoring module 705
to track the trade messages communicated to, and received by the example exchange 130 via
the exchange link. For example, the transaction monitoring module 705 receives an
indication that a trade message was communicated to the example exchange 130. As a result,
the transaction monitoring module 705 increments a transaction count. In some examples,
the transaction monitoring module 705 receives a response message from the example
exchange 130. As a result, the transaction monitoring module 705 calculates message latency
and average message latency. For example, the transaction monitoring module 705 compares
the timestamp of the trade message communicated to the example exchange 130 to the
timestamp of the response message corresponding to the trade message.
[00811      The example exchange transaction limit defining module 710 of the example
system 700 defines the exchange transaction limit of the exchange link. In some examples,
                                                  ,Y)

the exchange transaction limit is provided by the exchange 130 and stored by the exchange
transaction limit defining module 710. In some examples, the exchange transaction limit
defining module 710 calculates the exchange transaction limit. For example, the exchange
transaction limit defining module 710 receives a transaction count indicating the number of
trade messages communicated to the exchange 130 via an exchange link and an identifier of
response messages received. As a result, the exchange transaction limit defining module 710
calculates the exchange transaction limit based on the transaction count when a rejection
message is received. In some examples, the exchange transaction limit defining module 710
may receive an indication of the average message latency and an indication of the message
latency calculated for a response message. As a result, the exchange transaction limit
defining module 710 compares the message latency to the average message latency. When
the message latency deviates from the average message latency, the exchange transaction
limit is calculated based on the transaction count. In some examples, the exchange
transaction limit defining module compares the deviation between the message latency and
the average message latency to a minimum threshold to determine when to calculate the
exchange transaction limit. In some examples, the exchange transaction limit defining
module 710 uses a continuous series of deviations between the message latency and the
average message latency to determine when to calculate the exchange transaction limit.
[00821       The example artificial transaction limit calculating module 715 of the example
system 700 calculates the artificial transaction limit based on the exchange transaction limit.
In some examples, the artificial transaction limit is a portion (or fraction, percentage, etc.) of
the exchange transaction limit. In some examples, the artificial transaction limit is a constant
value. For example, the artificial transaction limit creates a reserve capacity of 50 trade
message communications. In some examples, the artificial transaction limit varies based on
market conditions. For example, the artificial transaction limit may vary based on the time of
day, the volume of trade messages communicated to the exchange, the activity levels
corresponding to trade messages communicated via the exchange link.
10083]       The example message priority assigning module 720 of the example system 700
assigns a message priority to trade messages received from a trading device to communicate
to the exchange 130. In some examples, a usage policy describing how trade messages
should be processed at various transaction counts or times within the transaction interval
determines the message priority. In some examples, the usage policy varies the message
priority based on the trade message, the risk position of the trade message, the likelihood of

execution of the trade message, the trader associated with the trade message and/or the
transaction count.
[0084]      The example trade message communicating module 725 of the example system
700 communicates trade messages to the exchange 130 based on the message priority of the
trade message. For example, the trade message communicating module 725 compares the
message priority of the trade message to a transaction threshold. In some such examples,
trade messages with a message priority less than the transaction threshold are delayed and/or
canceled. Otherwise, when the message priority of the trade message is greater than the
transaction threshold, the trade message is communicated to the exchange 130. In some
examples, the transaction threshold varies based on the transaction count. For example, a
usage policy may adjust (e.g., increase) the transaction threshold when the transaction count
approaches the artificial transaction limit. As a result, the trade messages having a first
message priority may be communicated to the exchange 130 during the period of the
increased transaction threshold while trade the messages having a second message priority
may be delayed (e.g., delayed to a subsequent transaction interval or to a later period during
the transaction interval) and/or canceled (e.g., not communicated to the exchange 130). In
some examples, the trade message communicating module 725 maintains a trade message
queue of trade messages received and/or delayed. As a result, a delayed trade message may
be moved to the end of the message queue.
V1.     EXAMPLES OF PREVENTING ADVERSE EXCHANGE LIMIT EFFECTS AT
        THE EXCHANGE
[0085]      As described above, an exchange may limit the number of trade messages
communicated over an exchange link during a period (e.g., a transaction interval). In some
examples, the exchange communicates a warning message to the gateway along with the
response message based on a transaction count. For example, the exchange may
communicate a response message to the gateway indicating that the transaction count is
nearing the exchange transaction limit. In response, the gateway may adjust or modify
further trade messages communicated to the exchange.
100861      FIG. 8 is a flow diagram representative of example operations that can be
executed to communicate a warning message to a gateway based on a transaction count. The
example process 800 of FIG. 8 begins when an exchange (e.g., the example exchange 130 of
FIG. 1) receives a trade message via an exchange link (block 810). For example, a gateway

(e.g., the example gateway 120 of FIG. t) communicates a trade message to the exchange
130 via an exchange. As a result, the exchange 130 increments a counter tracking the number
of trade messages received via the exchange link.
[00871       The example exchange 130 compares the transaction count to a usage policy to
determine a response to communicate to the example gateway 120 (block 820). In some
examples, the comparison causes the exchange 130 to communicate an alert or warning
message. For example, the exchange 130 communicates a message (block 830) alerting the
gateway 120 that the transaction count is greater than the artificial transaction limit.
Additionally, the example exchange 130 may alert the downstream participants regarding the
activity of the exchange link. For example, the exchange 130 informs the downstream
participants the number of trading devices communicating trade messages via the exchange
link. In some examples, the exchange 130 further communicates an offer to one or more
trading devices 110 to switch to a different exchange link. For example, the exchange 130
transfers a trading device 110 from the current exchange link to a relatively less active
exchange link when the trading device 110 responds to the offer by accepting the offer. In
some examples, the example gateway 120 may adjust or modify subsequent trade messages
communicated. In some examples, the exchange 130 communicates to the downstream
participants an offer to purchase additional trade messages. For example, when the
transaction count is greater than a portion of the exchange transaction limit (block 820), the
exchange 130 communicates an offer to purchase additional trade messages to communicate
high priority trade messages. In some examples, the exchange 130 communicates the
warning message based on the trader associated with the trade message that prompts the
warning message. In some examples, the exchange 130 communicates the warning message
to select traders (e.g., traders enrolled in a program to receive warning messages) regardless
of which trader is associated with the trade message that prompts the warning message. The
example process of FIG. 8 then ends.
100881       Some of the described figures depict example block diagrams, systems, and/or
flow diagrams representative of methods that may be used to implement all or part of certain
embodiments. One or more of the components, elements, blocks, and/or functionality of the
example block diagrams, systems, and/or flow diagrams may be implemented alone or in
combination in hardware, firmware, discrete logic, as a set of computer readable instructions
stored on a tangible computer readable medium, and/or any combinations thereof, for
example.

[0089]       The example block diagrams, systems, and/or flow diagrams may be implemented
using any combination of application specific integrated circuit(s) (ASIC(s)), programmable
logic device(s) (PLD(s)), field programmable logic device(s) (FPLD(s)), discrete logic,
hardware, and/or firmware, for example. Also, some or all of the example methods may be
implemented manually or in combination with the foregoing techniques, for example.
[0090]       The example block diagrams, systems, and/or flow diagrams may be performed
using one or more processors, controllers, and/or other processing devices, for example. For
example, the examples may be implemented using coded instructions, for example, computer
readable instructions, stored on a tangible computer readable medium. A tangible computer
readable medium may include various types of volatile and non-volatile storage media,
including, for example, random access memory (RAM), read-only memory (ROM),
programmable read-only memory (PROM), electrically programmable read-only memory
(EPROM), electrically erasable read-only memory (EEPROM), flash memory, a hard disk
drive, optical media, magnetic tape, a file server, any other tangible data storage device, or
any combination thereof. The tangible computer readable medium is non-transitory.
10091]       Further, although the example block diagrams, systems, and/or flow diagrams are
described above with reference to the figures, other implementations may be employed. For
example, the order of execution of the components, elements, blocks, and/or functionality
may be changed and/or some of the components, elements, blocks, and/or functionality
described may be changed, eliminated, sub-divided, or combined. Additionally, any or all of
the components, elements, blocks, and/or functionality may be performed sequentially and/or
in parallel by, for example, separate processing threads, processors, devices, discrete logic,
and/or circuits.
10092]       While embodiments have been disclosed, various changes may be made and
equivalents may be substituted. In addition, many modifications may be made to adapt a
particular situation or material. Therefore, it is intended that the disclosed technology not be
limited to the particular embodiments disclosed, but will include all embodiments falling
within the scope of the appended claims.
                                                 16

[0093] Throughout this specification and claims which follow, unless the context
requires otherwise, the word "comprise", and variations such as "comprises" and
"comprising", will be understood to imply the inclusion of a stated integer or step or
group of integers or steps but not the exclusion of any other integer or step or group
of integers or steps.

                                              CLAIMS
What is claimed is:
     1.      A method of message management comprising:
     tracking, at a gateway, a transaction count of trade messages communicated to an
exchange via an exchange link;
     defining a first transaction limit based on the transaction count;
     calculating a second transaction limit as a function of the first transaction limit, wherein
the second transaction limit is to correspond to a reserve capacity associated with the
exchange link;
     assigning a message priority to each of a plurality of trade messages to communicate to
the exchange;
     communicating trade messages of the plurality of trade messages having a first message
priority to the exchange when the transaction count is greater than the second transaction
limit; and
     rejecting trade messages of the plurality of trade messages having a second message
priority.
     2.      A method as described in claim 1 wherein tracking a transaction count further
comprises incrementing the transaction count when a trade message is communicated from
the gateway via the exchange link.
     3.      A method as described in claim 1 wherein defining a first transaction limit further
comprises:
     calculating a message latency associated with each of a plurality of response messages
received at the gateway;
     identifying an increase in the message latency; and
     in response to the increase in the message latency, estimating the first transaction limit
based on the transaction count.
3517202v1

     4.      A method as described in claim 1 wherein the second transaction limit is to vary
based on a time of day.
     5.      A method as described in claim 1 wherein the second transaction limit is to vary
based on the transaction count.
     6.      A method as described in claim 1 wherein the message priority is assigned is
associated with an order policy.
     7.      A method of message management comprising:
     communicating, via a gateway, a plurality of trade messages to an exchange;
     tracking a transaction count of trade messages communicated via an exchange link; and
     in response to receiving a rejection message via the exchange link, defining a transaction
limit based on the transaction count.
     8.      A method as described in claim 7 further comprising:
     identifying a message type of each of the plurality of trade messages communicated to the
exchange;
     communicating trade messages having a first message type via the exchange link; and
     rejecting trade messages having a second message type when the transaction count is a
portion of the transaction limit.
     9.      A method of message management comprising:
     defining a transaction limit of an exchange link;
     calculating, via a processor, a second transaction limit based on the transaction limit,
wherein the second transaction limit is to correspond to a percentage of the transaction limit;
and
     communicating, via the exchange link, a plurality of trade messages to an exchange based
on the second transaction limit and an order policy.
     10.     A method as described in claim 9 further comprising:
     tracking a transaction count of trade messages communicated to the exchange; and
3517202v1

     varying the percent of the transaction limit based on the transaction count.
     11.    A method as described in claim 10 wherein the order policy further comprises:
     assigning a message priority to each of the plurality of trade messages communicated to
the exchange; and
     communicating trade messages having a first message priority to the exchange when the
transaction count is greater than the second transaction limit, and delaying trade messages
having a second message priority.
     12.    A method as described in claim 11 wherein the message priority is based on a trade
associated with each of the plurality of trade messages.
     13.    A method as described in claim 11 wherein the message priority is based on a risk
position associated with each of the plurality of trade messages.
     14.    A method of message management comprising:
     tracking, at an exchange, a transaction count of trade messages received via an exchange
link from a gateway;
     comparing the transaction count to a portion of a transaction limit to form an indication;
and
     communicating a warning message to the gateway based on the indication.
     15.    A method as described in claim 14 further comprising transferring communication
of a portion of the trade messages received from the gateway to a second exchange link based
on a response to the warning message.
     16.    A method as described in claim 15 wherein the response to the warning message
includes a trader associated with at least a portion of the trade messages.
     17.    A method as described in claim 14 further comprising adjusting the transaction
limit based on a response to the warning message.
     18.    A method of message management comprising:
3517202v1

     assigning a message priority to each of a plurality of trade messages at a gateway,
wherein the gateway is to communicate each of the plurality of trade messages to an
exchange; and
     when a transaction count is a portion of a transaction limit, wherein the transaction count
is to correspond to a number of trade messages communicated to the exchange:
     communicating trade messages of the plurality of trade messages having a first message
priority to the exchange; and
     rejecting trade messages of the plurality of trade messages having a second message
priority.
3517202v1

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
