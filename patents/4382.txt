A Generalization Of The Formula To Create A
           Square Root Of Negative One
                    Paul C. Bingham Cheffers
                             26 June 2018
1  Abstract
                                  Abstract
      Generalisating from the formula to convert a sum of two squares to
   the -1 mod p * q, it is shown that given the equation a*#2+62 = p*q
   that the v-a mod p * q = a * # * 6-1. This formula also works for
   modulus of primes, p, as well.
                                     1

A Generalization Of The Formula To Create A
           Square Root Of Negative One
                   Paul C. Bingham Cheffers
                            26 June 2018
Contents
1 Public Domain Work                                                        2
  1.1 A Formula For The Square Root Of Negative Three ........              2
  1.2 A Formula For The Square Foot Of Negative Five . . . . . . .          3
2 The Inventive Work                                                        3
  2.1 Exam ple 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
  2.2 Exam ple 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
  2.3 The Following Modular Square Roots Can Be Taken Easily         Of
      1 Mod 4 Semprime Modula . . . . . . . . . . . . . . . .        . . .  5
  2.4 Exam ple 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
  2.5 Exam ple 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
  2.6 Example 5 - Using RSA310 As The Modulus . . . . . . .          . . .   7
  2.7 Example 6 - A More General Technique . . . . . . . . .         . . .  9
  2.8 The Algorithm Works On Prime Modula as well . . . . .          . . .  9
3 Conclusion                                                               10
                                    1

 1    Public Domain Work
The formula for the complex square root, taken from [2] is:
    The square roots of a + bi (with b! = 0) are +(7 + 6i), where
               2
                 2
    In the author's Wikipedia math blog[1], an analogue of the complex
square root theorum is shown. This is public domain knowledge, except
for the parts where reference is given to Innovation Patents the author has
taken out.
    Quoting from [1]:
      1.1     A Formula For The Square Root Of Neg
      ative Three
      Considering that the above math has found another formula for
      the square root of -1 mod p*q. Normally, solving x 2 + 2 == p*q
      solves for -1 mod p * q - x*y-, whereas we have now decided
      that solving for 2(x 2+ yY) + 1 mod p * q - 2(x + y), and since for
      the cube root of 1 we have the formula 3*x 2-2+y 2-2+1 modp* q
      2*x+y, then the following formula should also hold, by symmetry:
                                3 * x2 + Y2==p*q
      It does as in:
      Solve[3 x^2 + y^2 == 337 577, {x, y}, Integers]
      Out[41= {{x -> -160, y -> -343}, {x -> -160,
         y -> 343}, {x -> -24, y -> -439}, {x -> -24, y -> 439},           {x -> 24,
         y -> -439},    {x   ->   24, y -> 439},  {x ->   160, y -> -343}, {x -> 160,
         y -> 343}}
      Mod[3 (-160) PowerMod[-343, -1, 337 5771, 337 5771=8505
      this is the square root of -3 mod 337*577
                                          2

       1.2 A Formula For The Square Foot Of Neg
       ative Five
       Applying the same technique to the square root of -5:
       Solve[5 x^2 + y^2 == 89 29, {x,           y},   Integers]
       Out[141= {{x -> -18,       y -> -31},     {x -> -18, y -> 31}, {x -> -6,
          y -> -49}, {x -> -6, y -> 49}, {x -> 6, y -> -49}, {x -> 6,
         y -> 49}, {x -> 18, y -> -31}, {x -> 18, y -> 31}}
       Mod[5 (-18)    PowerMod[(-31),       -1,  89 291,   89 291==1002
       Mod[1002^2,    89 291== -5
2      The Inventive Work
Extending the work shown in the previous section, it can be seen that the
square root of a negative number mod p*q (where p*q is a 1 mod 4 semiprime
or 3 mod 4 semiprime) can be derived hence:
                               a * 02 + 62 == p * q                           (2)
    The modular square root of -a       is created by the following equation:
                                 mod p * q - a *  #  * 6-1                    (3)
    If we were to imagine the square of the p*q modulus to be -62     * j-2 then
                    (-62  * 0-2)  * (j3/6)  mod p * q - -6/0                  (4)
    The import and utility of the equations just above are that both 6 and
#  can be very small and can be applied to any modulus of p * q mod 4 - 1.
No matter how large the modulus is, the modular square roots of a small
number of squares that fit the equations can be worked out very quickly.
It is supposed to be hard to find a modular square root of a p*q modulus,
however, look at the following example. If 3 = 2 and 6 = 3 such that
                                          3

                                a* 4+9 ==p*q                            (5)
    which is true for every p*q modulus that is p * q mod 4 1, then
                           -amod p * q - a * 2 * 3-1                    (6)
2.1     Example 1
Taking the following mathematica, the v/-643 mod 89 * 29    1289 is shown.
This modulus is a 1 mod 4 semiprime in that both p mod 4 -1 and q mod
4-1
643 4 + 9 == 89 29
TRUE
Mod[643 2 PowerMod[3,       -1,   89 291, 89 291=1289
Mod[-(   1289)^2, 89 291=643
2.2     Example 2
Showing now a modulus that is a 3 mod 4 semiprime
    Taking the following mathematica, the V/-2032 mod 103 * 79 - 4067 is
shown. This modulus is a 3 mod 4 semiprime in that both p mod 4 - 3 and
q mod 4 - 3
  2032 4 + 9 == 103 79
TRUE
Mod[2032 2 PowerMod[3, -1, 103 791,         103 791=4067
Mod[-(4067)^2, 103 791=2032
                                        4

2.3     The Following Modular Square Roots Can Be Taken
        Easily Of 1 Mod 4 Semprime Modula
The following Mathematica statement shows, for all 1 mod 4 modula that all
squares which are 1 mod 4 have modular squares of the type -SQUARE/4 mod
p * q and that these squares have roots that can be found easily.
Table[{x, IntegerQ[(89 29 - x 4)^(1/2)], (645 - x) 4 + 1}, {x, 600,
    645}1 // Grid
{
  {600,  False, 181},
  {601,  False, 177},
  {602,  False, 173},
  {603,  True, 169},      (-169/4) mod 89*29         603*2/13       (-603)^(1/2)
  {604,  False, 165},
  {605,  False, 161},
  {606,  False, 157},
  {607,  False, 153},
  {608,  False, 149},
  {609,  False, 145},
  {610,  False, 141},
  {611,  False, 137},
  {612,  False, 133},
  {613,  False, 129},
  {614,  False, 125},
  {615,  True, 121},      (-121/4) mod 89*29       615*2/11       (-615)^(1/2)
  {616,  False,  117},
  {617,  False,  113},
  {618,  False,  109},
  {619,  False,  105},
  {620,  False,  101},
  {621,  False,  97},
  {622,  False,  93},
  {623,  False,  89},
  {624,  False,  85},
                                     5

  {625,  True, 81},    (-81/4) mod 89*29 625*2/9            (-625)^(1/2)
  {626,  False, 77},
  {627,  False, 73},
  {628,  False, 69},
  {629,  False, 65},
  {630,  False, 61},
  {631,  False, 57},
  {632,  False, 53},
  {633,  True, 49},    (-49/4) mod 89*29 633*2/7            (-633)^(1/2)
  {634,  False, 45},
  {635,  False, 41},
  {636,  False, 37},
  {637,  False, 33},
  {638,  False, 29},
  {639,  True, 25},     (-25/4) mod 89*29 639*2/5 === (-639)^(1/2)
  {640,  False, 21},
  {641,  False, 17},
  {642,  False, 13},
  {643,  True, 9},     (-9/4) mod 89*29      643*2/3       (-643)^(1/2)
  {644,  False, 5},
  {645,  True, 1}     (-1/4) mod 89*29 645*2/1           (-645)^(1/2)
}
    Setting #2 == 9, we get the following tables:
Table[{x, IntegerQ[(89 29 - x 9)^(1/2)],          (286 - x)  9 + 7}, {x, 200,
    286}1 // Grid
{
{228,   True,  529} (-529/9) mod 89*29       228*3/23       (-228)^(1/2)
{233,   True,  484} (-484/9) mod 89*29       233*3/22       (-233)^(1/2)
{268,   True,  169} (-169/9) mod 89*29       268*3/13       (-268)^(1/2)
{284,   True,  25}    (-25/9) mod 89*29      284*3/5       (-284)^(1/2)
{285,   True,  16}    (-16/9) mod 89*29      285*3/4       (-285)^(1/2)
}
                                      6

2.4     Example 3
Taking one of the problems from the last section,
228 9 + 529 == 89 29
TRUE
Mod[228 3 PowerMod[23,       -1,  89 291,  89 291=1713
Mod[-1713^2, 89 291=228
Mod[-228, 89 291=2353
2.5     Example 4
284 9 + 25 == 89 29
TRUE
Mod[284 3 PowerMod[5, -1,        89 291,  89 291=1719
Mod[-1719^2, 89 291=284
Mod[-284, 89 291=2297
2.6     Example 5 - Using RSA310 As The Modulus
For this example, we will use the 310 decimal digit RSA310 modulus, to show
that big modula are not a problem with this method
RSA310 = 1848210397825850670380148517702559371400899745254512521925707\
4455803347106014125276757082979328578439013881047668984294331264191394\
6269652458346498372465163148188847336415136873623631778358751846501708\
7145416734026424615690611620116380982484120857688483676576094865930188\
367141388795454378671343386258291687641
CREATE THE NEGATIVE OF THE SQUARE
aa = ((RSA310 - 1)/4) - 2
                                       7

Out [61= \
4620525994564626675950371294256398428502249363136281304814268613950836\
7765035313191892707448321446097534702619172460735828160478486567413114\
5866245931162907870472118341037842184059079445896879616254271786354183\
5066061539226529050290952456210302144221209191440237164825470917853471\
98863594667835846564572921908
CREATE THE ROOT
bb = Mod[aa 2 PowerMod[3, -1, RSA310], RSA310]
THIS IS THE ROOT OF -aa
Out[81= \
9241051989129253351900742588512796857004498726272562609628537227901673\
5530070626383785414896642892195069405238344921471656320956973134826229\
1732491862325815740944236682075684368118158891793759232508543572708367\
0132123078453058100581904912420604288442418382880474329650941835706943\
97727189335671693129145843819
ENSURE THAT THE ROOT SQUARED IS THE NEGATIVE OF aa
 Mod[-bb^2, RSA310] == aa
TRUE
SHOW ANOTHER EQUATION FOR THIS
Mod[-9 PowerMod[4, -1, RSA310], RSA310] == aa
 True
PRINT OUT THE ROOT
 bb
 Out[101= \
9241051989129253351900742588512796857004498726272562609628537227901673\
5530070626383785414896642892195069405238344921471656320956973134826229\
1732491862325815740944236682075684368118158891793759232508543572708367\
0132123078453058100581904912420604288442418382880474329650941835706943\
                               8

97727189335671693129145843819
2.7     Example 6 - A More General Technique
Now it follows, after examination of the previous examples, that subtracting
a square from p*q and then factoring the result will often cause the following
factorization: al * j2 =p *q2
    So, with the factorization, many of the -as can have their modular square
root taken as in:
                          a **6-    mod p * q                              (7)
    This is a much more general method than the ones shown previously.
    89 * 29 - 112 = 2460 and 2460 = 615 * 22 Thus.
                 615 * 2 * 11-1 mod 89 * 29 - 1285      (-615)             (8)
2.8     The Algorithm Works On Prime Modula as well
If we take the prime modulus, 89, then we can see the algorithm works as
well:
FactorInteger [89-91
{{2, 4},    {5,   1}}
Mod[5 4 PowerMod[3, -1, 891,         891=66
Mod[66^2, 891=84=-5
    In fact this algorithm may not allow a random number to be selected,
but it is faster than the available Cipolla or Tonelli-Shanks modular square
root algorithms.
    The algorithm works on 3 mod 4 primes as well. Take 79 for instance.
  FactorInteger[79 - 4 41
{{3,   2}, {7,    1}}
                                       9

  Mod[7 3 PowerMod[4,      -1,   791, 791=25
  Mod[-25^2,    791=7
3      Conclusion
Thus, with the five examples given above, and the sixth that generalizes the
technique to many possible numbers, it has been shown that there are quite
a number of negative numbers mod p*q that can be taken, almost instantly,
from numbers that obey the
                               a * 02  6'== p* q                              (9)
    For any a for the equation shown just above, the v       mod p * q can be
taken easily.
    One is not supposed to be able to take a modular square root of a p * q
modulus, but sometimes, when the above equation holds, it is possible. This
is a trapdoor in the modular square root field of a p * q modulus.
    Example 5 shows that even huge modula are subject to the math shown
in this patent request.
    The Rabin crypto scheme depends on the difficulty of taking modular
square roots, which this patent deals with. Thus, existing cryptographic
commercial systems use the modular square root mod p*q problem, and
thus this patent is relevant to existing cryptographic systems.
    Lastly, this is an actual modular square root algorithm, because you de
rive the square first and then derive the root last. Even though it is still not
a general modular square root algorithm in that you can't give me a number
mod p*q and then have me take the modular square root, such as Cipolla's
method or the Tonelli-Shanks method for prime modula, this method de
scribed in this patent shows a general weakness in the modular square root
problem difficulty.
                                       10

References
[1] Paul               Cheffers.                                        Paul
    cheffers wikipedia private page (endo999). Online; Accessed: 2018-05-27:
    "https://en.wikipedia.org/w/index.php?title=User:Endo999&oldid=842985979".
[2] Wikipedia.      Complex number.        Online; Accessed:     2017-07-02:
    "https://en.wikipedia.org/w/index.php?title=Complex-number&oldid=786995699".
                                      11

A Generalization Of The Formula To Create A
             Square Root Of Negative One
                      Paul C. Bingham Cheffers
                              26 June 2018
1    Claims
  1. An algorithm is claimed, for the purposes of decrypting electronic doc
     uments, computer files, or communication transmissions, and for legal
     proceedings, police work, investigations, or business use that given
      (a) a modulus of the product of two odd primes, p and q, or a modulus
          that is one whole odd prime, p,
      (b) an equation satisfied of
          or
                                   a * o2 +2                              (2)
          where a and   # and 6 are positive integers greater than 0,
      (c) then the modular square root of -a is created by the following
          equation:
                               -amod p * q - a * # *6--1                  (3)
          or
                                -amod p - a * # *6--1                     (4)
                                      1

