The advent of the big data era enforces the media data owner to seek help from the cloud computing
platfonn which stores the media data and shares to the users. Cloud media sharing between the
owner and the user suffers three key problems including media data privacy leakage in the cloud,
the data owner's copyright and the user's rights. This patent considers the scheme design of being
capable of addressing these three problems simultaneously. First of all, associating the re-encryption
technique and the asymmetric fingerprinting with user-side embedding, we bring forward a cloud
based look-up table management system, which is a one-time process of letting the cloud secretly
calculate each user's personalized decryption look-up table. Furthermore, based on this system, we
designed a copyright-protected and privacy-preserving cloud media sharing scheme. It inherits well
from the characteristic of Chameleon cipher, i.e., the owner only needs to encrypt the media content
under the same encryption look-up table without embedding any fingerprint while the fingerprint
embedding operation occurs during each user's decryption operation under the personalized
decryption look-up table.

      Editorial Note
       <removed-apn>
There are three pages of description only

Asymmetric Fingerprinting by User-Side Embedding
   Assume that the k -th user has a personalized fingerprinting LUT (F-LUT) Wk of size T, which is
generated as
                                               Wk =Gw ,
where G is a Tx L encoding matrix and          wk   is a vector of size L, in which wk,     = aw (2bkl -1),
 0 1 ! L-1. a-      is the variance of Wk and bk is a L -bit fingerprint encoded by a binary antipodal
modulation. The k -th user's personalized decryption LUT (D-LUT) Dk is computed in the encrypted
domain by the owner based on an additive homomorphic cryptosystem like Paillier cipher. Thus, the
owner obtains the encrypted fingerprint version of the k -th user's bk , i.e.,            E    (bl),    where
 EHE (-) represents a homomorphic encryption function with the encryption key PKu, that is the k
th user's public key. Utilizing the property of additive homomorphic cryptosystem, the owner can
calculate
                                                               2
                             EK, (2bkl      1)= E,      (bk,l)   - EH   (1)                                 (2)
and further
                      E,     DK (t)) = E        (t)      -1IE         (2b    -1)o-wG(tl)                    (3)
                                                          1=0
where 0     t i T-1 and E is an encryption LUT (E-LUT) with its entries E(t) following a Gaussian
distribution N(0,0-E) . EH        (Dk (t)   is then sent to the k -th user who finally acquires the
decryption LUT through decryption with his private key SKv, as follows
                                                Dk   =-E+Wk.                                                (4)
Cloud-based LUT Management
 On the k -th user side:
1. Fingerprint and Key generation: Generates a fingerprint bk and a key pair of public key PK,           =gb
    and private key SKuk =b, where bE Zq.
2.   Fingerprint    encryption:     Encrypt      bk     under       the    public     key   PK        ,   i.e.,
     EPK   (bk)  = [EE     (bkO), EH     (bkl), -, EHE (bkL1] and then transmit EK                (bk) to the
    cloud server provider.
a. On the owner side.

1. Fingerprint key and key generation: Generate a fingerprint key G and a key pair of PKO=g" and
    private key SKO = a, and then transmit G to the cloud.
                                                                                              a
2.  E-LUT    encryption:   Encrypt    the    E-LUT   E     under    the  public   key  PKO=g     ,  i.e.,
     EH (E(t))=(gaE(t).Z'), where r E Z, and then transmit EH (E(t)) to the cloud.
3.  Re-encryption key generation. Generate a re-encryption key rko,            under owner's public key
     PKO=ga and the k -th user's public key PKu, =g , i.e., rkosu, - gb/a , and then transmit
     rko-U> to the cloud.
b. On the cloud sider
1. Re-encryption. Change the ciphertext EH         (E(t))    into the ciphertext EHK (E(t)) under the
    re-encryption key rko ,,i.e., EH        (E(t))=(Z",E(t)-Z),where            Zb    egar gb/a)
2.  Encrypted D-LUT computation. Compute the k -th user' personalized D-LUT Ep             (Dk (t))    in
    the encrypted domain under E,          (bk),   E      (E(t)),     G, and the k -th user' public key
     PKgb,      as indicated in (2-3), and transmit E," (Dk (t)) to the k -th user, who decrypts it
    under his private key SKu, = b obtaining the Dk , as in Eq. (4).
Copyright-Protected and Privacy-Preserving Media Sharing
On the owner side:
 The single-value alteration is one of the basic encryption methods, which aims to change media
content one by one using the corresponding key based on some operation like addition or exclusive
OR. Assume the owner has the plain media content m of length M , then the single-value alteration
encryption method can be expressed as
                                              c=m+B'E ,                                               (5)
where t is the corresponding encrypted media content and B' is binary matrix related to the media
content m. Specifically, the owner utilizes some robust hash techniques to generate a content
dependent session key SK,,,, which is used for constructing indices tib to E-LUT, where 0 ! i < M -1,
0 ! h<!S -1, and 0! ti ! T -1. B' is controlled by the indicesth in the following way:
                                          B, (i, j)= {'    it=ish                                     (6)
                                                        0, otherwise
On the k -th user side:

The encrypted media content c can be stored in the cloud. Upon receiving the k -th user' request,
the cloud sends c to the k -th user who performs joint decryption and fingerprinting with his
personalized D-LUT Dk as follows:
                                               m k = c+B'Dk,                                            (7)
where U= B'G, and          mk   represents the decrypted media content by the k -th user. Note that (7)
can be calculated as
                                                k
                                              m = c+B m Dk
                                                  = m + B mE+Bm Dk
                                                  =m+B'W              ,                                 (8)
                                                  = m+B m Gwk
                                                  = m +Gwk
which means to successfully embed the fingerprint         wk  into the media content mk under a secret
matrix G'.
On the arbiter side:
  Once a copyright dispute between the owner and the user occurs, they delegated an arbitral
institution that is credible for both to make an arbitration. The arbiter receives the fingerprinted media
content M' from the user and the original media content m and G from the owner. Due to the
possible noise effect during signal transmission, the received fingerprinted media content is assumed
to be contaminated by the a additive noise n represented as
                                               k =m+Gwk       +n.                                       (9)
In order to detect the fingerprint     wk, the arbiter can leverage the suboptimal decoder approaches
such as the Matched Filter and the Pseudo-Inverse, which are respectively formulated as
                                        Wk = sgn   5T (Ifk -m)},                                      (10)
and
                                        *k  = sgn {(7,T7)74T (ffik   _m)},                            (11)
where
                                           sgn{{} =            0                                      (12)
                                                       0, (     0

   Editorial Note
    <removed-apn>
There are two pages of claims only

Copyright-Protected and Privacy-Preserving Media Sharing
On the owner side:
  The single-value alteration is one of the basic encryption methods, which aims to change media
content one by one using the corresponding key based on some operation like addition or exclusive
OR. Assume the owner has the plain media content m of length M, then the single-value alteration
encryption method can be expressed as
                                               c=m+B'E,                                                 (5)
where t is the corresponding encrypted media content and B' is binary matrix related to the media
content m . Specifically, the owner utilizes some robust hash techniques to generate a content
dependent session key SK,, which is used for constructing indices        tih to E-LUT, where 0   i K!M -1,
 0 ! h    S-1, and 0      tih   T -1.  B" is controlled by the indices tih in the following way:
                                           B, (ij)=    {.0, itis
                                                            otherwise
                                                                                                        (6)
On the k -th user side:
The encrypted media content c can be stored in the cloud. Upon receiving the k -th user' request,
the cloud sends c to the k -th user who performs joint decryption and fingerprinting with his
personalized D-LUT Dk as follows:
                                                 k
                                              m = c + B'Dk,                                             (7)
                              k
where G =B'G,         and m represents the decrypted media content by the k -th user. Note that (7)
can be calculated as
                                               k
                                             m = c+B    m
                                                           Dk
                                                 = m + B mE+B m Dk
                                                 =m+Bm Wk              ,                                (8)
                                                 = m + B'Gw
                                                            =M+Gwk
which means to successfully embed the fingerprint         wk   into the media content mk under a secret
matrix G'.
On the arbiter side:
  Once a copyright dispute between the owner and the user occurs, they delegated an arbitral
institution that is credible for both to make an arbitration. The arbiter receives the fingerprinted media
content M k from the user and the original media content m and G from the owner. Due to the

possible noise effect during signal transmission, the received fingerprinted media content is assumed
to be contaminated by the a additive noise n represented as
                                            mi =m+Gwk +n.                                           (9)
In order to detect the fingerprint   wk,  the arbiter can leverage the suboptimal decoder approaches
such as the Matched Filter and the Pseudo-Inverse, which are respectively formulated as
                                       Wk = sgn {tT   (iik -M),                                   (10)
and
                                       Wk =  sgn      5       (nk -m)},                           (11)
where
                                          sgn{{}=                                                 (12)
                                                      0, {    0

