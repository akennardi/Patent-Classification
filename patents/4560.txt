Abstract:
In the background of big data. it is of great significance to protect image data's confidentiality. In
this patent, a compression-diffusion-permutation strategy for securing big image data is proposed.
Firstly, an image is compressed by use of compressive sensing technique, in which the Fladamard
matrix used as the measurement matrix is constructed through iterating two-dimensional Sine
Logistic modulation map instead of using the entire Gaussian matrix as a key. Thus, only the
utilization of a few keys in the 2D chaotic map avoids the transmission of the Gaussian matrix.
Secondly, XOR is used to further diffuse the compressed image to enhance the security. Finally, an
index sequence produced by 2D chaotic map with initial values is utilized to rearrange the positions
of the diffused image.

1. Background and Purpose
    With the development of the Internet, multimedia communication has
become an important part for people to transmit a variety of image informa
tion. Big image data have arisen in all sorts of social networks, which include
comprehensive social applications such as Facebook, Wechat,        QQ  and Mi
croblog, and vertical social applications such as Instagram, camera snap and
Momo that applys to focus on strangers socializing. There are a lot of people
tending to use a wealth of emotions and GIFs. Since 2014, the social networks
by sharing photos have also made a progress in commercialization. The be
ginning of commercialization indicates that the picture-type social network
has really entered a mature stage. In foreign countries, Instagram produces
80 million photos daily and Camera snap produces 400 million pictures daily.
The social networks share large amounts of information and bring great con
venience for people. However, we confront many challenges of data leakage,
tampering and counterfeiting. The security of information is not only related
to the national economy, business and individual, but also the state politics,
military and diplomacy. Therefore, it is becoming increasingly significant.
    Compared with the text, images are more visual and contain more abun
dant information. Therefore, they are widely used in the fields of financial,
medical, military, commercial and other sensitive information. For exam
ple, in the field of aerospace, some secret image data are transmitted to the
ground station by the telemetry network channels, thus the image data must
be encrypted to prevent the occurrence of broken events. Hence, the research
of image encryption algorithm has attracted scholars' attentions at home and
abroad. In addition, relative to the text, the image has many inherent char
acteristics, such as bulk data capacity and high redundancy. Consequently,
the traditional encryption algorithms such as DES, AES and RSA are no
longer suitable for image encryption. One the one hand, since the image pro
cessing has a high computing complexity, traditional encryption algorithms
make the adjacent pixels in the encrypted image have a quite high correla
tion, not suitable for providing image confidentiality. One the other hand,
                                        1

from the human visual system, images are allowed to lose some unimportant
information.
     The existing image encryption schemes did not possess the architecture
of compression-diffusion-permutation. In this patent, we propose a novel en
cryption algorithm based on a strategy of compression-diffusion-permutation,
which includes three steps: 1. Compress the original image; 2. Diffuse the
pixel values of the compressed image; 3. Permute the pixel positions of the
diffused image.
2. Encryption Algorithm Description
2.1. Compression process
     We define X to be the original image. The procedures of compression are
as follows:
     Step 1: Transform X into the ITdomain to obtain a.
     Step 2: Construct the measurement matrix by partial Hadamard ma
trix. The number of columns in the original image is marked as N. First
ly, generate two sequences with length 2N through using 2D chaotic map
with the initial values x               and y'. The former N numbers of the two se
quences I = [li, 12,       ... , IN, -- -1 2NI and m =     i,Mi 2 , ... , MN, ... , M2N are dis
carded to get the index sequences. Then, sort the nature sequence [1, 2, ..., N]
with the index sequences I and m.                   The sorted sequences are marked as
b  =  [bi, b2 , ... , bNI and p = [Ip1, P2, --- , PNI, where bi E [1, N], pi c [1, N] and
i  c  [1, N]. Finally, choose the row vectors H(di, :), H(d 2 ,:),..., H(dN,:) Of
Hadamard matrix H of the order N to compose the measurement matrix b
of size M x N, where di = (bi + pi)/2.
                             @ = [H(di, :), H(d 2 ,:),..., H(dN, :)]T,                       (1)
where the H(di,:) is a line of row vectors.
     Step 3: Project X into D to get y.
                       y = IX = )(X1, X2, ... , XN        =Y1, Y2, --       N -(2)
                                                   2

    Step 4: Sigmoid function is further used to transform the measured values
into a stationary range [0,255].
2.2. Diffusion process
    The diffusion can significantly change the statistical properties of the
original image, which spreads the influence of each bit of the original one
over the encrypted image.     For the sake of making the encryption effect
better, we implement the diffusion process as follows:
    Step 1: Sequences {xj} and {yj} are generated by 2D chaotic map with
the length M x N. The initial values are 4O and y6, and the range of generated
sequences are [0, 1].
    Step 2: Two methods are employed with respect to different range of
values and the function of two methods is to transform the sequences {xj}
and {yj} into the sequences {x7} and {y;}, which are the integral sequences.
The following equations describe the transformation.
    if [100 x xz] < 100 x xi;
              {x7} = ([1000 x (100 x xi)] - [100 x xi]) mod 256;            (3)
    if [100 x xz] > 100 x xi;
          {x} = ([1000 x (1 - (100 x xi))] - [100 x xi]) mod 256;           (4)
    if [100 x yj] < 100 x yj;
              {yp} = ([1000 x (100 x yi)] - [100 x yj]) mod 256;            (5)
    if [100 x yj] > 100 x yj;
           {yP} = ([1000 x (1 - (100 x yi))] - [100 x yj]) mod 256;         (6)
where [x] is round to the nearest integer.
    Step 3: The two sequences {x7} and {y7} can generate a new sequence
by performing the operation of mean value.
                                       3 2                                  (7)
                                       3

    Step 4: The cyclic addition with 256 numerical values of the sequence {hj}
is executed to obtain  {ti}   in order to make the keystream more complicated
and the attack more difficulty. Because the value of sequence         {ti}  is greatly
large, we make a modulo operation to obtain the range of value in [0, 255]
to reduce the burden of data. The specific cyclic shift addition and Mudulo
operation are shown in the followings.
    when 1 I      Mx N      -   (256 + 1);
                                            i+255
                                      t=     >      ;                               (8)
    when M x N - (256 + 2) < i < M x N;
                                    MxN               MxN-i
                      th =                        h +         hi;                   (9)
                            i=MxN-(256 + 1)             i=1
                                 tj = mod (ti, 256).                              (10)
    Step 5: In order to obtain     {  t*} , the modulo operation and binary cycle
shift operation are employed.        j   is acquired by Modulo operation and we
select 8 as the modulo value, since the value of         j that we want less or equal
to 8 can make the subsequent operation of binary cycle shift more efficient.
The relative big value of {ti} does not need to implement the cycle operation
and the relative small value of {ti} makes the times of circulation less.
                                   j = mod (ti, 8),                               (11)
                                     t* = T(ti, j).                               (12)
    Step 6: The measured values of compression are designed as 0(i), which
are XOR-ed with the value of         {  ti}    obtained through cyclic addition and
modulo operation, the value of         {  ti}   obtained by binary shift operation,
and the previously output cipher-pixel value C(i - 1).             According to the
following equation, we can obtain the encrypted image.
                    Q(i)  =    0(i)  o t(i) o t*(i) o   C(i - 1).                 (13)
                                             4

2.3. Permutationprocess
    The purpose of permutation is to scramble the matrix  Q to get superior
image encryption effect.  The output matrix    Q is scrambled by an index
sequence s generated with length M x N by 2D chaotic map with initial
values x4 and yo.    The matrix  Q is sorted with the index sequence s to
require the encrypted image C.
    The process of decryption is opposite to the encryption process, where
the pixels of inverse permutation operation should be implemented firstly,
and then three XOR operations are carried out. At last, one can obtain the
decrypted image with the SLa algorithm.
                                     5

     (1). The procedures of compression are as follows:
     Step 1: Transform X into the ITdomain to obtain a.
     Step 2: Construct the measurement matrix by partial Hadamard ma
trix. The number of columns in the original image is marked as N. First
ly, generate two sequences with length 2N through using 2D chaotic map
with the initial values x                   and y'. The former N numbers of the two se
quences I       =     [li, 12, ... , IN, -- -1 2N]  and m       =   i,Mi  2 , ... , MN, ... , m2N are dis
carded to get the index sequences. Then, sort the nature sequence [1, 2, ..., N]
with the index sequences I and m.                            The sorted sequences are marked as
b  =   [bi, b2 , ... , bNI and p =           [PI, P2, ---, PNI,   where bi E [1, N], pi c [1, N] and
i E [1, N]. Finally, choose the row vectors H(di, :), H(d 2 ,:),..., H(dN,:) Of
Hadamard matrix H of the order N to compose the measurement matrix 1
of size M x N, where di = (bi + pi)/                      2.
                                 @ = [H(di, :), H(d 2 ,:),..., H(dN, :)]T,                             (1)
where the H(di,:) is a line of row vectors.
     Step 3: Project X into D to get y.
                        y=     I)X = -) (X1, X2, ...-, XN)          =y1, Y2, --- yN) -(2)
     Step 4: Sigmoid function is further used to transform the measured values
into a stationary range [0,255].
     (2). The procedures of diffusion are as follows:
     Step 1: Sequences {xi} and {yi} are generated by 2D chaotic map with
the length M x N. The initial values are xg and yb', and the range of generated
sequences are [0, 1].
     Step 2: Two methods are employed with respect to different range of
values and the function of two methods is to transform the sequences {xi}
and {yi} into the sequences {x*} and {y*}, which are the integral sequences.
The following equations describe the transformation.
     if [100 x Xi] < 100 x Xi;
                   {x7} = ([1000 x (100 x xi)] - [100 x xi]) mod 256;                                  (3)
                                                            1

    if [100 x X1 ] > 100 x X1 ;
          {x7} = ([1000 x (1 - (100 x xi))] - [100 x x1 ]) mod 256;         (4)
    if [100 x yj] < 100 x yj;
              {y7} = ([1000 x (100 x yi)] - [100 x yj]) mod 256;            (5)
    if [100 x yj] > 100 x yj;
           {yP} = ([1000 x (1 - (100 x yi))] - [100 x yj]) mod 256;         (6)
where [x] is round to the nearest integer.
    Step 3: The two sequences {x7} and {y7} can generate a new sequence
by performing the operation of mean value.
                                         X* + Y7
                                    hi=_      2                             (7)
    Step 4: The cyclic addition with 256 numerical values of the sequence {hi}
is executed to obtain {ti} in order to make the keystream more complicated
and the attack more difficulty. Because the value of sequence {ti} is greatly
large, we make a modulo operation to obtain the range of value in [0, 255]
to reduce the burden of data. The specific cyclic shift addition and Mudulo
operation are shown in the followings.
    when 1        KM x N - (256 + 1);
                                         i+255
                                   t      -1=    hi;                        (8)
    when M x N - (256 + 2) < i K M x N;
                                  MxN                   MxN-i
                       tj                        5 5(9)
                                                hi1 +i-     h hi;-9
                           i=MxN-(256 + 1)
                                tj = mod (ti, 256).                       (10)
                                           2

    Step 5: In order to obtain { t*} , the modulo operation and binary cycle
shift operation are employed.    j  is acquired by Modulo operation and we
select 8 as the modulo value, since the value of   j that we want less or equal
to 8 can make the subsequent operation of binary cycle shift more efficient.
The relative big value of {ti} does not need to implement the cycle operation
and the relative small value of {ti} makes the times of circulation less.
                                j = mod (ti, 8),                           (11)
                                 t* = T (ti, j).                           (12)
    Step 6: The measured values of compression are designed as 0(i), which
are XOR-ed with the value of { ti} obtained through cyclic addition and
modulo operation, the value of { t7} obtained by binary shift operation,
and the previously output cipher-pixel value C(i - 1). According to the
following equation, we can obtain the encrypted image.
                    Q (1)= O(1)   (Dt(s) (Dt*(I) (DC(I - 1).               (13)
     (3). Permutation process
    The purpose of permutation is to scramble the matrix     Q to get  superior
image encryption effect.    The output matrix      Q is scrambled by an index
sequence s generated with length M x N by 2D chaotic map with initial
values x' and yo.    The matrix    Q  is sorted with the index sequence s to
require the encrypted image C.
                                        3

<removed-date>
<removed-apn>
                            (a)                     (b)                     (c)
              Fig. 1. (a) Original color image; (b) Encrypted color image; (c) Decrypted color
              image.
                 A visual example of illustrating the encryption and decryption results.
                                                     1

