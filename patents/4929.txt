                                         ABSTRACT
The SNAP MOBILE PAYMENT APPARATUSES, METHODS AND SYSTEMS ("SNAP")
transform real-time generated merchant-product Quick Response codes via SNAP components
into virtual wallet card-based transaction purchase notifications.   In one embodiment, the
SNAP obtains a snapshot of a QR code presented on a display screen of a point-of-sale device
from a mobile device. The SNAP decodes the QR code to obtain product information included
in a checkout request of the user, and merchant information for processing a user purchase
transaction with a merchant providing the QR code. The SNAP accesses a user virtual wallet
to obtain user account information to process the user purchase transaction with the merchant.
Using the product information, merchant information and user account information, the SNAP
generates a card authorization request, and which the SNAP provides to a payment network for
transaction processing. Also, the SNAP obtains a purchase receipt confirming processing of
the user purchase transaction.

WO 2012/112822                                                                       PCT/US2012/025530
                                              1/53                                                        U
                                                                                                        E
                                                                                                        0
                                                          Cc'
                                    MC            C                                                     CC~
                                       -al      S      ()>f,  --                                           )
                                       C14          _0                                                 c
                                       CD                         a)
                    =:
                     Z6                                                                                  C',
                      0-)                                                                                cc
         Cc    0                                                                                       wU
               CM
    U,          C:         ~                                                     0.   CD
                      U)                                                            0
                     o    E                                      0 aw       0            .
                                                               o                      0
                                                                     Ho  pW         Qp
                                            Col
                                             EE                       UE
  >,~~U
  cc                                    )          A
  Cc      U)     )a-:=
               U5 C
          Q    0
        M- Cc,                                                                U,
             CCJ                 .,
            =,                >'      M~
                           co              >

       WO 2012/112822                                                      PCT/US2012/025530
 1                               SNAP MOBILE PAYMENT
 2                  APPARATUSES, METHODS AND SYSTEMS
 3 [oo01]         This patent application disclosure document (hereinafter "description"
 4 and/or  "descriptions") describes inventive aspects directed at various novel innovations
 5 (hereinafter  "innovation," "innovations," and/or "innovation(s)") and contains material
 6 that is subject to copyright, mask work, and/or other intellectual property protection.
 7 The  respective owners of such intellectual property have no objection to the facsimile
 8 reproduction   of the patent disclosure document by anyone as it appears in published
 9 Patent  Office file/records, but otherwise reserve all rights.
10                                    PRIORITY CLAIM
11[0 0 0 2]       This application claims priority under 35 USC § 119 to: United States
12 provisional patent application serial no. 61/443,624 filed February          16, 2011, entitled
13 "MOBILE CAPTURE CHECKOUT APPARATUSES,                        METHODS AND SYSTEMS,"
14 attorney docket no. P-42032PRVI 20270-127PV; United States provisional patent
15 application serial no. 61/512,248 filed July          27,  2011,  entitled "SNAP MOBILE
16 PAYMENT       APPARATUSES,         METHODS        AND   SYSTEMS,"      attorney    docket   no.
17 loUSoi120270-175PV;        United    States   provisional   patent  application     serial  no.
18 61/522,213    filed August     10,   2011,   entitled "UNIVERSAL MOBILE             PAYMENT
19 PLATFORM        APPARATUSES,       METHODS AND            SYSTEMS,"     attorney docket no.
20 1oUSo3|20270-175PV2;        and United States provisional patent application serial no.
21 61/527,576 filed August    25, 2011,  entitled "SNAP MOBILE PAYMENT APPARATUSES,

       WO 2012/112822                                                 PCT/US2012/025530
                                                2
 1 METHODS AND SYSTEMS," attorney docket no. 1oUSo2|20270-175PV1.                The entire
 2 contents   of the aforementioned applications are expressly incorporated by reference
 3 herein.
 4                                         FIELD
 5 [0003]         The present inventions are directed generally to apparatuses, methods,
 6 and   systems for electronic purchase transactions, and more particularly, to SNAP
 7 MOBILE    PAYMENT APPARATUSES, METHODS AND SYSTEMS ("SNAP").
 8                                   BACKGROUND
 9 [0004]         Consumer transactions typically require a customer to select a product
10 from a store shelf or website, and then to check the out at a checkout counter or
11 webpage. Product information is typically selected from a webpage catalog or entered
12 into a point-of-sale terminal device. In a physical retail environemtn product
13 information is automatically entered by scanning an item barcode with an integrated
14 barcode scanner at a point-of-sale register, and the customer is usually provided with a
15 number of payment options, such as cash, check, credit card or debit card.           Once
16 payment is made and approved, the point-of-sale register memorializes the transaction
17 in the merchant's computer system, and a receipt is generated indicating the satisfactory
18 consummation of the transaction.

       WO 2012/112822                                                 PCT/US2012/025530
                                                3
 1                  BRIEF DESCRIPTION OF THE DRAWINGS
 2 [o005]        The accompanying appendices and/or drawings illustrate various non
 3 limiting, example, inventive aspects in accordance with the present disclosure:
 4 [oo06]        FIGURES 1A-F show block diagrams illustrating example aspects of a snap
 5 mobile  payment-based purchase transaction in some embodiments of the SNAP;
 6 [0007]        FIGURES 2A-F shows application user interface diagrams illustrating
 7 example   features of a snap mobile payment app facilitating snap mobile payment in
 8 some   embodiments of the SNAP;
 9 [0008]        FIGURES 3A-E show application user interface diagrams illustrating
1o example features of a snap mobile payment app for capturing product barcodes,
11 securing user data and preventing fraud in some embodiments of the SNAP;
12 [0009]        FIGURES 4A-D show data flow diagrams illustrating an example snap
13 mobile payment procedure in some embodiments of the SNAP;
14 [0010]        FIGURES 5A-E show logic flow diagrams illustrating example aspects of
15 executing a snap mobile payment in some embodiments of the SNAP, e.g., a Snap
16 Mobile Payment Execution ("SMPE") component 500;
17 [0011]        FIGURES 6A-B show logic flow diagrams illustrating example aspects of
18 processing a Quick Response code in some embodiments of the SNAP, e.g., a Quick
19 Response Code Processing ("QRCP") component 6oo;
20 [0012]        FIGURE 7 shows a user interface diagram illustrating an overview of
21 example features of virtual wallet applications in some embodiments of the SNAP;

       WO 2012/112822                                                    PCT/US2012/025530
                                                   4
 1 [o 013]        FIGURES 8A-G show user interface diagrams illustrating example features
 2 of virtual wallet applications in a shopping mode, in some embodiments of the SNAP;
 3 [0014]         FIGURES 9A-F show user interface diagrams illustrating example features
 4 of virtual wallet applications in a payment mode, in some embodiments of the SNAP;
 5 [0015]         FIGURE 10 shows a user interface diagram illustrating example features of
 6 virtual wallet applications, in a history mode, in some embodiments of the SNAP;
 7 [0016]         FIGURES 11A-F show user interface diagrams illustrating example
 8 features  of virtual wallet applications in a snap mode, in some embodiments of the
 9 SNAP;
10 [0017]         FIGURE    12 shows a user interface diagram illustrating example features of
11 virtual wallet applications, in an offers mode, in some embodiments of the SNAP;
12 [0018]         FIGURES 13A-B show user interface diagrams illustrating example
13 features of virtual wallet applications, in a security and privacy mode, in some
14 embodiments of the SNAP;
15 [0019]         FIGURE 14 shows a block diagram illustrating embodiments of a SNAP
16 controller.
17 [0020]         The leading number of each reference number within the drawings
18 indicates the figure in which that reference number is introduced and/or detailed. As
19 such, a detailed discussion of reference number 101 would be found and/or introduced
20 in Figure  1. Reference number   201  is introduced in Figure 2, etc.
21

       WO 2012/112822                                                   PCT/US2012/025530
                                                 5
 1                              DETAILED DESCRIPTION
 2                            SNAP MOBILE PAYMENT (SNAP)
 3 [0021]         The SNAP       MOBILE    PAYMENT     APPARATUSES,         METHODS       AND
 4 SYSTEMS     (hereinafter "SNAP") transform real-time-generated merchant-product Quick
 5 Response    codes, via SNAP components, into virtual wallet card-based transaction
 6 purchase    notifications.   FIGURES 1A-F show block diagrams illustrating example
 7 aspects  of a snap mobile payment-based purchase transaction in some embodiments of
 8 the  SNAP. With reference to FIGURE 1A, in some implementations, a user, e.g.,      1oia-b,
 9 may   wish to purchase products at a merchant store, e.g., io3a, or at a merchant website,
10 e.g., 103b. For example, at a merchant store, the user may scan barcodes for a number
11 of products, e.g., io2a, at a point-of-sale ("POS") terminal in the store, e.g., io3a, and
12 then indicate that the user wishes to checkout the scanned items.                 In some
13 implementations, the POS terminal may generate a Quick Response ("QR") code, e.g.,
14 105a, including information on the scanned product items, as well as merchant
15 information for processing the purchase transaction via a payment network. The user
16 may capture an image of the QR code generated by the POS terminal using a user
17 device, such as a smartphone. For example, the user device may have executing on it an
18 app for snapping the merchant-product QR code.          The user device may utilize the
19 information extracted from the QR code, along with information on a virtual wallet tied
20 to the user device to initiate a purchase transaction. For example, the user device may
21 utilize the product and merchant information extracted from the QR code, and financial

       WO 2012/112822                                                  PCT/US2012/025530
                                               6
 1 payment information from the virtual wallet, to create a purchase transaction request,
 2 and  submit the request to a payment network (e.g., credit card processing network).
 3 [o022]         In some implementations, the user device may utilize methods alternative
 4 to capture of a QR code to obtain information from the POS terminal. For example, the
 5 POS    terminal may communicate the information required for submitting a purchase
 6 transaction  request to a payment network to user device via BluetoothTM, Wi-Fi, SMS,
 7 text message, electronic mail, and/or other communication methods.
 8 [0023]         In some implementations, a user  1o1b  may wish to checkout items stored
 9 in a virtual shopping cart on an online shopping website, e.g., 102b. For example, the
1o user may be viewing the website using a secure display (e.g., that is part of a trusted
11computing     device of the user). Upon indicating that the user wishes to checkout the
12 items in the virtual shopping cart, the website may provide a QR code including
13 information on the products in the virtual shopping cart and merchant information. For
14 example, in the scenario where the user utilizes a secure display, the QR code may be
15 displayed at a random position within the secure display for security purposes. The user
16 may capture a snapshot of the displayed QR code, and utilize payment information from
17 the virtual wallet associated with the user device to create a purchase transaction
18 request for processing by the payment network.       Upon completion of the purchase
19 transaction, the payment network may provide a purchase receipt, e.g., 107 directly to
20 the user device 1o6, the POS terminal in the store and/or the secure display (for the
21 secure online shopping scenario) as confirmation of completion of transaction
22 processing.    Thus, in some implementations, the merchant may be shielded from
23 obtaining personal and/or private information of the user while processing the purchase

        WO 2012/112822                                                    PCT/US2012/025530
                                                  7
 1 transaction, while ensuring integrity of the user's virtual wallet using a secure display for
 2 presenting   the merchant-product QR code.
 3 [o024]          In various implementations, such payment processing may be utilized for
 4a   wide variety of transactions. For example, a user dining at a restaurant may obtain a
 5 bill including a QR pay code including detail on the dining charges included in the bill,
 6 and   a merchant ID for the restaurant. The user may take a snapshot of the restaurant
 7 bill  using the user's smartphone, and utilize the user's virtual wallet to pay for the
 8 restaurant   bill, without revealing any financial or personal information about the user to
 9 the  restaurant.
10 [0 0 25]        With reference to FIGURE 1B, in some implementations, e.g.,       11o, a user
11 i1   may wish to checkout items stored in a (virtual) shopping cart in a (online) shopping
12 store, e.g., 112,  using a reverse snap mobile payment procedure. For example, the user
13 may be viewing the website using a secure display that is part of a trusted computing
14 device of the user, e.g.,   113, or via a POS terminal in a brick-and-mortar store. Upon
15 indicating that the user wishes to checkout the items in the virtual shopping cart, the
16 user may generate, e.g.,    114, a QR code 115b via a mobile app on the user's mobile device
17 including information on the user payment methods, offers, rewards, and/or other
18 aspects connected to the user's virtual wallet. The user may provide the QR code
19 displayed on the user's mobile device to a webcam (or other QR code capture device
20 and/or mechanism) installed on the trusted computing device (or POS terminal). The
21 user's trusted computing device or POS terminal may obtain a snapshot of the QR code
22 generated by the user's mobile device, e.g., 116, and utilize payment information from
23 QR code generated by the user to create a purchase transaction request for processing

       WO 2012/112822                                                     PCT/US2012/025530
                                                  8
 1 by the payment network. Upon completion of the purchase transaction, the payment
 2 network    may provide a purchase receipt directly to the user mobile device, the POS
 3 terminal   in the store and/or the secure display (for the online shopping scenario) as
 4 confirmation    of completion of transaction processing. Thus, in some implementations,
 5 the  user may be able to utilize a QR code generated by the user's mobile device as a
 6 replacement     for a plastic payment card (e.g., credit, debit, prepaid card), or as a
 7 substitute   for other financial information transport mechanisms such as near-field
 8 communications,       Bluetooth®, etc.   In some implementations, the QR code may be
 9 representative    of a one-time anonymized credit card number (e.g., see the description
10 associated with FIGURE 3B).
11 [o 0 26]        In some implementations, a first user 121b may desire to pay a second user
12 121a  an amount of money (or a value equivalent, e.g., virtual currency, alternate real
13 currency, rewards, miles, points, etc.), e.g., P2P snap mobile payment     120.   The second
14 user  121a  may generate a limited-time-validity QR code, e.g.,  122, including information
15 on the amount of money to be transferred, as well as a privacy token/alias linked to a
16 financial account of the second user.        The second user may display the QR code
17 generated to the first user (e.g., by holding the second user's mobile phone displaying
18 the QR code to the first user; sending the QR code by email, social network message,
19 tweet, etc.). The first user may take a snapshot of the QR code using the first user's
20 mobile phone, e.g.,     123, and utilize the amount of money, the second user's privacy
21 token/alias linking to a financial account, and the first user's virtual wallet linked to the
22 first user's mobile phone, to generate a purchase transaction request for processing by
23 the payment network. Upon completion of the transaction, the payment network may
24 provide transaction notification receipts to the users who are parties to the transaction.

       WO 2012/112822                                                   PCT/US2012/025530
                                                  9
 1 In alternate implementations, the two users may share the data encoded in the QR code
 2 via   methods alternate to the QR code, including but not limited to: near-field
 3 communications      (NFC), Wi-FiTM, BluetoothTM, cellular network, SMS, email, text
 4 messages    and/or the other communication protocols.
 5 [o027]          In general, it is to be understood that such tokens, alias and/or handles
 6 may    be advantageously utilized in various implementations of snap mobile payment.
 7 For   example, a user wishing to engage in reverse snap mobile payment procedure (see,
 8 e.g.,  FIGURE 1B, element 11o) may generate a QR code embodying information on a
 9 handle    pointing to financial payment information stored on a server of a payment
1o network system. For example, some implementations of snap mobile payment may
11 utilize, to generate and/or process handles, a payment tokenization procedure similar to
12 that described in U.S. application no.          13/153,301, titled "Payment tokenization
13 apparatuses, methods and systems," the entire contents of which are expressly
14 incorporated by reference herein. Further, in some implementations, the handle may
15 encode information according to a compact messaging protocol, such as described in
16 U.S. patent no. 6,837,425, titled "Compact protocol and solution for substantially offline
17 messaging between portable consumer device and based device," the entire contents of
18 which are expressly incorporated by reference herein. In some reverse snap mobile
19 implementations, the user may provide the QR code embodying the handle and
20 displayed on the user's mobile device to a webcam (or other QR code capture device
21 and/or mechanism) installed on the trusted computing device (or POS terminal). The
22 user's trusted computing device or POS terminal may obtain a snapshot of the QR code
23 generated by the user's mobile device, e.g., 116, and provide the handle extracted from
24 the QR code to a merchant server for purchase transaction request processing by the

       WO 2012/112822                                                  PCT/US2012/025530
                                                10
 1 payment network.      The merchant server may generate a card authorization request
 2 (such  as described further below in the discussion with reference to FIGURE 4A) for
 3 processing   the purchase transaction using the handle, and may provide the card
 4 authorization    request to a payment network.       Upon completion of the purchase
 5 transaction,  the payment network may provide a purchase receipt directly to the user
 6 mobile   device, the POS terminal in the store, and/or the secure display (e.g., for the
 7 online  shopping scenario) as confirmation of completion of transaction processing using
 8 the handle.
 9 [o028]         In some implementations, a user alert mechanism may be built into the
10 snap mobile payment purchase transaction process flow.           For example, in some
11implementations,     a merchant server may embed a URL specific to the transaction into
12 the card authorization request. For example, in some implementations, a POS terminal,
13 remote device and/or desktop computer may embed the URL into optional level 3 data
14 in the card authorization request. The URL may point to a webpage stored on the
15 merchant's server dedicated to the transaction that is the subject of the card
16 authorization request. For example, the webpage pointed to by the URL may include
17 details on the purchase transaction, e.g., products being purchased, purchase cost, time
18 expiry, status of order processing, and/or the like.    Thus, the merchant server may
19 provide to the payment network the details of the transaction by passing the URL of the
20 webpage to the payment network. In some implementations, the payment network may
21 provide notifications to the user, such as a payment receipt, transaction authorization
22 confirmation message, shipping notification and/or the like.      In such messages, the
23 payment network may provide the URL to the user device. The user may navigate to the
24 URL on the user's device to obtain alerts regarding the user's purchase, as well as other

       WO 2012/112822                                                     PCT/US2012/025530
                                                 l1
 1 information such as offers, coupons, related products, rewards notifications, and/or the
 2 like.
 3 [o029]         In some implementations, a number of users may engage in group pay via
 4 snap   mobile payment to split a tender, e.g., 130. In some implementations, one of the
 5 users  131a may obtain a snapshot, e.g., 132, of a QR pay code, e.g., 134, generated at a
 6 POS   terminal (or, e.g., presented on paper such as a dining bill), e.g., 133. The user may
 7 in turn generate a QR split pay code, embodying information on the amounts that the
 8 tender   has been split into. The user 131a may present the split tender QR code 135 to
 9 the  other users 131b-c, who may obtain snapshots of the split tender QR code, e.g., 136.
10 In some implementations, the users 131b-c may be reimbursing the user 131a for
11 payment of the original QR code via the payment network, or the users 131b-c may be
12 making direct payments via the split tender QR code to the merchant (e.g., when the
13 user 131a took a snapshot of the merchant's QR code, no payment processing occurred
14 immediately).     In some implementations, the merchant may directly provide a split
15 tender QR code for the users 131a-c.
16 [0030]         In some implementations, group mobile payment may be implemented,
17 instead of utilizing QR codes, via use of an alternate communication mechanism. For
18 example, in some implementations, the POS terminal 133 may utilize a communication
19 protocol such as BluetoothTM    to communicate with the users 131a-c. The POS terminal
20 may, serially or in parallel, establish separate communication sessions with each of the
21 users. Via the separate communication sessions that POS terminal may transmit the
22 product and/or merchant data required by the users' devices to generate individual
23 purchase transaction processing requests.        Thus, via the separate communication

       WO 2012/112822                                                   PCT/US2012/025530
                                                  12
 1 sessions, the POS terminal may split the group tender associated with the users 131a-c
 2 into individual payment amounts.
 3 [o 031]         With reference to FIGURE 1C, in some implementations, snap mobile
 4 payment    methods may be utilized for authentication/verification purposes, and for
 5 providing    digital consent for disclosure of personal and/or private information. For
 6 example,    a user  142 visiting his/her doctor   143 may be required to provide informed
 7 consent   to disclosing personal information (e.g., medical records) to the doctor. The
 8 doctor's  terminal may generate a QR code embodying the doctor's digital certificate as
 9 well  as information on the type/content of medical records of the user that are
10 requested, e.g., 144. The user may snap the QR code via the user's mobile device. The
11user's   mobile device may generate a request for records release according to the QR
12 code, and also serve as verification that the request is obtained from a personal trusted
13 device (e.g., the user's mobile device). In alternate implementations, the user may be
14 able to select the personal information that the user would like to reveal to the
15 healthcare provider, and the user's mobile device may generate a QR code for the
16 doctor's terminal to obtain a snapshot for retrieving the user's medical information. In
17 some implementations, the QR code may also include payment information (e.g., the
18 user's pay account information, or the doctor's acquirer information) along with the
19 information on controlled release of personal information.
20 [0032]          In some implementations, the SNAP may facilitate P2P transactions via
21 pre-filled, modifiable QR payment codes, e.g.,      150. For example, a first user having a
22 public profile page, e.g.,  151, may place an image of a QR code in the public profile, e.g.,
23 152.   For example, the QR code may include a predetermined payment amount for a

       WO 2012/112822                                                   PCT/US2012/025530
                                                  13
 1 purchase transaction initiated by capturing a snapshot of the QR code.             In some
 2 implementations,       the predetermined amount may be $o (e.g., a $o QR pay code). A
 3 second    user may capture a snapshot of the QR pay code using a mobile device, and may
 4 set  an amount that the second user would like to pay the first user via the second user's
 5 mobile    device. The second user's mobile device may provide the information encoded
 6 within   the QR code along with the second-user-chosen payment amount to a payment
 7 network    for transaction processing.
 8 [0033]           It is to be understood that the various aspects described herein of snap
 9 mobile    payment may be utilized for any controlled exchange of information and/or
10 payment. For example, with reference to FIGURE 1D, in some implementations, a user
11may     obtain pay-per-view programming via snap mobile payment, e.g., 16o.              For
12 example, a television display may provide an advertisement including programming
13 information, e.g.,     162, as well as a QR pay code for obtain the programming content,
14 e.g., 161.      The QR code may include information identifying the programming
15 information, as well as information identifying the television subscriber account
16 information, television machine address, and/or the like.         The user may obtain a
17 snapshot of the QR code, and provide the information embodied in the QR code along
18 with information fro the user's mobile device (e.g., subscriber account number linked to
19 the user's virtual wallet, pay account information, and/or the like). Upon processing of
20 the payment information by the payment network, the payment network may provide an
21 indication to the television-programming provider of the payment completion, and the
22 television-programming provider may stream the programming content to the user's
23 television.      As another example, a similar flow may be utilized for in-flight
24 entertainment, e.g.,       170, wherein an in-flight screen may provide programming

       WO 2012/112822                                                       PCT/US2012/025530
                                                   14
 1 information     172,  as well as a QR pay code        171  for the user to snap for in-flight
 2 entertainment     initiation. As another example, a billboard, wall hanging, poster, in-store
 3 advertisement,     hoarding, etc., e.g., 18o, may include an offer for a product/service, and
 4a   QR code including merchant information and product information identifying a
 5 purchase    amount, and/or the like. The user may snap the QR code with the user's
 6 mobile    device linked to the user's virtual wallet to purchase the product and/or service,
 7 and,   if applicable, the product may be directly shipped to the user's address as specified
 8 by   the purchase information exchanged with the payment network as part of the
 9 purchase    request sent by the user's mobile device. As another example, newspapers,
10 e.g., 185, may include offers, advertisements, job postings, and/or the like including QR
11 codes, e.g., 186, embodying the information necessary for the user to initiate a purchase
12 transaction with the payment network.           It is to be understood that any aspects of
13 implementing snap mobile payment discussed in any of the implementations herein,
14 and/or their equivalents, may be utilized in any other implementations discussed
15 herein, and/or their equivalents.
16 [0034]           With references to FIGURES 1E-F, in some implementations, the data
17 required for processing a purchase transaction may be provided via methods alternate
18 to a QR code including, but not limited to: near-field communications (NFC), Wi-Fi TM ,
19 BluetoothTM,      cellular   network,    SMS,  email,    text   messages   and/or   the    other
20 communication protocols.         For example, in some implementations, a user shooping
21 online via a web browser executing on a client device, e.g.,       190, may desire to pay for a
22 purchase of items from an online shopping website, e.g.,        191. The website may include a
23 user interface element that the user may activate to initiate shopping checkout and
24 payment. Upon the user activating the user element, the client displaying the online

       WO 2012/112822                                                  PCT/US2012/025530
                                                 15
 1 shopping website may provide a message to a server of the merchant to initiate secure
 2 purchase    transaction processing.   The server of the merchant operating the online
 3 shopping    website may establish a secure connection (e.g., a Secure Sockets Layer
 4 connection)    to a pay network server of a payment network, e.g.,    192.   Also, the pay
 5 network   server may establish a secure connection to the client. For example, the client
 6 may   include a secure I/O chip that only allows secure connections to be established by
 7 the client with pay network servers of the payment network. Via the secure connection,
 8 the  pay network server may provide an instruction to the client to request the user to
 9 launch   a virtual wallet mobile app on the user device of the user, see e.g., FIGURE 1F,
10 196. The client may accordingly provide a request to the user to launch a virtual wallet
11 mobile app on the user device, e.g., 193, of the user. Upon the user launching the virtual
12 wallet mobile app on the user device, the user device and the client may establish a
13 secure connection with each other (e.g., via BluetoothTM, Wi-Fi, cellular, etc.) In some
14 implementations, the client and user device may be preconfigured to rapidly establish
15 the secure communication channel with each other. Via the secure communication
16 channel, the client may provide data to the user's mobile device, or vice versa, to
17 facilitate initiation of the purchase transaction. The virtual wallet app on the user's
18 mobile device (or the client) may then generate a purchase transaction initiation
19 message and provide it to the pay network server for processing the purchase
20 transaction. Upon completion of transaction processing, the pay network server may
21 provide a notification of payment completion to the client, e.g., FIGURE 1F,     197, or to
22 the user device.
23 [o 035]         FIGURES 2A-F show application user interface diagrams illustrating
24 example features of a snap mobile payment app facilitating snap mobile payment in

       WO 2012/112822                                                    PCT/US2012/025530
                                                  16
 1 some embodiments of the SNAP.                With reference to FIGURE 2A, in some
 2 implementations,     a user may desire to checkout one or items stored in a virtual
 3 shopping   cart of an online merchant website. For example, the user may be utilizing a
 4 browser  application, e.g., 201, to visualize a checkout page of the merchant website, e.g.,
 5 202.  The checkout webpage may depict details of the checkout order, e.g.,    203,  and may
 6 provide  one or more options for the user to provide payment for the purchase of the
 7 store items. In some implementations, the checkout webpage may include an option to
 8 pay for the purchase using a snap mobile payment procedure, e.g.,     204.
 9 [o036]         With reference to FIGURE 2B, in some implementations, upon selecting
10 the option to utilize the snap mobile payment procedure, the merchant checkout
11 webpage, e.g., 206, may provide via the browser application 205, a QR code, e.g.,       209,
12 including information on the items in the virtual shopping cart as well as merchant
13 information for the payment network to process the purchase transaction (e.g., a privacy
14 token/alias linked to an acquirer financial account of the merchant).              In some
15 implementations, the webpage may be displayed via a secure display of a trusted
16 computing device of the user. For example, as a security measure, the position of the
17 QR code frame, e.g.,    207,  within the display may be randomly varied to prevent a
18 snapshot of the QR code from being obtained by fraudulent means (e.g., tampering with
19 the trusted computing device). In some implementations, a security image, e.g., 208,
20 pre-selected by the user may be displayed on the screen so that the user may verify as
21 being accurate. In some implementations, the image may be encrypted by the SNAP
22 before providing it to the trusted computing device.        In some implementations, the
23 trusted computing device may be the only device to hold a decryption key required to
24 decrypt and successfully display the image on the secure display to the user.

       WO 2012/112822                                                  PCT/US2012/025530
                                                17
 1 [o037]         With reference to FIGURE    2C,  in some implementations, such merchant
 2 product  information embodying QR codes may be utilized by a point-of-sale ("POS")
 3 terminal, e.g., 210a-b. For example, in a brick-and-mortar store, the POS terminal may
 4 display a QR code, e.g., 211a-b, that includes the purchase payment amount, e.g.,     212a
 5 b, upon the user indicating that the user wishes to checkout the items in the user's
 6 physical  shopping cart.     For example, the QR code may include data formatted
 7 according  to the extensible Markup Language ("XML"), such as the example data
 8 structure below:
 9     <QRdata>
10        <orderID>4NFU4RG94</order_ID>
11        <timestamp>2011-02-22 15:22:43</timestamp>
12        <expiry-lapse>00:00:30</expiry lapse>
13        <transactioncost>$34.78</transactioncost>
14        <userID>john.q.public@gmail.com</userID>
15        <clientdetails>
16                <clientIP>192.168.23.126</clientIP>
17                <client type>smartphone</client type>
18                <clientmodel>HTC Hero</clientmodel>
19                <OS>Android 2.2</OS>
20                <app installedflag>true</app installed flag>
21        </clientdetails>
22        <secureelement>www.merchant.com/securedyn/0394733/123.png</secureelement>
23        <purchasedetails>
24                <num products>l</num products>
25                <product>
26                       <product type>book</product type>
27                       <product params>
28                              <product title>XML for dummies</product title>
29                              <ISBN>938-2-14-168710-0</ISBN>
30                              <edition>2nd ed.</edition>
31                              <cover>hardbound</cover>
32                              <seller>bestbuybooks</seller>
33                       </product params>
34                       <quantity>l</quantity>
35                </product>
36        </purchasedetails>
37        <merchant params>
38                <merchantid>3FBCR4INC</merchantid>
39                <merchantname>Books & Things, Inc.</merchantname>
40                <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
41        </merchant-params>
42     <QRdata>
43
44
45 [0038]         With reference to FIGURE 2D, in some implementations, the user may
46 obtain a snapshot of the QR code displayed on the screen of the secure display or the

       WO 2012/112822                                                        PCT/US2012/025530
                                                   18
 1 POS terminal using a smartphone, e.g.,        213. For example, the user's smartphone may
 2 have   an app, e.g.,  214, executing on it to detect and capture QR codes, e.g., 216a. For
 3 example,    the user may utilize registration features, e.g., 215, to align the QR code within
 4 the  display of the smartphone. The app may, in some implementations, provide the user
 5 with  the ability to zoom in, e.g., 217, or zoom out, e.g., 218, of the QR code to ensure that
 6 the  image of the QR code fits within the dimensions of the screen of the smartphone.
 7 Upon    aligning the QR code within the display of the smartphone, the user may be able
 8 to  obtain a snapshot of the QR code using a user interface element, e.g.,       219.   The user
 9 may   cancel the snap mobile payment procedure using a user interface element            220  on
10 the display of the smartphone.
11 [o039]          With reference to FIGURE 2E, in some implementations, upon obtaining a
12 snapshot of the merchant-product QR code, the user's smartphone may extract the
13 product and merchant data stored within the QR code, and utilize an account for the
14 user's virtual wallet linked to the user's smartphone to generate a purchase transaction
15 request for processing by a payment network. Upon completion of processing of the
16 payment transaction by the payment network using the information provided by the
17 user's smartphone, the merchant website          222 (via the browser application      221) may
18 provide a purchase receipt        225  for the user.    With reference to FIGURE          2F,  in
19 implementations where the user utilizes the snap mobile payment procedure at a brick
20 and-mortar store, the POS terminal may display a purchase receipt for the user. In
21 some implementations, the payment network may provide a purchaser receipt directly
22 to the smartphone of the user.

       WO 2012/112822                                                   PCT/US2012/025530
                                                  19
 1 [0040]         FIGURES 3A-E show application user interface diagrams illustrating
 2 example    features of a snap mobile payment app for capturing product barcodes,
 3 securing   user data and preventing fraud in some embodiments of the SNAP.             With
 4 reference  to FIGURE 3A, in some implementations, the app executing on the device of
 5 the user may include an app interface providing various features for the user. In some
 6 implementations,    the app may be configured to recognize product identifiers (e.g.,
 7 barcodes,   QR codes, etc.), e.g., 301. For example, the app may be configured to capture
 8 merchant-product     QR codes for snap mobile payment processing, as discussed above
 9 with  reference to FIGURES 2A-F. In some implementations, the user may be required
10 to sign in to the app to enable its features. Once enabled, the camera may provide in
11person    one tap purchasing features for the user. For example, the client device may
12 have a camera via which the app may acquire images, video data, streaming live video,
13 and/or the like, e.g., 303. The app may be configured to analyze the incoming data, and
14 search, e.g., 301, for a product identifier, e.g., 304, such as QR codes 209, 211a-b, 216a
15 and  227.  In some implementations, the app may overlay cross-hairs, target box, and/or
16 like alignment reference markers, e.g., 305, so that a user may align the product
17 identifier using the reference markers so facilitate product identifier recognition and
18 interpretation. In some implementations, the app may include interface elements to
19 allow the user to switch back and forth between the product identification mode and
20 product offer interface display screens (see, e.g., 306), so that a user may accurately
21 study deals available to the user before capturing a product identifier.          In some
22 implementations, the app may provide the user with the ability to view prior product
23 identifier captures (see, e.g., 307) so that the user may be able to better decide which
24 product identifier the user desires to capture. In some implementations, the user may

       WO 2012/112822                                                    PCT/US2012/025530
                                                  20
 1 desire to cancel product purchasing; the app may provide the user with a user interface
 2 element    (e.g., 308) to cancel the product identifier recognition procedure and return to
 3 the  prior interface screen the user was utilizing. In some implementations, the user may
 4 be provided with information about products, user settings, merchants, offers, etc. in list
 5 form   (see, e.g., 309) so that the user may better understand the user's purchasing
 6 options.   Various other features may be provided for in the app (see, e.g., 310).
 7 [0041]           With reference to FIGURE 3B, in some implementations, the app may
 8 include   an indication of the location (e.g., name of the merchant store, geographical
 9 location,   information about the aisle within the merchant store, etc.) of the user, e.g.,
10 311. The app may provide an indication of a pay amount due for the purchase of the
11 product, e.g.,    312. In some implementations, the app may provide various options for
12 the user to pay the amount for purchasing the product(s). For example, the app may
13 utilize the GPS coordinates to determine the merchant store within the user is present,
14 and direct the user to a website of the merchant. In some implementations, the SNAP
15 may provide an API for participating merchants directly to facilitate transaction
16 processing. In some implementations, a merchant-branded SNAP application may be
17 developed with the SNAP functionality, which may directly connect the user into the
18 merchant's transaction processing system. For example, the user may choose from a
19 number of cards (e.g., credit cards, debit cards, prepaid cards, etc.) from various card
20 providers, e.g., 313. In some implementations, the app may provide the user the option
21 to pay the purchase amount using funds included in a bank account of the user, e.g., a
22 checking, savings, money market, current account, etc., e.g.,             314.     In some
23 implementations, the user may have set default options for which card, bank account,
24 etc. to use for the purchase transactions via the app. In some implementations, such

       WO 2012/112822                                                    PCT/US2012/025530
                                                 21
 1 setting of default options may allow the user to initiate the purchase transaction via a
 2 single  click, tap, swipe, and/or other remedial user input action, e.g., 315a. In some
 3 implementations,     when the user utilizes such an option, the app may utilize the default
 4 settings  of the user to initiate the purchase transaction. In some implementations, the
 5 app   may allow the user to utilize other accounts (e.g., GoogleTM Checkout, PaypalTM
 6 account,   etc.) to pay for the purchase transaction, e.g., 316. In some implementations,
 7 the  app may allow the user to utilize rewards points, airline miles, hotel points,
 8 electronic   coupons, printed coupons (e.g., by capturing the printed coupons similar to
 9 the  product identifier) etc., to pay for the purchase transaction, e.g., 317-318. In some
10 implementations, the app may provide an option to provide express authorization
11 before initiating the purchase transaction, e.g., 319. In some implementations, the app
12 may provide a progress indicator provide indication on the progress of the transaction
13 after the user has selected an option to initiate the purchase transaction, e.g.,   320. In
14 some implementations, the app may provide the user with historical information on the
15 user's prior purchases via the app, e.g.,    321.  In some implementations, the app may
16 provide the user with an option to share information about the purchase (e.g., via email,
17 SMS, wall posting on Facebook®, tweet on TwitterTM, etc.) with other users and/or
18 control information shared with the merchant, acquirer, payment network etc., to
19 process the purchase transaction, e.g.,     322.   In some implementations the app may
20 provide the user an option to display the product identification information captured by
21 the client device (e.g., in order to show a customer service representative at the exit of a
22 store the product information), e.g., 324.       In some implementations, the user, app,
23 device and or SNAP may encounter an error in the processing. In such scenarios, the

       WO 2012/112822                                                  PCT/US2012/025530
                                                 22
 1 user may be able to chat with a customer service representative (e.g., VerifyChat 323) to
 2 resolve the difficulties in the purchase transaction procedure.
 3 [o042]         In some implementations, the user may select to conduct the transaction
 4 using  a one-time anonymized credit card number, see e.g., 315b.        For example, the
 5 SNAP    may utilize a pre-designated anonymized set of card details (see, e.g.,
 6 "AnonCardi,"    "AnonCard2"). As another example, the SNAP may generate, e.g., in real
 7 time,  a one-time anonymous set of card details to securely complete the purchase
 8 transaction  (e.g., "Anon It 1X"). In such implementations, the app may automatically
 9 set the user profile settings such that the any personal identifying information of the
1o user will not be provided to the merchant and/or other entities.                 In some
11implementations,     the user may be required to enter a user name and password to enable
12 the anonymization features.
13 [0043]         With reference to FIGURE 3C, in some implementations, the user
14 interface elements of the snap mobile payment app may be advantageously arranged to
15 provide the user the ability to process a purchase with customized payment parameters
16 with a minimum number of user gestures applied to the user's mobile device.           For
17 example, the user may be provided with an overloaded user interface element, e.g., 325
18 326. For example, if the user has a QR pay code within the viewing angle of a camera
19 included in the user's mobile device, the user may activate element 325 to snap the QR
20 code and utilize predetermined default settings to process the purchase based on the QR
21 code. However, if the user wishes to customize the payment parameters, the user may
22 activate user interface element 326 (e.g., press and continue to hold). Upon doing so,
23 the app may provide a pop-up menu, e.g., 327, providing a variety of payment

       WO 2012/112822                                                   PCT/US2012/025530
                                                  23
 1 customization choices, such as those provided previously. The user may, e.g., drag the
 2 user's   finger to the appropriate settings the user prefers, and release the user's finger
 3 from    the touchscreen of the user's mobile device to select the setting for payment
 4 processing.     In alternate implementations, the payment settings options, e.g., 330, and
 5 QR   capture activation buttons, e.g., 328a-b (e.g., 328b may provide even more settings
 6 that  those displayed in the initial screen), may be included in the user interface along
 7 with   a window, e.g.,   329, for capturing the QR code via the mobile device's camera. In
 8 alternate   implementations, the user's mobile device may generate a hybrid QR code
 9 payment     settings graphic, and the POS terminal (or user's trusted computing device)
1o may capture the entire graphic for payment processing.
11 [0044]           With reference to FIGURE 3D, in some implementations, a user may be
12 advantageously able to provide user settings into a device producing a QR code for a
13 purchase transaction, and then capture the QR code using the user's mobile device. For
14 example, a display device of a point-of-sale terminal may be displaying a checkout
15 screen, such as a web browser executing on a client, e.g., 331, displaying a checkout
16 webpage of an online shopping website, e.g.,         332.  In some implementations, the
17 checkout screen may provide a user interface element, e.g., 333a-b, whereby the user
18 can indicate the desire to utilize snap mobile payment. For example, if the user activates
19 element 331a, the website may generate a QR code using default settings of the user, and
20 display the QR code, e.g., 335, on the screen of the client for the user to capture using
21 the user's mobile device. In some implementations, the user may be able to activate a
22 user interface element, e.g., 333b, whereby the client may display a pop-up menu, e.g.,
23 334, with additional options that the user may select from. For example, the website
24 may provide user selection options similar to those discussed above in the description

       WO 2012/112822                                                    PCT/US2012/025530
                                                  24
 1 with reference to FIGURES 3B-C. In some implementations, the website may modify
 2 the QR code 335 in real-time as the user modifies settings provided by activating the
 3 user  interface element 333b. Once the user has modified the settings using the pop-up
 4 menu,    the user may capture a snapshot of the QR code to initiate purchase transaction
 5 processing.
 6 [o045]         With reference to FIGURE 3E, in some implementations, the SNAP may
 7 provide   the user with a user interface to modify the user's snap mobile payment settings.
 8 For  example, the SNAP may provide a web interface, e.g., 341. For example, the user
 9 may   be able to modify security settings of the user's virtual wallet, e.g., 342, using the
1o web interface. For example, the user may review a list of trusted device, e.g., 344, via
11which    the user may access the user's virtual wallet. In some implementations, the web
12 interface may provide a user interface element to add a trusted device, e.g., 343. The
13 web interface may also provide the user with additional security options. For example,
14 the user be able to set a security passphrase, e.g., 345, modify settings for when the user
15 should be challenged before authorizing a purchase transaction, e.g., 346, the type/style
16 of presentation of the security features, e.g., 347, and a security image to be displayed on
17 the terminal utilized in snap mobile payment, e.g., 348. In various implementations,
18 the user may be able to access other services including modifying user profiles,
19 accounts, account preferences, adding cards, obtaining offers and coupons, locating
20 ATM machines, etc.
21 [0046]         FIGURES 4A-D show data flow diagrams illustrating an example snap
22 mobile payment procedure in some embodiments of the SNAP.                With reference to
23 FIGURE 4A, in some implementations, a user, e.g., 401, may desire to purchase a

       WO 2012/112822                                                       PCT/US2012/025530
                                                   25
 1 product, service, offering, and/or the like ("product"), from a merchant, e.g., 403, via a
 2 merchant    online site or in the merchant's store. The user may communicate with a
 3 merchant    server, e.g., 403, via a client such as, but not limited to: a personal computer,
 4 mobile   device, television, point-of-sale terminal, kiosk, ATM, and/or the like (e.g.,    402).
 5 For  example, the user may provide user input, e.g., checkout input 411, into the client
 6 indicating  the user's desire to purchase the product. For example, a user in a merchant
 7 store may scan a product barcode of the product via a barcode scanner at a point-of-sale
 8 terminal.   As another example, the user may select a product from a webpage catalog on
 9 the  merchant's website, and add the product to a virtual shopping cart on the
10 merchant's website. The user may then indicate the user's desire to checkout the items
11in  the (virtual) shopping cart. The client may generate a checkout request, e.g.,      412, and
12 provide the checkout request, e.g., 413, to the merchant server. For example, the client
13 may provide a (Secure) Hypertext Transfer Protocol ("HTTP(S)") GET message
14 including the product details for the merchant server in the form of data formatted
15 according to the eXtensible Markup Language ("XML"). Below is an example HTTP(S)
16 GET message including an XML-formatted checkout request for the merchant server:
17     GET /checkout.php HTTP/l.1
18     Host: www.merchant.com
19     Content-Type: Application/XML
20     Content-Length: 718
21     <?XML version = "1.0" encoding = "UTF-8"?>
22     <checkoutrequest>
23         <sessionID>4NFU4RG94</sessionID>
24         <timestamp>2011-02-22 15:22:43</timestamp>
25         <userID>john.q.public@gmail.com</user_ID>
26         <clientdetails>
27                <clientIP>192.168.23.126</client_IP>
28                <client type>smartphone</client type>
29                <clientmodel>HTC Hero</clientmodel>
30                <OS>Android 2.2</OS>
31                <app installedflag>true</app installed flag>
32         </clientdetails>
33         <purchasedetails>
34                <num products>l</num products>
35                <product>
36                        <product type>book</product type>

       WO 2012/112822                                                  PCT/US2012/025530
                                                26
 1                       <product params>
 2                              <product title>XML for dummies</product title>
 3                              <ISBN>938-2-14-168710-0</ISBN>
 4                              <edition>2nd ed.</edition>
 5                              <cover>hardbound</cover>
 6                              <seller>bestbuybooks</seller>
 7                       </product params>
 8                       <quantity>l</quantity>
 9                </product>
10         </purchase details>
11     </checkoutrequest>
12
13
14 [o047]         In some implementations, the merchant server may obtain the checkout
15 request from the client, and extract the checkout detail (e.g., XML data) from the
16 checkout request. For example, the merchant server may utilize a parser such as the
17 example parsers described below in the discussion with reference to FIGURE        14. The
18 merchant server may extract the product data, as well as the client data from the
19 checkout request. In some implementations, the merchant server may query, e.g., 414, a
20 merchant database, e.g., 404, to obtain product data, e.g., 415, such as product pricing,
21 sales tax, offers, discounts, rewards, and/or other information to process the purchase
22 transaction.    For example, the database may be a relational database responsive to
23 Structured Query Language ("SQL") commands. The merchant server may execute a
24 hypertext preprocessor ("PHP") script including SQL commands to query the database
25 for product data.     An example PHP/SQL command listing, illustrating substantive
26 aspects of querying the database, is provided below:
27     <?PHP
28     header('Content-Type: text/plain');
29     mysql-connect("254.93.179.112",$DBserver,$password); // access database server
30     mysql selectdb("PRODUCTS.SQL"); // select database table to search
31     //create query
32     $query = "SELECT productinfo product price taxlinfolist offerslist
33         discountslist rewardslist FROM ProdTable WHERE product LIKE '%' $prod";
34     $result = mysql-query($query); // perform the search query
35     mysql-close("PRODUCTS.SQL"); // close database access
36     ?>
37
38

       WO 2012/112822                                                    PCT/US2012/025530
                                                27
 1 [o048]         In some implementations, in response to obtaining the product data, the
 2 merchant   server may generate, e.g., 416a, a QR pay code, and/or secure display element
 3 according  to the security settings of the user (see, e.g., 358). The merchant server may
 4 provide  the QR code to the client, so that the client may display the QR code, and the
 5 user  may capture the QR code using the user's device to obtain merchant and/or
 6 product   data for generating a purchase transaction processing request.       In alternate
 7 implementations,    the merchant server may direct the client to communicate the product
 8 and/or   merchant data required to process the transaction to the user's device via an
 9 alternate  communication protocol, such as, but not limited to: Wi-FiTM, BluetoothTM,
1o cellular network, SMS, email and/or like communication protocols. For example, the
11 merchant server may direct the client to initiate a plug-in on its system to provide the
12 alternate communication service, and transmit the product and/or merchant data to the
13 user's device via the communication service.
14 [0049]         In implementations utilizing a QR code, the merchant server may generate
15 a QR code embodying the product information, as well as merchant information
16 required by a payment network to process the purchase transaction.                 In some
17 implementations, the QR code may include at least information required by the user
18 device capturing the QR code to generate a purchase transaction processing request,
19 such as a merchant identifier (e.g., a merchant ID number, merchant name, store ID,
20 etc.) and a session identifier for a user shopping session associated with the shopping
21 website/brick-and-mortar store.

       WO 2012/112822                                                  PCT/US2012/025530
                                                28
 1 [o o50]        In some implementations, the merchant server may generate in real-time,
 2a   custom, user-specific merchant-product XML data structure having a time-limited
 3 validity period, such as the example 'QR data' XML data structure provided below:
 4     <QRdata>
 5         <order_ID>4NFU4RG94</orderID>
 6         <timestamp>2011-02-22 15:22:43</timestamp>
 7         <expiry-lapse>00:00:30</expiry lapse>
 8         <transactioncost>$34.78</transactioncost>
 9         <alertsURL>www.merchant.com/shopcarts.php?sessionID=AEBB4356</alertsURL>
10         <userID>john.q.public@gmail.com</userID>
11         <clientdetails>
12                <clientIP>192.168.23.126</client_IP>
13                <client type>smartphone</client type>
14                <clientmodel>HTC Hero</clientmodel>
15                <OS>Android 2.2</OS>
16                <app installedflag>true</app installed flag>
17         </clientdetails>
18         <secureelement>www.merchant.com/securedyn/0394733/123.png</secureelement>
19         <purchasedetails>
20                <num products>l</num products>
21                <product>
22                       <product type>book</product type>
23                       <product params>
24                              <product title>XML for dummies</product title>
25                              <ISBN>938-2-14-168710-0</ISBN>
26                              <edition>2nd ed.</edition>
27                              <cover>hardbound</cover>
28                              <seller>bestbuybooks</seller>
29                       </product params>
30                       <quantity>l</quantity>
31                </product>
32         </purchasedetails>
33         <merchant params>
34                <merchantid>3FBCR4INC</merchantid>
35                <merchantname>Books & Things, Inc.</merchant_name>
36                <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
37         </merchant-params>
38     <QRdata>
39
40
41 [0051]         In some implementations, the XML data may include a handle, alias,
42 token, or pointer to information stored on a payment network server, rather than
43 encoding all of the actual data required to initiate the transaction, so that the
44 information encoded into the QR code may be advantageously minimized.             In some
45 implementations, the merchant may generate a QR code using the XML data. For
46 example, the merchant server may utilize the PHP QR Code open-source (LGPL) library
47 for      generating      QR     Code,     2-dimensional      barcode,     available     at

       WO 2012/112822                                                 PCT/US2012/025530
                                                29
 1 http://phpqrcode.sourceforge.net/.     For example, the merchant server may issue PHP
 2 commands    similar to the example commands provided below:
 3     <?PHP
 4     header('Content-Type: text/plain');
 5     // Create QR code image using data stored in $data variable
 6     QRcode::png($data, 'qrcodeimg.png');
 7     ?>
 8
 9
10 [ 0   52]     In alternate implementations, the merchant server may provide, e.g., 416b
11 the XML data to a pay network server, e.g., 406, along with a request to generate a QR
12 code. For example, the merchant server may utilize an API call to the pay network
13 server to request generation of the QR code. The pay network server may generate the
14 QR code for the merchant server, e.g., 416c, and provide, e.g., 416d, the QR code to the
15 merchant server. For example, the pay network server may encode the information
16 provided by the merchant into the QR code, and may also advantageously encode
17 security information,     time validity information,    digital certificate information,
18 anonymous shipping information, QR code generation/processing fee information, etc.
19 into the QR code.
20 [0053]        In some implementations, the pay network server may provide the
21 merchant server with an encryption key (e.g., a Rivest-Shamir-Adleman ("RSA")
22 private/public key, digital certificate). The merchant may encrypt the custom, user
23 specific merchant-product XML data structure using the encryption key to generate
24 encrypted purchase data (e.g., using the RSA algorithm). The merchant server may then
25 encode the encrypted data into the QR code.          Such a scheme may be employed
26 advantageously, in various embodiments, by the pay network server to authenticate the
27 merchant for any transaction processing requests related to the user-merchant shopping
28 session.

       WO 2012/112822                                                 PCT/US2012/025530
                                                30
 1 [0054]         In some implementations, pre-designed         QR codes associated with
 2 authenticated   with pre-authenticated merchants may be provided to the user device.
 3 For example, a user may be browsing an online website on the user's device. The user
 4 device  may make a HTTP(S) GET request for a webpage from a web server. In some
 5 implementations,    the web server may, in response to the user device's request for a
 6 webpage,   generate a query for advertisements to display on the webpage. For example,
 7 the web server may search a database, or provide a request to an ad network server (e.g.,
 8 Akamai)    to provide advertisements for embedding into the webpage.            In some
 9 implementations,    the ad network server may utilize keywords, metadata, etc. obtained
10 from the web server (e.g., keywords or metadata associated with the webpage, user
11 profile information, user ID, user browsing history from a cookie stored on the user
12 device, etc.).   The ad network may utilize the keywords to generate a query of
13 database(s) for advertisements      associated with the keywords, and may obtain
14 advertisements to provide.      In some implementations, the ad network server may
15 provide information (e.g., via an API call) on such advertisements (e.g., merchant name,
16 merchant ID, product name, product pricing information, related offers, etc.) to a pay
17 network server.      The pay network server may generate a QR code based on the
18 information provide by the ad network server, such that a user device may snap the QR
19 code to initiate a purchase transaction for the goods and/or services associated with the
20 QR code (e.g., as provided by the ad network server to the pay network server). The ad
21 network server may provide the QR as part of the advertisement to the web server,
22 which may in turn embed the advertisement including the QR code into the webpage
23 before providing it to the user device. In alternate implementations, the ad network
24 server/web server may transmit a URL or other identifier of the QR code (ultimately) to

       WO 2012/112822                                                  PCT/US2012/025530
                                               31
 1 the user device, and the user device may make a call (e.g., a HTTP(S) GET request)
 2 using  the URL of the QR code (e.g., hosted on the pay network server) to obtain the QR
 3 code  and display it for the user.
 4 [o 055]        In some implementations, the merchant server may provide the QR code
 5 to the client, e.g., 417. For example, the merchant server may provide a HyperText
 6 Markup    Language ("HTML") page including a reference to the QR code image and/or
 7 secure  element image, such as the example HTML page below:
 8     <html>
 9         <img src="www.merchant.com/securedyn/0394733/qrcodeimg.png" alt="Merchant
10         Product QR code"/>
11         <img src=" www.merchant.com/securedyn/0394733/123.png" alt="Secure
12         Element"/>
13     </html>
14
15
16 [O056]         In some implementations, the client may obtain the QR pay code, e.g., 417,
17 and display the QR code, e.g., 418 on a display screen associated with the client device.
18 In some implementations, the user may utilize a user device, e.g., 405, to capture the QR
19 code presented by the client device for payment processing. For example, the user may
20 provide payment input into the user device, e.g., 419. In various implementations, the
21 user input may include, but not be limited to: a single tap (e.g., a one-tap mobile app
22 purchasing embodiment) of a touchscreen interface, keyboard entry, card swipe,
23 activating a RFID/NFC enabled hardware device (e.g., electronic card having multiple
24 accounts, smartphone, tablet, etc.) within the user device, mouse clicks, depressing
25 buttons on a joystick/game console, voice commands, single/multi-touch gestures on a
26 touch-sensitive interface, touching user interface elements on a touch-sensitive display,
27 and/or the like. For example, the user device may obtain track     1 data from the user's

       WO 2012/112822                                                    PCT/US2012/025530
                                                32
 1 card (e.g., credit card, debit card, prepaid card, charge card, etc.), such as the example
 2 track  1 data provided below:
 3     %Bl23456789012345^PUBLIC/J.Q.^99011200000000000000**901******?*
 4      (wherein '123456789012345' is the card number of 'J.Q. Public' and has a CVV
 5         number of 901. '990112' is a service code, and *** represents decimal digits
 6         which change randomly each time the card is used.)
 7
 8
 9 [o057]         In some implementation, the user device may determine whether an image
10 it has captured depicts a QR code. Depending on whether or not a QR code has been
11 captured, and also (optionally) depending on contents of the QR code, the user device
12 may redirect the user (e.g., via a web browser application executing on the user device)
13 to: a product, a merchant website, a product at a merchant website, a website and
14 including a command to add an item to a purchasing cart of the user associated with the
15 website, and/or the like. For example, the user device may execute a component such as
16 the example Quick Response Code Processing ("QRCP") component 6oo described
17 below in the discussion with reference to FIGURES 6A-B.
18 [0058]         In some implementations, upon obtaining the user payment input and
19 capturing the QR code, the user device may generate a card authorization request        420
20 (e.g., if the QR code includes a purchasing coupon, offer, invoice, personal payment
21 from another virtual wallet user, etc.), for providing to the pay network server. For
22 example, the user device may provide a card authorization request, e.g.,     421,  on behalf
23 of the user, a HTTP(S) GET message including the product order details for a pay
24 network server, e.g., 406, in the form of XML-formatted data. Below is an example
25 HTTP(S) GET message including an XML-formatted card authorization request for the
26 pay network server:
27     GET /purchase.php HTTP/l.1
28     Host: www.merchant.com

      WO 2012/112822                                                   PCT/US2012/025530
                                                33
 1    Content-Type: Application/XML
 2    Content-Length: 1306
 3    <?XML version = "1.0" encoding = "UTF-8"?>
 4    <purchaseorder>
 5         <orderID>4NFU4RG94</order_ID>
 6         <alertsURL>www.merchant.com/shopcarts.php?sessionID=AEBB4356</alertsURL>
 7         <timestamp>20ll-02-22 15:22:43</timestamp>
 8         <userID>john.q.public@gmail.com</userID>
 9         <client-details>
10                <clientIP>192.168.23.126</client_IP>
11                <client type>smartphone</client type>
12                <clientmodel>HTC Hero</clientmodel>
13                <OS>Android 2.2</OS>
14                <app installedflag>true</app installed flag>
15         </clientdetails>
16         <purchasedetails>
17                <num products>l</num products>
18                <product>
19                       <product type>book</product type>
20                       <product params>
21                              <product title>XML for dummies</product title>
22                              <ISBN>938-2-14-168710-0</ISBN>
23                              <edition>2nd ed.</edition>
24                              <cover>hardbound</cover>
25                              <seller>bestbuybooks</seller>
26                       </product params>
27                       <quantity>l</quantity>
28                </product>
29         </purchasedetails>
30         <merchant params>
31                <merchantid>3FBCR4INC</merchantid>
32                <merchantname>Books & Things, Inc.</merchant_name>
33                <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
34         </merchant params>
35         <account params>
36                <account name>John Q. Public</account name>
37                <accounttype>credit</account type>
38                <accountnum>123456789012345</accountnum>
39                <billing address>123 Green St., Norman, OK 98765</billing address>
40                <phone>123-456-7809</phone>
41                <sign>/jqp/</sign>
42                <confirm type>email</confirm type>
43                <contact info>john.q.public@gmail.com</contact info>
44         </account-params>
45         <shipping info>
46                <shipping adress>same as billing</shipping address>
47                <ship type>expedited</ship type>
48                <ship carrier>FedEx</shipcarrier>
49                <ship account>123-45-678</ship account>
50                <tracking flag>true</tracking flag>
51                <sign flag>false</sign flag>
52         </shipping info>
53    </purchase order>
54
55
56 [o 059]        In some implementations, the card authorization request generated by the
57 user device may include a minimum of information required to process the purchase
58 transaction.    For example, this may improve the efficiency of communicating the

       WO 2012/112822                                                      PCT/US2012/025530
                                                    34
 1 purchase transaction request, and may also advantageously improve the privacy
 2 protections     provided to the user        and/or merchant.        For example, in some
 3 implementations,      the card authorization request may include at least a merchant ID, a
 4 session   ID for the user's shopping session with the merchant, and a device ID of a device
 5 (e.g.,  smartphone) of the user that is linked to the user's virtual wallet.          In some
 6 implementations,      the QR code and messages sent to/from the QR-code capturing device
 7 may    include the source ID (e.g., identifier of the device generating the QR code), session
 8 ID,  merchant ID, item ID (e.g., model number), the charge amount, and/or transacting
 9 device   ID (e.g., the user's smartphone device).
10 [o 06o]          In some implementations, the card authorization request may be provided
11by   the merchant server or point of sale terminal, instead of the user device. In some
12 implementations, the user, desiring security, may request, via the user device, the pay
13 network server for a dynamically-generated card verification value code (dCVVTM) to be
14 utilized along with the user's primary account number ("PAN," e.g., credit card number)
15 in the purchase transaction. In response, the payment network server may generate a
16 dCVVTM code (e.g., using random number generation, MD5 hash of an input key, which
17 may be generated using the user ID, merchant ID, session ID, timestamp, combinations
18 thereof, and/or the like), and provide a session-specific dCVVTM code for the user to
19 utilize along with the user's PAN number. For example, the session-specific dCVVTM
20 code may have an expiry time (e.g., expiry in a one minute from issue). The user device
21 may communicate (e.g., via Bluetooth       TM
                                                 , NFC, Wi-Fi, cellular, QR code, etc.) the PAN
22 and dCVV to the point-of-sale terminal, which may create the card authorization
23 request. For example, the user device may generate a QR payment code embedding the
24 PAN and dCVV numbers, and the point of sale terminal may snap an image of the user

       WO 2012/112822                                                   PCT/US2012/025530
                                                35
 1 device-generated QR payment code. The point of sale terminal may then generate and
 2 provide  the card authorization request to the pay network server. The pay network
 3 server  may then be able to validate the transaction by comparing the dCVV obtained
 4 from  the merchant with the dCVV it provided to the user device before the purchase
 5 transaction   was initiated. If the dCVV codes from the two sources (pay network server
 6 and  merchant) correspond properly to each other, the pay network server may continue
 7 processing   the purchase transaction.
 8 [o 061]        In some implementations, the card authorization request from a user
 9 device  may include encrypted data extracted from the QR code, which may have been
1o encrypted by the merchant server as part of a merchant authentication scheme. In some
11implementations,     the pay network server may obtain the encrypted data from the card
12 authorization request provided by the user device, and attempt to decrypt the encrypted
13 data, e.g., using a RSA private/public that is complementary to the key the pay network
14 server initially provided to the merchant server for encrypting the purchase data before
15 embedding it into the QR code. If the pay network server is able to decrypt the purchase
16 data, then the merchant is authenticated as being a valid merchant.               In some
17 implementations, the pay network server may compare the purchase data decrypted
18 from the card authorization with data provided by the user/user device, to determine
19 whether the data from these different sources (user/user device, and merchant)
20 correspond properly to each other. Thus, in some implementations, the pay network
21 server may be able to authenticate the merchant, and correlate the merchant to a
22 specific user session or user device before processing the transaction.

       WO 2012/112822                                                   PCT/US2012/025530
                                                36
 1 [o062]          In some implementations, the pay network server may provide a
 2 notification  to the user device that the transaction is authenticated and approved for
 3 transacting.    In alternate implementations, the pay network server may proceed with
 4 transaction   processing. In some implementations, upon identifying that the user is in a
 5 session  with the merchant, the pay network server may communicate with the user
 6 device   to provide      additional features  for the user.     For example, in some
 7 implementations,     the pay network server may provide a communication to the user
 8 device  (e.g., via a HTTP(S) POST message) to provide: a virtual storefront of the
 9 merchant;   a depiction of an aisle of the merchant associated with the products included
10 in the card authorization request, a listing of related items; and/or the like (see, e.g.,
11 FIGURE 7E-G and description below of additional embodiments).
12 [o063]          With reference to FIGURE 4B, in some implementations, the pay network
13 server may process the transaction so as to transfer funds for the purchase into an
14 account stored on an acquirer of the merchant. For example, the acquirer may be a
15 financial institution maintaining an account of the merchant.           For example, the
16 proceeds of transactions processed by the merchant may be deposited into an account
17 maintained by at a server of the acquirer.
18 [o064]          In some implementations, the pay network server may generate a query,
19 e.g., 422, for issuer server(s) corresponding to the user-selected payment options. For
20 example, the user's account may be linked to one or more issuer financial institutions
21 ("issuers"), such as banking institutions, which issued the account(s) for the user. For
22 example, such accounts may include, but not be limited to: credit card, debit card,
23 prepaid card, checking, savings, money market, certificates of deposit, stored (cash)

       WO 2012/112822                                                    PCT/US2012/025530
                                                37
 1 value accounts and/or the like. Issuer server(s), e.g., 408a-n, of the issuer(s) may
 2 maintain   details of the user's account. In some implementations, a database, e.g., pay
 3 network    database 407, may store details of the issuer server(s) associated with the
 4 issuer(s).   For example, the database may be a relational database responsive to
 5 Structured Query Language ("SQL") commands. The pay network server may query the
 6 pay  network database for issuer server(s) details. For example, the pay network server
 7 may   execute a hypertext preprocessor ("PHP") script including SQL commands to query
 8 the database for details of the issuer server(s). An example PHP/SQL command listing,
 9 illustrating substantive aspects of querying the database, is provided below:
10     <?PHP
11     header('Content-Type: text/plain');
12     mysql-connect("254.93.179.ll2",$DBserver,$password) ; // access database server
13     mysqlselectdb("ISSUERS.SQL"); //     select database table to search
14     //create query for issuer server data
15     $query = "SELECT issuername issueraddress issuer id ip address macaddress
16         authkey port num security settingslist FROM IssuerTable WHERE account num
17         LIKE '%' $accountnum";
18     $result = mysql-query($query); // perform the search query
19     mysql-close("ISSUERS.SQL"); // close database access
20     ?>
21
22
23 [o065]         In response to obtaining the issuer server query, e.g., 422, the pay network
24 database may provide, e.g., 423, the requested issuer server data to the pay network
25 server. In some implementations, the pay network server may utilize the issuer server
26 data to generate authorization request(s), e.g., 424, for each of the issuer server(s)
27 selected based on the pre-defined payment settings associated with the user's virtual
28 wallet, and/or the user's payment options input, and provide the card authorization
29 request(s), e.g., 425a-n, to the issuer server(s), e.g., 408a-n. In some implementations,
30 the authorization request(s) may include details such as, but not limited to: the costs to
31 the user involved in the transaction, card account details of the user, user billing and/or
32 shipping information, and/or the like.       For example, the pay network server may

       WO 2012/112822                                                  PCT/US2012/025530
                                                 38
 1 provide a HTTP(S) POST message including an XML-formatted authorization request
 2 similar  to the example listing provided below:
 3     POST /authorization.php HTTP/l.1
 4     Host: www.issuer.com
 5     Content-Type: Application/XML
 6     Content-Length: 624
 7     <?XML version = "1.0" encoding = "UTF-8"?>
 8     <card queryrequest>
 9         <query_ID>VNEI39FK</query_ID>
10         <timestamp>20ll-02-22 15:22:44</timestamp>
11         <purchasesummary>
12                 <num products>l</num products>
13                 <product>
14                        <product summary>Book - XML for dummies</product summary>
15                        <product quantity>l</product quantity?
16                 </product>
17         </purchasesummary>
18         <transactioncost>$22.6l</transaction-cost>
19         <account params>
20                 <account type>checking</account type>
21                 <account num>1234567890123456</account num>
22         </account-params>
23         <merchant params>
24                 <merchantid>3FBCR4INC</merchantid>
25                 <merchantname>Books & Things, Inc.</merchant_name>
26                 <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
27         </merchant params>
28     </card query request>
29
30
31 [o066]          In some implementations, an issuer server may parse the authorization
32 request(s), and based on the request details may query a database, e.g., user profile
33 database 4oa-n, for data associated with an account linked to the user. For example,
34 the issuer server may issue PHP/SQL commands similar to the example provided below:
35     <?PHP
36     header('Content-Type: text/plain');
37     mysql connect("254.93.179.ll2",$DBserver,$password); // access database server
38     mysql selectdb("USERS.SQL"); // select database table to search
39     //create query for user data
40     $query = "SELECT user id user name user balance account-type FROM UserTable
41         WHERE accountnum LIKE '%' $accountnum";
42     $result = mysql query($query); // perform the search query
43     mysql-close("USERS.SQL"); // close database access
44     ?>
45
46
47 [0067]          In some implementations, on obtaining the user data, e.g., 427a-n, the
48 issuer server may determine whether the user can pay for the transaction using funds

       WO 2012/112822                                                   PCT/US2012/025530
                                                39
 1 available in the account, e.g., 428a-n. For example, the issuer server may determine
 2 whether   the user has a sufficient balance remaining in the account, sufficient credit
 3 associated  with the account, and/or the like. Based on the determination, the issuer
 4 server(s)  may provide an authorization response, e.g., 429a-n, to the pay network
 5 server.  For example, the issuer server(s) may provide a HTTP(S) POST message similar
 6 to  the examples above.       In some implementations, if at least one issuer server
 7 determines   that the user cannot pay for the transaction using the funds available in the
 8 account,  see e.g., 430-431, the pay network server may request payment options again
 9 from  the user (e.g., by providing an authorization fail message 431 to the user device and
1o requesting the user device to provide new payment options), and re-attempt
11authorization    for the purchase transaction. In some implementations, if the number of
12 failed authorization attempts exceeds a threshold, the pay network server may abort the
13 authorization process, and provide an "authorization fail" message to the merchant
14 server, user device and/or client.
15 [o 068]        With reference to FIGURE 4C, in some implementations, the pay network
16 server may obtain the authorization message including a notification of successful
17 authorization, see e.g., 430, 433, and parse the message to extract authorization details.
18 Upon determining that the user possesses sufficient funds for the transaction, the pay
19 network server may generate a transaction data record, e.g.,   432, from the authorization
20 request and/or authorization response, and store the details of the transaction and
21 authorization relating to the transaction in a transactions database. For example, the
22 pay network server may issue PHP/SQL commands similar to the example listing below
23 to store the transaction data in a database:

       WO 2012/112822                                                  PCT/US2012/025530
                                               40
 1     <?PHP
 2     header('Content-Type: text/plain');
 3     mysql connect("254.92.185.103",$DBserver,$password) ; // access database server
 4     mysql select("TRANSACTIONS.SQL"); //  select database to append
 5     mysql query("INSERT INTO PurchasesTable (timestamp, purchasesummary list,
 6         num products, productsummary, product quantity, transactioncost,
 7         account params list, accountname, accounttype, accountnum,
 8         billingaddres, zipcode, phone, sign, merchant paramslist, merchantid,
 9         merchantname, merchantauth key)
10     VALUES (time(), $purchase summary list, $num products, $product summary,
11         $product quantity, $transaction_cost, $account paramslist, $accountname,
12         $account type, $accountnum, $billing addres, $zipcode, $phone, $sign,
13         $merchant paramslist, $merchantid, $merchantname, $merchantauthkey)");
14         // add data to table in database
15     mysql-close("TRANSACTIONS.SQL"); // close connection to database
16     ?>
17
18
19 [o069]         In some implementations, the pay network server may forward an
20 authorization success message, e.g., 433a-b, to the user device and/or merchant server.
21 The merchant may obtain the authorization message, and determine from it that the
22 user possesses sufficient funds in the card account to conduct the transaction. The
23 merchant server may add a record of the transaction for the user to a batch of
24 transaction data relating to authorized transactions. For example, the merchant may
25 append the XML data pertaining to the user transaction to an XML data file comprising
26 XML data for transactions that have been authorized for various users, e.g., 434, and
27 store the XML data file, e.g., 435, in a database, e.g., merchant database 404.       For
28 example, a batch XML data file may be structured similar to the example XML data
29 structure template provided below:
30     <?XML version = "1.0" encoding = "UTF-8"?>
31     <merchantdata>
32         <merchantid>3FBCR4INC</merchantid>
33         <merchant name>Books & Things, Inc.</merchant name>
34         <merchantauthkey>lNNF484MCP59CHB27365</merchantauth key>
35         <accountnumber>123456789</accountnumber>
36     </merchantdata>
37     <transactiondata>
38         <transaction 1>
39                ...
40         </transaction 1>
41         <transaction 2>
42                ...
43         </transaction 2>
44

       WO 2012/112822                                                    PCT/US2012/025530
                                                41
 1
 2
 3         <transaction n>
 4                 ...
 5         </transaction n>
 6     </transactiondata>
 7
 8
 9 [o  070]       In some implementations, the server may also generate a purchase receipt,
10 e.g., 434, and provide the purchase receipt to the client, e.g., 436. The client may render
11 and display, e.g., 437a, the purchase receipt for the user. In some implementations, the
12 user device 405 may also provide a notification of successful authorization to the user,
13 e.g., 437b.    For example, the client/user device may render a webpage, electronic
14 message, text / SMS message, buffer a voicemail, emit a ring tone, and/or play an audio
15 message, etc., and provide output including, but not limited to: sounds, music, audio,
16 video, images, tactile feedback, vibration alerts (e.g., on vibration-capable client devices
17 such as a smartphone etc.), and/or the like.
18 [0071]         With reference to FIGURE 4D, in some implementations, the merchant
19 server may initiate clearance of a batch of authorized transactions. For example, the
20 merchant server may generate a batch data request, e.g., 438, and provide the request,
21 e.g., 439, to a database, e.g., merchant database 404. For example, the merchant server
22 may utilize PHP/SQL commands similar to the examples provided above to query a
23 relational database. In response to the batch data request, the database may provide the
24 requested batch data, e.g., 440. The server may generate a batch clearance request, e.g.,
25 441, using the batch data obtained from the database, and provide, e.g., 442, the batch
26 clearance request to an acquirer server, e.g., 410. For example, the merchant server may
27 provide a HTTP(S) POST message including XML-formatted batch data in the message
28 body for the acquirer server.      The acquirer server may generate, e.g., 443, a batch
29 payment request using the obtained batch clearance request, and provide the batch

       WO 2012/112822                                                       PCT/US2012/025530
                                                  42
 1 payment request to the pay network server, e.g., 444. The pay network server may parse
 2 the  batch payment request, and extract the transaction data for each transaction stored
 3 in  the batch payment request, e.g., 445.         The pay network server may store the
 4 transaction   data, e.g., 446, for each transaction in a database, e.g., pay network database
 5 407.   For each extracted transaction, the pay network server may query, e.g., 447-448, a
 6 database,   e.g., pay network database 407, for an address of an issuer server.            For
 7 example,    the pay network server may utilize PHP/SQL commands similar to the
 8 examples    provided above. The pay network server may generate an individual payment
 9 request,  e.g., 449, for each transaction for which it has extracted transaction data, and
10 provide   the individual payment request, e.g., 450, to the issuer server, e.g., 408. For
11 example, the pay network server may provide a HTTP(S) POST request similar to the
12 example below:
13     POST /requestpay.php HTTP/l.1
14     Host: www.issuer.com
15     Content-Type: Application/XML
16     Content-Length: 788
17     <?XML version = "1.0" encoding = "UTF-8"?>
18     <pay-request>
19         <requestID>CNI4ICNW2</requestID>
20         <timestamp>2011-02-22 17:00:01</timestamp>
21         <pay amount>$34.78</pay amount>
22         <account params>
23                 <account name>John Q. Public</account name>
24                 <account_type>credit</account type>
25                 <accountnum>123456789012345</accountnum>
26                 <billingaddress>123 Green St., Norman, OK 98765</billing address>
27                 <phone>123-456-7809</phone>
28                 <sign>/jqp/</sign>
29         </account-params>
30         <merchant params>
31                 <merchantid>3FBCR4INC</merchantid>
32                 <merchantname>Books & Things, Inc.</merchantname>
33                 <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
34         </merchant-params>
35         <purchasesummary>
36                 <num products>l</num products>
37                 <product>
38                         <product summary>Book - XML for dummies</product summary>
39                         <product quantity>l</product quantity?
40                 </product>
41         </purchasesummary>
42     </pay request>

       WO 2012/112822                                                  PCT/US2012/025530
                                                 43
 2
 3 [o072]         In some implementations, the issuer server may generate a payment
 4 command, e.g., 451. For example, the issuer server may issue a command to deduct
 5 funds from the user's account (or add a charge to the user's credit card account). The
 6 issuer server may issue a payment command, e.g.,     452, to a database storing the user's
 7 account   information, e.g., user profile database 409. The issuer server may provide a
 8 funds transfer message, e.g., 453, to the pay network server, which may forward, e.g.,
 9 454,  the funds transfer message to the acquirer server. An example HTTP(S) POST
1o funds transfer message is provided below:
11     POST /clearance.php HTTP/l.1
12     Host: www.acquirer.com
13     Content-Type: Application/XML
14     Content-Length: 206
15     <?XML version = "1.0" encoding = "UTF-8"?>
16     <deposit ack>
17         <requestID>CNI4ICNW2</request ID>
18         <clear_flag>true</clear_flag>
19         <timestamp>2011-02-22 17:00:02</timestamp>
20         <deposit amount>$34.78</deposit amount>
21     </deposit-ack>
22
23
24 [0073]         In some implementations, the acquirer server may parse the funds
25 transfer message, and correlate the transaction (e.g., using the requestID field in the
26 example above) to the merchant.        The acquirer server may then transfer the funds
27 specified in the funds transfer message to an account of the merchant, e.g., 455.
28 [0074]         FIGURES 5A-E show logic flow diagrams illustrating example aspects of
29 executing a snap mobile payment in some embodiments of the SNAP, e.g., a Snap
30 Mobile Payment Execution ("SMPE") component 500. With reference to FIGURE 5A,
31 in some implementations, a user may desire to purchase a product, service, offering,
32 and/or the like ("product"), from a merchant via a merchant online site or in the
33 merchant's store. The user may communicate with a merchant server via a client. For

       WO 2012/112822                                                  PCT/US2012/025530
                                                 44
 1 example, the user may provide user input, e.g., 501, into the client indicating the user's
 2 desire to checkout shopping items in a (virtual) shopping cart. The client may generate
 3a  checkout request, e.g., 502, and provide the checkout request to the merchant server.
 4 The merchant server may obtain the checkout request from the client, and extract the
 5 checkout detail (e.g., XML data) from the checkout request, e.g., 503. For example, the
 6 merchant   server may utilize a parser such as the example parsers described below in the
 7 discussion  with reference to FIGURE     14. The merchant server may extract the product
 8 data, as well as the client data from the checkout request. In some implementations, the
 9 merchant   server may query, e.g., 504, a merchant database to obtain product data, e.g.,
10 505, such as product pricing, sales tax, offers, discounts, rewards, and/or other
11 information to process the purchase transaction.
12 [0075]         In response to obtaining the product data, the merchant server may
13 generate, e.g., 5o6, a QR pay code, and/or secure display element according to the
14 security settings of the user (see, e.g., 358).   For example, the merchant server may
15 generate a QR code embodying the product information, as well as merchant
16 information required by a payment network to process the purchase transaction. For
17 example, the merchant server may first generate in real-time, a custom, user-specific
18 merchant-product XML data structure having a time-limited validity period, such as the
19 example 'QR data' XML data structure provided below:
20     <QRdata>
21        <sessionID>4NFU4RG94</sessionID>
22        <timestamp>2011-02-22 15:22:43</timestamp>
23        <expiry-lapse>00:00:30</expiry lapse>
24        <transactioncost>$34.78</transactioncost>
25        <userID>john.q.public@gmail.com</userID>
26        <clientdetails>
27                <clientIP>192.168.23.126</client_IP>
28                <client type>smartphone</client type>
29                <clientmodel>HTC Hero</clientmodel>
30                <OS>Android 2.2</OS>

       WO 2012/112822                                                 PCT/US2012/025530
                                               45
 1               <app installedflag>true</app installed flag>
 2        </client details>
 3        <secureelement>www.merchant.com/securedyn/0394733/123.png</secureelement>
 4        <purchasedetails>
 5               <num products>l</num products>
 6               <product>
 7                      <product type>book</product type>
 8                      <product params>
 9                             <product title>XML for dummies</product title>
10                             <ISBN>938-2-14-168710-0</ISBN>
11                             <edition>2nd ed.</edition>
12                             <cover>hardbound</cover>
13                             <seller>bestbuybooks</seller>
14                      </product params>
15                      <quantity>l</quantity>
16               </product>
17        </purchase details>
18        <merchant params>
19               <merchantid>3FBCR4INC</merchantid>
20               <merchantname>Books & Things, Inc.</merchant_name>
21               <merchantauth key>lNNF484MCP59CHB27365</merchantauth key>
22        </merchant-params>
23     <QRdata>
24
25
26 [0076]        In some implementations, the merchant may generate QR code using the
27 XML data. For example, the merchant server may utilize the PHP QR Code open-source
28 (LGPL)    library for generating QR Code, 2-dimensional          barcode, available  at
29 http://phpqrcode.sourceforge.net/.    For example, the merchant server may issue PHP
30 commands similar to the example commands provided below:
31     <?PHP
32     header('Content-Type: text/plain');
33     // Create QR code image using data stored in $data variable
34     QRcode::png($data, 'qrcodeimg.png');
35     ?>
36
37
38 [0077]        The merchant server may provide the QR pay code to the client, e.g., 506.
39 The client may obtain the QR pay code, and display the QR code, e.g., 507 on a display
40 screen associated with the client device. In some implementations, the user may utilize
41 a user device, e.g., 509, to capture the QR code presented by the client device for
42 payment processing. The client device may decode the QR code to extract the
43 information embedded in the QR code. For example, the client device may utilize an
44 application such as the ZXing multi-format     1D/2D  barcode image processing library,

       WO 2012/112822                                                   PCT/US2012/025530
                                               46
 1 available at http://code.google.com/p/zxing/ to extract the information from the QR
 2 code.  In some implementations, the user may provide payment input into the user
 3 device, e.g., 508. Upon obtaining the user purchase input, the user device may generate
 4a  card authorization request, e.g., 509, and provide the card authorization request to a
 5 pay network    server.
 6 [o 078]         With reference to FIGURE 5B, in some implementations, the pay network
 7 server  may parse the card authorization request, e.g., 510, and generate a query, e.g.,
 8 511, for issuer server(s) corresponding to the user-selected payment options. In some
 9 implementations,     a pay network database may store details of the issuer server(s)
10 associated with the issuer(s). In response to obtaining the issuer server query, the pay
11network    database may provide, e.g.,  512, the requested issuer server data to the pay
12 network server. In some implementations, the pay network server may utilize the issuer
13 server data to generate authorization request(s), e.g., 425134, for each of the issuer
14 server(s), and provide the card authorization request(s) to the issuer server(s).
15 [0079]          In some implementations, an issuer server may parse the authorization
16 request(s), and based on the request details may query a user profile database for data
17 associated with an account linked to the user. In some implementations, on obtaining
18 the user data, the issuer server may determine whether the user can pay for the
19 transaction using funds available in the account, e.g., 517.      For example, the issuer
20 server may determine whether the user has a sufficient balance remaining in the
21 account, sufficient credit associated with the account, and/or the like. Based on the
22 determination, the issuer server(s) may provide an authorization response, e.g., 518, to
23 the pay network server.       In some implementations, if at least one issuer server

       WO 2012/112822                                                    PCT/US2012/025530
                                                  47
 1 determines, e.g., 519, that the user cannot pay for the transaction using the funds
 2 available  in the account, see e.g., 520,  option "No," the pay network server may request
 3 payment     options again from the user (see e.g.,      521, option "No," by providing an
 4 authorization    fail message to the user device and requesting the user device to provide
 5 new   payment options), and re-attempt authorization for the purchase transaction. In
 6 some    implementations, if the number of failed authorization attempts exceeds a
 7 threshold,    see, e.g.,  521,  option "Yes," the pay network server may abort the
 8 authorization     process, and provide an "authorization fail" message to the merchant
 9 server,  user device and/or client, e.g., 522.
10 [o080]          In some implementations, the pay network server may obtain the
11authorization     message including a notification of successful authorization, see e.g., 520,
12 option "Yes,", and parse the message to extract authorization details. Upon determining
13 that the user possesses sufficient funds for the transaction, the pay network server may
14 generate a transaction data record, e.g., 523, from the authorization request and/or
15 authorization response, and store, e.g., 524, the details of the transaction and
16 authorization relating to the transaction in a transactions database.
17 [0081]          With reference to FIGURE 5C, in some implementations, the pay network
18 server may forward an authorization success message, e.g., 525, to the user device
19 and/or merchant server, sometimes via the acquirer server, e.g. 526. The merchant may
20 parse the authorization message, e.g., 528, and determine from it that the user possesses
21 sufficient funds in the card account to conduct the transaction, see, e.g., 529. The
22 merchant server may add a record of the transaction for the user to a batch of
23 transaction data relating to authorized transactions, see, e.g., 530-531.          In some

       WO 2012/112822                                                    PCT/US2012/025530
                                                 48
 1 implementations, the merchant server may also generate a purchase receipt, e.g.,        532,
 2 and  provide the purchase receipt to the client. The client may render and display, e.g.,
 3 534, the purchase receipt for the user. In some implementations, the user device 405
 4 may  also provide a notification of successful authorization to the user.
 5 [0082]        With reference to FIGURES 5D-E, in some implementations, the
 6 merchant   server may initiate clearance of a batch of authorized transactions.          For
 7 example,  the merchant server may generate a batch data request, e.g., 535, and provide
 8 the request, e.g., 536, to a database, e.g., merchant database. In response to the batch
 9 data request, the database may provide the requested batch data, e.g., 536. The server
1o may generate a batch clearance request, e.g., 537, using the batch data obtained from
11 the database, and provide the batch clearance request to an acquirer server.            The
12 acquirer server may generate, e.g., 539, a batch payment request using the obtained
13 batch clearance request, and provide the batch payment request to the pay network
14 server. The pay network server may parse the batch payment request, and extract the
15 transaction data for each transaction stored in the batch payment request, e.g., 540-542.
16 The pay network server may store the transaction data, e.g., 543-544, for each
17 transaction in a database, e.g., pay network database. For each extracted transaction,
18 the pay network server may query, e.g., 545-546, a database, e.g., pay network database,
19 for an address of an issuer server. The pay network server may generate an individual
20 payment request, e.g., 547, for each transaction for which it has extracted transaction
21 data, and provide the individual payment request to the associated issuer server.
22 [0083]        In some implementations, the issuer server may generate a payment
23 command, e.g., 548-549.       For example, the issuer server may issue a command to

       WO 2012/112822                                                  PCT/US2012/025530
                                                 49
 1 deduct funds from the user's account (or add a charge to the user's credit card account).
 2 The   issuer server may issue a payment command, e.g., 549, to a database storing the
 3 user's  account information, e.g., user profile database. The issuer server may provide a
 4 funds    transfer message, e.g., 551, to the pay network server, which may forward the
 5 funds   transfer message to the acquirer server. In some implementations, the acquirer
 6 server    may parse the funds transfer message, and correlate the transaction (e.g., using
 7 the  requestID field in the example above) to the merchant. The acquirer server may
 8 then   transfer the funds specified in the funds transfer message to an account of the
 9 merchant,    e.g., 553-555.
10 [o084]          FIGURES 6A-B show logic flow diagrams illustrating example aspects of
11 processing    a Quick Response code in some embodiments of the SNAP, e.g., a Quick
12 Response Code Processing ("QRCP") component 6oo. With reference to FIGURE 6A, in
13 some implementations, a virtual wallet application executing on a user device may
14 determine whether a QR code has been captured in an image frame obtained by a
15 camera operatively connected to the user device, and may also determine the type,
16 contents of the QR code. Using such information, the virtual wallet application may
17 redirect the user experience of the user and/or initiating purchases, update aspects of
18 the virtual wallet application, etc.     For example, the virtual wallet application may
19 trigger the capture of an image frame by a camera operatively connected to the user
20 device, 6o1. The virtual wallet application may utilize an image segmentation algorithm
21 to identify a foreground in the image, 602, and may crop the rest of the image to reduce
22 background noise in the image, 603. The virtual wallet application may determine
23 whether the foreground image includes a QR code from which data can be reliably read
24 (e.g., this may not be so if the image does not include a QR code, or the QR code is

       WO 2012/112822                                                   PCT/US2012/025530
                                                  50
 1 partially cropped, blurred, etc.), 604. For example, the virtual wallet application may
 2 utilize  a code library such as the ZXing multi-format   1D/2D  barcode image processing
 3 library,  available at http://code.google.com/p/zxing/ to try and extract the information
 4 from   the QR code. If the virtual wallet application is able to detect a QR code (605,
 5 option   "Yes"), the virtual wallet application may decode the QR code, and extract data
 6 from   the QR code. If the virtual wallet application is unable to detect a QR code (605,
 7 option   "No"), the virtual wallet application may attempt to perform Optical Character
 8 Recognition    on the image. For example, the virtual wallet application may utilize the
 9 Tesseract      C++      open     source    OCR    engine,    available    at   www.pixel
10 technology.com/freewarw/tessnet2, to perform the optical character recognition, 6o6.
11Thus,    the virtual wallet application may obtain the data encoded into the image, and
12 may continue if the data can be processed by the virtual wallet application. The virtual
13 wallet application may query a database using fields identified in the extracted data, for
14 a type of the QR code, 6o8. For example, the QR code could include an invoice/bill, a
15 coupon, a money order (e.g., in a P2P transfer), a new account information packet,
16 product information, purchase commands, URL navigation instructions, browser
17 automation scripts, combinations thereof, and/or the like.
18 [0085]          In some embodiments, the QR code may include data on a new account to
19 be added to the virtual wallet application (see 609). The virtual wallet application may
20 query an issuer of the new account (as obtained from the extracted data), for the data
21 associated with the new account, 610. The virtual wallet application may compare the
22 issuer-provided data to the data extracted from the QR code, 611. If the new account is
23 validated (611, option "Yes"), the virtual wallet application may update the wallet

       WO 2012/112822                                                       PCT/US2012/025530
                                                  51
 1 credentials with the details of the new account, 613, and update the snap history of the
 2 virtual   wallet application using the data from the QR code, 614.
 3 [0086]           With reference to FIGURE 6B, in some embodiments, the QR code may
 4 include    data on a bill, invoice, or coupon for a purchase using the virtual wallet
 5 application    (see 615). The virtual wallet application may query merchant(s) associated
 6 with   the purchase (as obtained from the extracted data), for the data associated with the
 7 bill, invoice, or coupon for a purchase (e.g., offer details, offer ID, expiry time, etc.), 616.
 8 The    virtual wallet application may compare the merchant-provided data to the data
 9 extracted    from the QR code, 617.      If the bill, invoice, or coupon for a purchase is
1o validated (618, option "Yes"), the virtual wallet application may generate a data
11 structure (see e.g., XML QR data structure in description above with reference to
12 FIGURES 4-5) including the QR-encoded data for generating and providing a card
13 authorization request, 619, and update the snap history of the virtual wallet application
14 using the data from the QR code, 620.
15 [0087]           In some embodiments, the QR code may include product information,
16 commands, user navigation instructions, etc. for the virtual wallet application (see       621).
17 The virtual wallet application may query a product database using the information
18 encodd in the QR.          The virtual wallet application may provide various features
19 including, without limitation, displaying product information, redirecting the user to: a
20 product page, a merchant website, a product page on a merchant website, add item(s) to
21 a user shopping cart at a merchant website, etc. In some implementations, the virtual
22 wallet application may perform a procedure such as described above for any image

       WO 2012/112822                                                   PCT/US2012/025530
                                                 52
 1 frame pending to be processed, and/or selected for processing by the user (e.g., from the
 2 snap   history).
 3 [o088]          FIGURE 7 shows a user interface diagram illustrating an overview of
 4 example     features of virtual wallet applications in some embodiments of the SNAP.
 5 FIGURE     7 shows an illustration of various exemplary features of a virtual wallet mobile
 6 application   700. Some of the features displayed include a wallet 701, social integration
 7 via  TWITTER, FACEBOOK, etc., offers and loyalty 703, snap mobile purchase 704,
 8 alerts  705 and security, setting and analytics 796. These features are explored in further
 9 detail  below.
10 [o089]          FIGURES 8A-G show user interface diagrams illustrating example features
11 of virtual wallet applications in a shopping mode, in some embodiments of the SNAP.
12 With reference to FIGURE 8A, some embodiments of the virtual wallet mobile app
13 facilitate and greatly enhance the shopping experience of consumers. A variety of
14 shopping modes, as shown in FIGURE 8A, may be available for a consumer to peruse. In
15 one implementation, for example, a user may launch the shopping mode by selecting the
16 shop icon 81o at the bottom of the user interface. A user may type in an item in the
17 search field   812 to search and/or add an item to a cart 811. A user may also use a voice
18 activated shopping mode by saying the name or description of an item to be searched
19 and/or added to the cart into a microphone 813. In a further implementation, a user
20 may also select other shopping options 814 such as current items 815, bills 816, address
21 book 817, merchants 818 and local proximity 819.
22 [0090]          In one embodiment, for example, a user may select the option current
23 items 815, as shown in the left most user interface of FIGURE 8A. When the current

        WO 2012/112822                                                    PCT/US2012/025530
                                                   53
 1 items 815 option is selected, the middle user interface may be displayed. As shown, the
 2 middle    user interface may provide a current list of items 815a-h in a user's shopping cart
 3 811.  A user may select an item, for example item 815a, to view product description 815 j
 4 of  the selected item and/or other items from the same merchant. The price and total
 5 payable    information may also be displayed, along with a QR code 815k that captures the
 6 information      necessary to effect a snap mobile purchase transaction.
 7 [o091]            With reference to FIGURE 8B, in another embodiment, a user may select
 8 the  bills 816 option. Upon selecting the bills 816 option, the user interface may display a
 9 list of bills and/or receipts 816a-h from one or more merchants. Next to each of the bills,
10 additional information such as date of visit, whether items from multiple stores are
11present,     last bill payment date, auto-payment, number of items, and/or the like may be
12 displayed. In one example, the wallet shop bill 816a dated January          20, 2011  may be
13 selected. The wallet shop bill selection may display a user interface that provides a
14 variety of information regarding the selected bill. For example, the user interface may
15 display a list of items 816k purchased, <<816i>>, a total number of items and the
16 corresponding value. For example, 7 items worth          $102.54 were in the selected wallet
17 shop bill. A user may now select any of the items and select buy again to add purchase
18 the items. The user may also refresh offers 816j to clear any invalid offers from last time
19 and/or search for new offers that may be applicable for the current purchase. As shown
20 in FIGURE 8B, a user may select two items for repeat purchase. Upon addition, a
21 message 8161 may be displayed to confirm the addition of the two items, which makes
22 the total number of items in the cart 14.

       WO 2012/112822                                                  PCT/US2012/025530
                                               54
 1 [0092]          With reference to FIGURE 8C, in yet another embodiment, a user may
 2 select the address book option 817 to view the address book 817a which includes a list of
 3 contacts    817b and make any money transfers or payments. In one embodiment, the
 4 address    book may identify each contact using their names and available and/or
 5 preferred    modes of payment. For example, a contact Amanda G. may be paid via social
 6 pay  (e.g., via FACEBOOK) as indicated by the icon 817c. In another example, money
 7 may  be transferred to Brian S. via QR code as indicated by the QR code icon 817d. In yet
 8 another    example, Charles B. may accept payment via near field communication 817e,
 9 Bluetooth     817f and email 817g. Payment may also be made via USB 817h (e.g., by
1o physically connecting two mobile devices) as well as other social channels such as
11 TWITFIER.
12 [0093]          In one implementation, a user may select Joe P. for payment. Joe P., as
13 shown in the user interface, has an email icon 817g next to his name indicating that Joe
14 P. accepts payment via email. When his name is selected, the user interface may display
15 his contact information such as email, phone, etc. If a user wishes to make a payment to
16 Joe P. by a method other than email, the user may add another transfer mode 817 j to his
17 contact information and make a payment transfer. With reference to FIGURE 8D, the
18 user may be provided with a screen 817k where the user can enter an amount to send
19 Joe, as well as add other text to provide Joe with context for the payment transaction
20 8171. The user can choose modes (e.g., SMS, email, social networking) via which Joe
21 may be contacted via graphical user interface elements, 817m. As the user types, the
22 text entered may be provided for review within a GUI element 817n. When the user has
23 completed entering in the necessary information, the user can press the send button
24 8170 to send the social message to Joe. If Joe also has a virtual wallet application, Joe

       WO 2012/112822                                                     PCT/US2012/025530
                                                  55
 1 may be able to review 817p social pay message within the app, or directly at the website
 2 of  the social network (e.g., for TwitterTM, Facebook®, etc.).           Messages may be
 3 aggregated   from the various social networks and other sources (e.g., SMS, email). The
 4 method   of redemption appropriate for each messaging mode may be indicated along
 5 with  the social pay message.      In the illustration in FIGURE 8D, the SMS 817q Joe
 6 received  indicates that Joe can redeem the $5 obtained via SMS by replying to the SMS
 7 and  entering the hash tag value   '#1234'. In the same illustration, Joe has also received a
 8 message   817r via Facebook®, which includes a URL link that Joe can activate to initiate
 9 redemption    of the $25 payment.
10 [o094]         With reference to FIGURE 8E, in some other embodiments, a user may
11 select merchants 818 from the list of options in the shopping mode to view a select list of
12 merchants 818a-e. In one implementation, the merchants in the list may be affiliated to
13 the wallet, or have affinity relationship with the wallet. In another implementation, the
14 merchants may include a list of merchants meeting a user-defined or other criteria. For
15 example, the list may be one that is curated by the user, merchants where the user most
16 frequently shops or spends more than an x amount of sum or shopped for three
17 consecutive months, and/or the like. In one implementation, the user may further select
18 one of the merchants, Amazon 818a for example. The user may then navigate through
19 the merchant's listings to find items of interest such as 818f-j. Directly through the
20 wallet and without visiting the merchant site from a separate page, the user may make a
21 selection of an item 818j from the catalog of Amazon 818a. As shown in the right most
22 user interface of FIGURE 8D, the selected item may then be added to cart. The message
23 818k indicates that the selected item has been added to the cart, and updated number of
24 items in the cart is now 13.

       WO 2012/112822                                                   PCT/US2012/025530
                                                 56
 1 [o095]         With reference to FIGURE 8F, in one embodiment, there may be a local
 2 proximity  option 819 which may be selected by a user to view a list of merchants that are
 3 geographically   in close proximity to the user. For example, the list of merchants 819a-e
 4 may   be the merchants that are located close to the user. In one implementation, the
 5 mobile  application may further identify when the user in a store based on the user's
 6 location.  For example, position icon 819d may be displayed next to a store (e.g.,
 7 Walgreens)   when the user is in close proximity to the store. In one implementation, the
 8 mobile   application may refresh its location periodically in case the user moved away
 9 from  the store (e.g., Walgreens). In a further implementation, the user may navigate the
10 offerings of the selected Walgreens store through the mobile application. For example,
11 the user may navigate, using the mobile application, to items 819f-j available on aisle 5
12 of Walgreens. In one implementation, the user may select corn 819i from his or her
13 mobile application to add to cart 819k.
14 [0096]         With reference to FIGURE 8G, in another embodiment, the local
15 proximity option 819 may include a store map and a real time map features among
16 others. For example, upon selecting the Walgreens store, the user may launch an aisle
17 map 8191 which displays a map 819m showing the organization of the store and the
18 position of the user (indicated by a yellow circle). In one implementation, the user may
19 easily configure the map to add one or more other users (e.g., user's kids) to share each
20 other's location within the store. In another implementation, the user may have the
21 option to launch a "store view" similar to street views in maps. The store view 819n may
22 display images/video of the user's surrounding. For example, if the user is about to enter
23 aisle 5, the store view map may show the view of aisle 5. Further the user may

       WO 2012/112822                                                   PCT/US2012/025530
                                                 57
 1 manipulate the orientation of the map using the navigation tool 8190 to move the store
 2 view  forwards, backwards, right, left as well clockwise and counterclockwise rotation
 3 [o 097]        FIGURES 9A-F show user interface diagrams illustrating example features
 4 of virtual wallet applications in a payment mode, in some embodiments of the SNAP.
 5 With   reference to FIGURE 9A, in one embodiment, the wallet mobile application may
 6 provide   a user with a number of options for paying for a transaction via the wallet mode
 7 910.  In one implementation, an example user interface 911 for making a payment is
 8 shown.   The user interface may clearly identify the amount   912 and the currency 913 for
 9 the transaction. The amount may be the amount payable and the currency may include
10 real currencies such as dollars and euros, as well as virtual currencies such as reward
11points.   The amount of the transaction 914 may also be prominently displayed on the
12 user interface. The user may select the funds tab 916 to select one or more forms of
13 payment 917, which may include various credit, debit, gift, rewards and/or prepaid
14 cards. The user may also have the option of paying, wholly or in part, with reward
15 points. For example, the graphical indicator 918 on the user interface shows the number
16 of points available, the graphical indicator 919 shows the number of points to be used
17 towards the amount due      234.56 and the equivalent    920 of the number of points in a
18 selected currency (USD, for example).
19 [0098]         In one implementation, the user may combine funds from multiple
20 sources to pay for the transaction. The amount 915 displayed on the user interface may
21 provide an indication of the amount of total funds covered so far by the selected forms of
22 payment (e.g., Discover card and rewards points). The user may choose another form of
23 payment or adjust the amount to be debited from one or more forms of payment until

       WO 2012/112822                                                     PCT/US2012/025530
                                                  58
 1 the amount 915 matches the amount payable 914. Once the amounts to be debited from
 2 one    or more forms of payment are finalized by the user, payment authorization may
 3 begin.
 4 [o099]          In one implementation, the user may select a secure authorization of the
 5 transaction   by selecting the cloak button    922 to effectively cloak or anonymize some
 6 (e.g.,  pre-configured) or all identifying information such that when the user selects pay
 7 button 921,    the transaction authorization is conducted in a secure and anonymous
 8 manner.    In another implementation, the user may select the pay button     921  which may
 9 use    standard authorization techniques for transaction processing. In yet another
10 implementation, when the user selects the social button 923, a message regarding the
11transaction    may be communicated to one of more social networks (set up by the user)
12 which may post or announce the purchase transaction in a social forum such as a wall
13 post or a tweet. In one implementation, the user may select a social payment processing
14 option 923. The indicator    924  may show the authorizing and sending social share data
15 in progress.
16 [00100]         In another implementation, a restricted payment mode           925   may be
17 activated for certain purchase activities such as prescription purchases. The mode may
18 be activated in accordance with rules defined by issuers, insurers, merchants, payment
19 processor and/or other entities to facilitate processing of specialized goods and services.
20 In this mode, the user may scroll down the list of forms of payments          926  under the
21 funds tab to select specialized accounts such as a flexible spending account (FSA) 927,
22 health savings account (HAS), and/or the like and amounts to be debited to the selected

       WO 2012/112822                                                   PCT/US2012/025530
                                                 59
 1 accounts. In one implementation, such restricted payment mode         1925 processing may
 2 disable  social sharing of purchase information.
 3 [o 0101]        In one embodiment, the wallet mobile application may facilitate importing
 4 of funds via the import funds user interface 928. For example, a user who is unemployed
 5 may   obtain unemployment benefit fund      929  via the wallet mobile application. In one
 6 implementation,     the entity providing the funds may also configure rules for using the
 7 fund  as shown by the processing indicator message 930. The wallet may read and apply
 8 the rules prior, and may reject any purchases with the unemployment funds that fail to
 9 meet  the criteria set by the rules. Example criteria may include, for example, merchant
10 category code (MCC), time of transaction, location of transaction, and/or the like. As an
11 example, a transaction with a grocery merchant having MCC 5411 may be approved,
12 while a transaction with a bar merchant having an MCC 5813 may be refused.
13 [00102]         With reference to FIGURE 9B, in one embodiment, the wallet mobile
14 application may facilitate dynamic payment optimization based on factors such as user
15 location, preferences and currency value preferences among others. For example, when
16 a user is in the United States, the country indicator 931 may display a flag of the United
17 States and may set the currency 933 to the United States. In a further implementation,
18 the wallet mobile application may automatically rearrange the order in which the forms
19 of payments 935 are listed to reflect the popularity or acceptability of various forms of
20 payment. In one implementation, the arrangement may reflect the user's preference,
21 which may not be changed by the wallet mobile application.
22 [00103]         Similarly, when a German user operates a wallet in Germany, the mobile
23 wallet application user interface may be dynamically updated to reflect the country of

        WO 2012/112822                                                  PCT/US2012/025530
                                                 60
 1 operation 932 and the currency 934. In a further implementation, the wallet application
 2 may   rearrange the order in which different forms of payment 936 are listed based on
 3 their  acceptance level in that country. Of course, the order of these forms of payments
 4 may   be modified by the user to suit his or her own preferences.
 5 [00104]        With reference to FIGURE 9C, in one embodiment, the payee tab 937 in
 6 the  wallet mobile application user interface may facilitate user selection of one or more
 7 payees   receiving the funds selected in the funds tab. In one implementation, the user
 8 interface  may show a list of all payees 938 with whom the user has previously transacted
 9 or  available to transact. The user may then select one or more payees. The payees 938
1o may include larger merchants such as Amazon.com Inc., and individuals such as Jane P.
11 Doe. Next to each payee name, a list of accepted payment modes for the payee may be
12 displayed. In one implementation, the user may select the payee Jane P. Doe 939 for
13 receiving payment. Upon selection, the user interface may display additional identifying
14 information relating to the payee.
15 [00105]        With reference to FIGURE 9D, in one embodiment, the mode tab 1940
16 may facilitate selection of a payment mode accepted by the payee. A number of payment
17 modes may be available for selection. Example modes include, blue tooth 941, wireless
18 942,  snap mobile by user-obtained QR code 943, secure chip 944, TWITIER 945, near
19 field communication (NFC) 946, cellular 947, snap mobile by user-provided QR code
20 948, USB 949 and FACEBOOK 950, among others. In one implementation, only the
21 payment modes that are accepted by the payee may be selectable by the user. Other non
22 accepted payment modes may be disabled.

       WO 2012/112822                                                   PCT/US2012/025530
                                                 61
 1 [o 010 6]       With reference to FIGURE 9E, in one embodiment, the offers tab 951 may
 2 provide   real-time offers that are relevant to items in a user's cart for selection by the
 3 user.   The user may select one or more offers from the list of applicable offers 952 for
 4 redemption.    In one implementation, some offers may be combined, while others may
 5 not.  When the user selects an offer that may not be combined with another offer, the
 6 unselected    offers may be disabled. In a further implementation, offers that are
 7 recommended      by the wallet application's recommendation engine may be identified by
 8 an  indicator, such as the one shown by 953. In a further implementation, the user may
 9 read   the details of the offer by expanding the offer row as shown by 954 in the user
10 interface.
11 [o 0107]        With reference to FIGURE 9F, in one embodiment, the social tab 955 may
12 facilitate integration of the wallet application with social channels 956. In one
13 implementation, a user may select one or more social channels 956 and may sign in to
14 the selected social channel from the wallet application by providing to the wallet
15 application the social channel user name and password 957 and signing in 958. The user
16 may then use the social button 959 to send or receive money through the integrated
17 social channels. In a further implementation, the user may send social share data such
18 as purchase information or links through integrated social channels. In another
19 embodiment, the user supplied login credentials may allow SNAP to engage in
20 interception parsing.
21 [o 0 10 8]      FIGURE 10 shows a user interface diagram illustrating example features of
22 virtual wallet applications, in a history mode, in some embodiments of the SNAP. In one
23 embodiment, a user may select the history mode          1010  to view a history of prior

       WO 2012/112822                                                     PCT/US2012/025530
                                                   62
 1 purchases and perform various actions on those prior purchases. For example, a user
 2 may   enter a merchant identifying information such as name, product, MCC, and/or the
 3 like in the search bar    1011. In another implementation, the user may use voice activated
 4 search   feature by clicking on the microphone icon        1014. The wallet application may
 5 query   the storage areas in the mobile device or elsewhere (e.g., one or more databases
 6 and/or    tables remote from the mobile device) for transactions matching the search
 7 keywords.     The user interface may then display the results of the query such as
 8 transaction 1015.    The user interface may also identify the date   1012 of the transaction,
 9 the  merchants and items         1013 relating to the transaction, a barcode of the receipt
10 confirming that a transaction was made, the amount of the transaction and any other
11relevant    information.
12 [00109]         In one implementation, the user may select a transaction, for example
13 transaction    1015, to view the details of the transaction. For example, the user may view
14 the details of the items associated with the transaction and the amounts 1016 of each
15 item. In a further implementation, the user may select the show option          1017  to view
16 actions 1018 that the user may take in regards to the transaction or the items in the
17 transaction. For example, the user may add a photo to the transaction (e.g., a picture of
18 the user and the iPad the user bought). In a further implementation, if the user
19 previously shared the purchase via social channels, a post including the photo may be
20 generated and sent to the social channels for publishing. In one implementation, any
21 sharing may be optional, and the user, who did not share the purchase via social
22 channels, may still share the photo through one or more social channels of his or her
23 choice directly from the history mode of the wallet application.                 In another
24 implementation, the user may add the transaction to a group such as company expense,

       WO 2012/112822                                                      PCT/US2012/025530
                                                    63
 1 home expense, travel expense or other categories set up by the user. Such grouping may
 2 facilitate  year-end accounting of expenses, submission of work expense reports,
 3 submission    for value added tax (VAT) refunds, personal expenses, and/or the like. In yet
 4 another    implementation, the user may buy one or more items purchased in the
 5 transaction.   The user may then execute a transaction without going to the merchant
 6 catalog  or site to find the items. In a further implementation, the user may also cart one
 7 or more items in the transaction for later purchase.
 8 [oo1o]          The history mode, in another embodiment, may offer facilities for
 9 obtaining   and displaying ratings    1019 of the items in the transaction. The source of the
10 ratings may be the user, the user's friends (e.g., from social channels, contacts, etc.),
11 reviews aggregated from the web, and/or the like. The user interface in some
12 implementations may also allow the user to post messages to other users of social
13 channels (e.g., TWITIER or FACEBOOK). For example, the display area               1020  shows
14 FACEBOOK message exchanges between two users. In one implementation, a user may
15 share a link via a message     1021. Selection of such a message having embedded link to a
16 product may allow the user to view a description of the product and/or purchase the
17 product directly from the history mode.
18 [o    111]      In one embodiment, the history mode may also include facilities for
19 exporting receipts. The export receipts pop up       1022  may provide a number of options
20 for exporting the receipts of transactions in the history. For example, a user may use one
21 or more of the options    1025,  which include save (to local mobile memory, to server, to a
22 cloud account, and/or the like), print to a printer, fax, email, and/or the like. The user
23 may utilize his or her address book      1023  to look up email or fax number for exporting.

        WO 2012/112822                                                      PCT/US2012/025530
                                                    64
 1 The user may also specify format options         1024  for exporting receipts. Example format
 2 options    may include, without limitation, text files (.doc, .txt, .rtf, iif, etc.), spreadsheet
 3 (.csv,  .xls, etc.), image files (.jpg, .tff, .png, etc.), portable document format (.pdf),
 4 postscript   (.ps), and/or the like. The user may then click or tap the export button      1027 to
 5 initiate  export of receipts.
 6 [o 0112]         FIGURES nA-F show user interface diagrams illustrating example
 7 features   of virtual wallet applications in a snap mode, in some embodiments of the
 8 SNAP.     With reference to FIGURE nA, in some embodiments, a user may select a snap
 9 mode     11ol to access snap features.         In various embodiments, the virtual wallet
10 application may able to snap and identify a variety of items. For example, the virtual
11wallet    application may be able to snap and identify a purchase invoice 1103, a coupon
12 104,   money (e.g., sent in a person-to-person transfer) 1105, a bill (e.g., utilities, etc.)
13 11o6, a receipt (e.g., for storing, expense reporting, etc.) 1107, a pay account (e.g., to add
14 a new credit/debit/prepaid card to the virtual wallet application) 11o8. The user may be
15 able to return to a shopping screen at any time by activating a graphical user interface
16 element    1102.   In some embodiments, the user may be able to set a name of a cart or
17 wishlist stored within the user's virtual wallet application to which the item snapped
18 should be sent (see nog).        In some embodiments, the virtual wallet application may
19 allow a user to create a new cart or wishlist to which the snapped items should be added.
20 [00113]          In one embodiment, a user may select the snap mode 111o to access its
21 snap features. The snap mode may handle any machine-readable representation of data.
22 Examples of such data may include linear and          2D  bar codes such as UPC code and QR
23 codes. These codes may be found on receipts, product packaging, and/or the like. The

       WO 2012/112822                                                      PCT/US2012/025530
                                                 65
 1 snap mode may also process and handle pictures of receipts, products, offers, credit
 2 cards   or other payment devices, and/or the like. An example user interface in snap
 3 mode    is shown in FIGURE nA. A user may use his or her mobile phone to take a picture
 4 of a QR code 1115 and/or a barcode 1114. In one implementation, the bar 1113 and snap
 5 frame    1115 may assist the user in snapping codes properly. For example, the snap frame
 6 1115, as shown, does not capture the entirety of the code 1116. As such, the code captured
 7 in this view may not be resolvable as information in the code may be incomplete. This is
 8 indicated    by the message on the bar 1113 that indicates that the snap mode is still
 9 seeking    the code. The user may modify the zoom level 1117 of the camera to facilitate
10 snapping the QR code. When the code 1116 is completely framed by the snap frame 1115,
11 the bar message may be updated to, for example, "snap found." Upon finding the code,
12 in one implementation, the user may initiate code capture using the mobile device
13 camera (see    1120). In another implementation, the snap mode may automatically snap
14 the code using the mobile device camera (see 1119).            In some implementations, the
15 virtual wallet application may optionally apply a Global Positioning System tag (see
16 11n8) to the QR code before storing it, or utilizing it in a transaction.
17 [00114]         With reference to FIGURE 11B, in one embodiment, the snap mode may
18 facilitate payment reallocation post transaction. For example, a user may buy grocery
19 and prescription items from a retailer Acme Supermarket. The user may, inadvertently
20 or for ease of checkout for example, use his or her Visa card to pay for both grocery and
21 prescription items. However, the user may have an FSA account that could be used to
22 pay for prescription items, and which would provide the user tax benefits. In such a
23 situation, the user may use the snap mode to initiate transaction reallocation.

       WO 2012/112822                                                    PCT/US2012/025530
                                                 66
 1 [O0115]        As shown, the user may enter a search term (e.g., bills) in the search bar
 2 2121.  The user may then identify in the tab      1122 the receipt  1123 the user wants to
 3 reallocate. Alternatively, the user may directly snap a picture of a barcode on a receipt,
 4 and  the snap mode may generate and display a receipt      1123 using information from the
 5 barcode.  The user may now reallocate   1125.  In some implementations, the user may also
 6 dispute  the transaction 1124 or archive the receipt 1126.
 7 [00116]        In one implementation, when the reallocate button 1125 is selected, the
 8 wallet application may perform optical character recognition (OCR) of the receipt. Each
 9 of the items in the receipt may then be examined to identify one or more items which
1o could be charged to which payment device or account for tax or other benefits such as
11 cash back, reward points, etc. In this example, there is a tax benefit if the prescription
12 medication charged to the user's Visa card is charged to the user's FSA. The wallet
13 application may then perform the reallocation as the back end. The reallocation process
14 may include the wallet contacting the payment processor to credit the amount of the
15 prescription medication to the Visa card and debit the same amount to the user's FSA
16 account. In an alternate implementation, the payment processor (e.g., Visa or
17 MasterCard) may obtain and OCR the receipt, identify items and payment accounts for
18 reallocation and perform the reallocation. In one implementation, the wallet application
19 may request the user to confirm reallocation of charges for the selected items to another
20 payment account. The receipt       1127 may be generated after the completion of the
21 reallocation process. As discussed, the receipt shows that some charges have been
22 moved from the Visa account to the FSA.

        WO 2012/112822                                                      PCT/US2012/025530
                                                   67
 1 [o 0117]        With reference to FIGURE 11C, in one embodiment, the snap mode may
 2 facilitate  payment via pay code such as barcodes or QR codes. For example, a user may
 3 snap   a QR code of a transaction that is not yet complete. The QR code may be displayed
 4 at  a merchant POS terminal, a web site, or a web application and may be encoded with
 5 information     identifying items for purchase, merchant details and other relevant
 6 information.    When the user snaps such as a QR code, the snap mode may decode the
 7 information    in the QR code and may use the decoded information to generate a receipt
 8 1132.  Once the QR code is identified, the navigation bar     1131  may indicate that the pay
 9 code   is identified. The user may now have an option to add to cart          1133, pay with a
1o default payment account 1134 or pay with wallet 1135.
11 [o0118]         In one implementation, the user may decide to pay with default 1134. The
12 wallet application may then use the user's default method of payment, in this example
13 the wallet, to complete the purchase transaction. Upon completion of the transaction, a
14 receipt may be automatically generated for proof of purchase. The user interface may
15 also be updated to provide other options for handling a completed transaction. Example
16 options include social 1137 to share purchase information with others, reallocate 1138 as
17 discussed with regard to FIGURE 11B, and archive       1139 to store the receipt.
18 [ 00119]        With reference to FIGURE 11D, in one embodiment, the snap mode may
19 also facilitate offer identification, application and storage for future use. For example, in
20 one implementation, a user may snap an offer code         1141  (e.g., a bar code, a QR code,
21 and/or the like). The wallet application may then generate an offer text         1142 from the
22 information encoded in the offer code. The user may perform a number of actions on the
23 offer code. For example, the user use the find button        1143  to find all merchants who

       WO 2012/112822                                                    PCT/US2012/025530
                                                68
 1 accept the offer code, merchants in the proximity who accept the offer code, products
 2 from   merchants that qualify for the offer code, and/or the like. The user may also apply
 3 the offer code to items that are currently in the cart using the add to cart button     1144.
 4 Furthermore,    the user may also save the offer for future use by selecting the save button
 5 1145.
 6 [o0120]        In one implementation, after the offer or coupon    1146  is applied, the user
 7 may   have the option to find qualifying merchants and/or products using find, the user
 8 may   go to the wallet using 1148, and the user may also save the offer or coupon 1146 for
 9 later use.
10 [00121]        With reference to FIGURE 11E, in one embodiment, the snap mode may
11 also offer facilities for adding a funding source to the wallet application. In one
12 implementation, a pay card such as a credit card, debit card, pre-paid card, smart card
13 and other pay accounts may have an associated code such as a bar code or QR code.
14 Such a code may have encoded therein pay card information including, but not limited
15 to, name, address, pay card type, pay card account details, balance amount, spending
16 limit, rewards balance, and/or the like. In one implementation, the code may be found
17 on a face of the physical pay card. In another implementation, the code may be obtained
18 by accessing an associated online account or another secure location. In yet another
19 implementation, the code may be printed on a letter accompanying the pay card. A user,
20 in one implementation, may snap a picture of the code. The wallet application may
21 identify the pay card   1151 and may display the textual information    1152  encoded in the
22 pay card. The user may then perform verification of the information         1152 by selecting
23 the verify button   1153. In one implementation, the verification may include contacting

       WO 2012/112822                                                      PCT/US2012/025530
                                                  69
 1 the issuer of the pay card for confirmation of the decoded information          1152  and any
 2 other  relevant information. In one implementation, the user may add the pay card to the
 3 wallet  by selecting the 'add to wallet' button  1154. The instruction to add the pay card to
 4 the  wallet may cause the pay card to appear as one of the forms of payment under the
 5 funds  tab 916 discussed in FIGURE 9A. The user may also cancel importing of the pay
 6 card  as a funding source by selecting the cancel button   1155. When the pay card has been
 7 added   to the wallet, the user interface may be updated to indicate that the importing is
 8 complete    via the notification display 1156. The user may then access the wallet     1157 to
 9 begin  using the added pay card as a funding source.
10 [o0122]         With reference to FIGURE 11F, in some implementations, the virtual
11wallet   application may identify a product from processing the QR code, and may provide
12 information about the product, as well as information about options for buying the
13 product, assistive services, and/or the like. For example, the virtual wallet application
14 may provide a window 1161, wherein the virtual wallet application may display images,
15 product specification, prices, merchant information, and/or the like (see     1162).  In some
16 implementations, the virtual wallet application may provide a QR code including the
17 displayed information, so that another user may quickly snap the information to import
18 it into another virtual wallet application. In some implementations, the virtual wallet
19 application may provide features so that a user may request concierge services (e.g.,
20 assistance while shopping), shipping services (e.g., so the user may leave a store without
21 carrying the items out),    1164. In some implementations, the virtual wallet application
22 may provide competitive prices of local merchants (e.g., using the GPS location of the
23 user device) or merchants on the Internet (see 1165). In some implementations, the
24 virtual wallet application may provide the user with features including, but not limited

       WO 2012/112822                                                     PCT/US2012/025530
                                                   70
 1 to: viewing prior snaps, snapping a new code, adding GPS tags to codes, retrieving a
 2 previously    snapped code for use, entering manual information about a QR code,
 3 attribute   the QR code to an object (e.g., so that QR codes for home furniture products
 4 may   be grouped into a "bedrrom furniture" object, for organization purposes), etc. (see
 5 1166).    In some embodiments, the user may be able to set a name of a cart or wishlist
 6 stored   within the user's virtual wallet application to which the item snapped should be
 7 sent  (see  1167). In some embodiments, the virtual wallet application may allow a user to
 8 create   a new cart or wishlist to which the snapped items should be added.
 9 [o 0123]        FIGURE   12 shows a user interface diagram illustrating example features of
1o virtual wallet applications, in an offers mode, in some embodiments of the SNAP. In
11some     implementations, the SNAP may allow a user to search for offers for products
12 and/or services from within the virtual wallet mobile application. For example, the user
13 may enter text into a graphical user interface ("GUI") element          1211, or issue voice
14 commands by activating GUI element         1212  and speaking commands into the device. In
15 some implementations, the SNAP may provide offers based on the user's prior behavior,
16 demographics, current location, current cart selection or purchase items, and/or the
17 like.   For example, if a user is in a brick-and-mortar store, or an online shopping
18 website, and leaves the (virtual) store, then the merchant associated with the store may
19 desire to provide a sweetener deal to entice the consumer back into the (virtual) store.
20 The merchant may provide such an offer          1213.  For example, the offer may provide a
21 discount, and may include an expiry time. In some implementations, other users may
22 provide gifts (e.g.,    1214)    to the user, which the user may redeem. In some
23 implementations, the offers section may include alerts as to payment of funds
24 outstanding to other users (e.g.,   1215).  In some implementations, the offers section may

       WO 2012/112822                                                   PCT/US2012/025530
                                                  71
 1 include alerts as to requesting receipt of funds from other users (e.g., 1216).        For
 2 example,     such a feature may identify funds receivable from other applications (e.g.,
 3 mail,  calendar, tasks, notes, reminder programs, alarm, etc.), or by a manual entry by
 4 the  user into the virtual wallet application. In some implementations, the offers section
 5 may    provide offers from participating merchants in the SNAP, e.g.,     1217-1219, 1220.
 6 These     offers may sometimes be assembled using a combination of participating
 7 merchants,     e.g., 1217.  In some implementations, the SNAP itself may provide offers for
 8 users   contingent on the user utilizing particular payment forms from within the virtual
 9 wallet   application, e.g.,  1220.
10 [o0124]          FIGURES 13A-B show user interface diagrams illustrating example
11features     of virtual wallet applications, in a security and privacy mode, in some
12 embodiments of the SNAP. With reference to FIGURE 13A, in some implementations,
13 the user may be able to view and/or modify the user profile and/or settings of the user,
14 e.g., by activating a user interface element.      For example, the user may be able to
15 view/modify a user name (e.g., 1311a-b), account number (e.g., 1312a-b), user security
16 access code (e.g., 1313-b), user pin (e.g., 1314-b), user address (e.g., 1315-b), social
17 security number associated with the user (e.g., 1316-b), current device GPS location
18 (e.g., 1317-b), user account of the merchant in whose store the user currently is (e.g.,
19 1318-b), the user's rewards accounts (e.g., 1319-b),        and/or the like.      In some
20 implementations, the user may be able to select which of the data fields and their
21 associated values should be transmitted to facilitate the purchase transaction, thus
22 providing enhanced data security for the user. For example, in the example illustration
23 in FIGURE 13A, the user has selected the name 1311a, account number 1312a, security
24 code 1313a, merchant account ID 1318a and rewards account ID 1319a as the fields to be

        WO 2012/112822                                                    PCT/US2012/025530
                                                  72
 1 sent as part of the notification to process the purchase transaction.               In some
 2 implementations,    the user may toggle the fields and/or data values that are sent as part
 3 of  the notification to process the purchase transactions. In some implementations, the
 4 app   may provide multiple screens of data fields and/or associated values stored for the
 5 user  to select as part of the purchase order transmission. In some implementations, the
 6 app   may provide the SNAP with the GPS location of the user. Based on the GPS location
 7 of the user, the SNAP may determine the context of the user (e.g., whether the user is in
 8a   store, doctor's office, hospital, postal service office, etc.). Based on the context, the
 9 user  app may present the appropriate fields to the user, from which the user may select
10 fields and/or field values to send as part of the purchase order transmission.
11 [o 0125]        For example, a user may go to doctor's office and desire to pay the co-pay
12 for doctor's appointment.        In addition to basic transactional information such as
13 account number and name, the app may provide the user the ability to select to transfer
14 medical records, health information, which may be provided to the medical provider,
15 insurance company, as well as the transaction processor to reconcile payments between
16 the parties. In some implementations, the records may be sent in a Health Insurance
17 Portability and Accountability Act (HIPAA)-compliant data format and encrypted, and
18 only the recipients who are authorized to view such records may have appropriate
19 decryption keys to decrypt and view the private user information.
20 [00126]         With reference to FIGURE 13B, in some implementations, the app
21 executing on the user's device may provide a "VerifyChat" feature for fraud prevention.
22 For example, the SNAP may detect an unusual and/or suspicious transaction.               The
23 SNAP may utilize the VerifyChat feature to communicate with the user, and verify the

       WO 2012/112822                                                     PCT/US2012/025530
                                                 73
 1 authenticity of the originator of the purchase transaction. In various implementations,
 2 the   SNAP may send electronic mail message, text (SMS) messages, Facebook®
 3 messages,    TwitterTM tweets, text chat, voice chat, video chat (e.g., Apple FaceTime),
 4 and/or   the like to communicate with the user. For example, the SNAP may initiate a
 5 video   challenge for the user, e.g.,  1321.  For example, the user may need to present
 6 him/her-self   via a video chat, e.g., 1322. In some implementations, a customer service
 7 representative,   e.g., agent 1324, may manually determine the authenticity of the user
 8 using   the video of the user. In some implementations, the SNAP may utilize face,
 9 biometric    and/or like recognition (e.g., using pattern classification techniques) to
10 determine the identity of the user. In some implementations, the app may provide
11 reference marker (e.g., cross-hairs, target box, etc.), e.g., 1323, so that the user may the
12 video to facilitate the SNAP's automated recognition              of the user.      In some
13 implementations, the user may not have initiated the transaction, e.g., the transaction is
14 fraudulent. In such implementations, the user may cancel the challenge. The SNAP
15 may then cancel the transaction, and/or initiate fraud investigation procedures on
16 behalf of the user.
17 [00127]         In some implementations, the SNAP may utilize a text challenge procedure
18 to verify the authenticity of the user, e.g.,      1325.     For example, the SNAP may
19 communicate with the user via text chat, SMS messages, electronic mail, Facebook®
20 messages, TwitterTM tweets, and/or the like. The SNAP may pose a challenge question,
21 e.g., 1326,  for the user. The app may provide a user input interface element(s) (e.g.,
22 virtual keyboard    1328) to answer the challenge question posed by the SNAP. In some
23 implementations, the challenge question may be randomly selected by the SNAP
24 automatically; in some implementations, a customer service representative may

       WO 2012/112822                                                   PCT/US2012/025530
                                                  74
 1 manually communicate with the user. In some implementations, the user may not have
 2 initiated  the transaction, e.g., the transaction is fraudulent. In such implementations,
 3 the  user may cancel the text challenge. The SNAP may cancel the transaction, and/or
 4 initiate fraud investigation on behalf of the user.
 5                                       SNAP Controller
 6 [00128]         FIGURE      14 shows a block diagram illustrating embodiments of a SNAP
 7 controller   1401.   In this embodiment, the SNAP controller 1401 may serve to aggregate,
 8 process,    store, search, serve, identify, instruct, generate, match, and/or facilitate
 9 interactions   with a computer through various technologies, and/or other related data.
10 [00129]         Typically, users, e.g., 1433a, which may be people and/or other systems,
11may    engage information technology systems (e.g., computers) to facilitate information
12 processing.      In turn, computers employ processors to process information; such
13 processors    1403   may be referred to as central processing units (CPU).    One form of
14 processor is referred to as a microprocessor. CPUs use communicative circuits to pass
15 binary encoded signals acting as instructions to enable various operations.          These
16 instructions may be operational and/or data instructions containing and/or referencing
17 other instructions and data in various processor accessible and operable areas of
18 memory      1429   (e.g., registers, cache memory, random access memory, etc.). Such
19 communicative instructions may be stored and/or transmitted in batches (e.g., batches
20 of instructions) as programs and/or data components to facilitate desired operations.
21 These stored instruction codes, e.g., programs, may engage the CPU circuit components
22 and other motherboard and/or system components to perform desired operations. One
23 type of program is a computer operating system, which, may be executed by CPU on a

       WO 2012/112822                                                   PCT/US2012/025530
                                                 75
 1 computer; the operating system enables and facilitates users to access and operate
 2 computer   information technology and resources. Some resources that may be employed
 3 in  information technology systems include: input and output mechanisms through
 4 which   data may pass into and out of a computer; memory storage into which data may
 5 be  saved; and processors by which information may be processed. These information
 6 technology   systems may be used to collect data for later retrieval, analysis, and
 7 manipulation,    which may be facilitated through a database program. These information
 8 technology   systems provide interfaces that allow users to access and operate various
 9 system   components.
10 [o 0 13 ]      In one embodiment, the SNAP controller 1401 may be connected to and/or
11communicate      with entities such as, but not limited to: one or more users from user
12 input devices   1411; peripheral devices 1412;  an optional cryptographic processor device
13 1428;   and/or a communications network 1413. For example, the SNAP controller 1401
14 may be connected to and/or communicate with users, e.g.,           1433a, operating client
15 device(s), e.g., 1433b, including, but not limited to, personal computer(s), server(s)
16 and/or various mobile device(s) including, but not limited to, cellular telephone(s),
17 smartphone(s) (e.g., iPhone®, Blackberry®, Android OS-based phones etc.), tablet
18 computer(s) (e.g., Apple iPadTM, HP SlateTM, Motorola XoomTM, etc.), eBook reader(s)
19 (e.g., Amazon KindleTM, Barnes and Noble's NookTM eReader, etc.), laptop computer(s),
20 notebook(s), netbook(s), gaming console(s) (e.g., XBOX Live T M , Nintendo® DS, Sony
21 PlayStation® Portable, etc.), portable scanner(s), and/or the like.
22 [00131]        Networks are commonly thought to comprise the interconnection and
23 interoperation of clients, servers, and intermediary nodes in a graph topology. It should

       WO 2012/112822                                                    PCT/US2012/025530
                                                 76
 1 be noted that the term "server" as used throughout this application refers generally to a
 2 computer,  other device, program, or combination thereof that processes and responds to
 3 the  requests of remote users across a communications network. Servers serve their
 4 information   to requesting "clients." The term "client" as used herein refers generally to a
 5 computer,   program, other device, user and/or combination thereof that is capable of
 6 processing   and making requests and obtaining and processing any responses from
 7 servers  across a communications network. A computer, other device, program, or
 8 combination     thereof that facilitates, processes information and requests, and/or
 9 furthers  the passage of information from a source user to a destination user is
1o commonly referred to as a "node." Networks are generally thought to facilitate the
11 transfer of information from source points to destinations. A node specifically tasked
12 with furthering the passage of information from a source to a destination is commonly
13 called a "router." There are many forms of networks such as Local Area Networks
14 (LANs), Pico networks, Wide Area Networks (WANs), Wireless Networks (WLANs), etc.
15 For example, the Internet is generally accepted as being an interconnection of a
16 multitude of networks whereby remote clients and servers may access and interoperate
17 with one another.
18 [o0132]        The SNAP controller 1401 may be based on computer systems that may
19 comprise, but are not limited to, components such as: a computer systemization          1402
20 connected to memory     1429.
21                                 Computer Systemization
22 [00133]        A computer systemization       1402  may comprise a clock 1430, central
23 processing unit ("CPU(s)" and/or "processor(s)" (these terms are used interchangeable

       WO 2012/112822                                                    PCT/US2012/025530
                                                  77
 1 throughout the disclosure unless noted to the contrary))      1403, a memory     1429 (e.g., a
 2 read  only memory (ROM) 1406, a random access memory (RAM) 1405, etc.), and/or an
 3 interface bus    1407, and most frequently, although not necessarily, are all interconnected
 4 and/or   communicating through a system bus        1404 on one or more (mother)board(s)
 5 1402  having conductive and/or otherwise transportive circuit pathways through which
 6 instructions    (e.g., binary encoded signals) may travel to effectuate communications,
 7 operations,   storage, etc. The computer systemization may be connected to a power
 8 source   1486; e.g., optionally the power source may be internal. Optionally, a
 9 cryptographic     processor 1426 and/or transceivers (e.g., ICs) 1474 may be connected to
10 the system bus. In another embodiment, the cryptographic                 processor and/or
11transceivers    may be connected as either internal and/or external peripheral devices    1412
12 via the interface bus I/O. In turn, the transceivers may be connected to antenna(s)     1475,
13 thereby effectuating wireless transmission and reception of various communication
14 and/or sensor protocols; for example the antenna(s) may connect to: a Texas
15 Instruments WiLink WL1283 transceiver chip (e.g., providing 802.11n, Bluetooth 3.0,
16 FM, global positioning system (GPS) (thereby allowing SNAP controller to determine its
17 location)); Broadcom BCM4329FKUBG transceiver chip (e.g., providing 802.11n,
18 Bluetooth   2.1  + EDR, FM, etc.); a Broadcom BCM475oIUB8 receiver chip (e.g., GPS); an
19 Infineon Technologies X-Gold 618-PMB9800 (e.g., providing 2G/3G HSDPA/HSUPA
20 communications); and/or the like. The system clock typically has a crystal oscillator and
21 generates a base signal through the computer systemization's circuit pathways. The
22 clock is typically coupled to the system bus and various clock multipliers that will
23 increase or decrease the base operating frequency for other components interconnected
24 in the computer systemization. The clock and various components in a computer

       WO 2012/112822                                                  PCT/US2012/025530
                                                 78
 1 systemization drive signals embodying information throughout the system. Such
 2 transmission     and reception of instructions embodying information throughout a
 3 computer     systemization may be commonly referred to as communications. These
 4 communicative       instructions may further be transmitted, received, and the cause of
 5 return   and/or reply communications beyond the instant computer systemization to:
 6 communications        networks, input devices, other computer systemizations, peripheral
 7 devices,  and/or the like. It should be understood that in alternative embodiments, any
 8 of the above components may be connected directly to one another, connected to the
 9 CPU,    and/or organized in numerous variations employed as exemplified by various
1o computer systems.
 1 [00134]         The CPU comprises at least one high-speed data processor adequate to
12 execute program components for executing user and/or system-generated requests.
13 Often, the processors themselves will incorporate various specialized processing units,
14 such as, but not limited to: integrated system (bus) controllers, memory management
15 control units, floating point units, and even specialized processing sub-units like
16 graphics processing units, digital signal processing units, and/or the like. Additionally,
17 processors may include internal fast access addressable memory, and be capable of
18 mapping and addressing memory          1429 beyond the processor itself; internal memory
19 may include, but is not limited to: fast registers, various levels of cache memory (e.g.,
20 level 1, 2, 3, etc.), RAM, etc. The processor may access this memory through the use of a
21 memory address space that is accessible via instruction address, which the processor
22 can construct and decode allowing it to access a circuit path to a specific memory
23 address space having a memory state. The CPU may be a microprocessor such as:
24 AMD's Athlon, Duron and/or Opteron; ARM's application, embedded and secure

       WO 2012/112822                                                   PCT/US2012/025530
                                                79
 1 processors; IBM and/or Motorola's DragonBall and PowerPC; IBM's and Sony's Cell
 2 processor;   Intel's Celeron, Core   (2) Duo, Itanium, Pentium, Xeon, and/or XScale;
 3 and/or   the like processor(s). The CPU interacts with memory through instruction
 4 passing   through conductive and/or transportive conduits (e.g., (printed) electronic
 5 and/or  optic circuits) to execute stored instructions (i.e., program code) according to
 6 conventional     data   processing   techniques.   Such  instruction   passing    facilitates
 7 communication      within the SNAP controller and beyond through various interfaces.
 8 Should    processing requirements dictate a greater amount speed and/or capacity,
 9 distributed  processors (e.g., Distributed SNAP), mainframe, multi-core, parallel, and/or
10 super-computer      architectures   may   similarly  be  employed.Alternatively,     should
11 deployment requirements dictate greater portability, smaller Personal Digital Assistants
12 (PDAs) may be employed.
13 [o 0135]       Depending on the particular implementation, features of the SNAP may be
14 achieved by implementing a microcontroller such as CAST's R8051XC2 microcontroller;
15 Intel's MCS 51 (i.e., 8051 microcontroller); and/or the like. Also, to implement certain
16 features of the SNAP,        some feature implementations may rely on embedded
17 components, such as: Application-Specific Integrated Circuit ("ASIC"), Digital Signal
18 Processing ("DSP"), Field Programmable Gate Array ("FPGA"), and/or the like
19 embedded technology. For example, any of the SNAP component collection (distributed
20 or otherwise) and/or features may be implemented via the microprocessor and/or via
21 embedded components; e.g., via ASIC, coprocessor, DSP, FPGA, and/or the like.
22 Alternately, some implementations of the SNAP may be implemented with embedded
23 components that are configured and used to achieve a variety of features or signal
24 processing.

       WO 2012/112822                                                      PCT/US2012/025530
                                                   80
 1 [o0136]        Depending on the particular implementation, the embedded components
 2 may   include software solutions, hardware solutions, and/or some combination of both
 3 hardware/software      solutions. For example, SNAP features discussed herein may be
 4 achieved   through implementing FPGAs, which are a semiconductor devices containing
 5 programmable        logic    components     called    "logic  blocks",   and  programmable
 6 interconnects,   such as the high performance FPGA Virtex series and/or the low cost
 7 Spartan    series manufactured by Xilinx. Logic blocks and interconnects can be
 8 programmed      by the customer or designer, after the FPGA is manufactured, to
 9 implement    any of the SNAP features. A hierarchy of programmable interconnects allow
10 logic    blocks    to     be    interconnected     as    needed   by   the   SNAP      system
11designer/administrator,        somewhat like a one-chip programmable breadboard. An
12 FPGA's logic blocks can be programmed to perform the operation of basic logic gates
13 such as AND, and XOR, or more complex combinational operators such as decoders or
14 simple mathematical operations. In most FPGAs, the logic blocks also include memory
15 elements, which may be circuit flip-flops or more complete blocks of memory. In some
16 circumstances, the SNAP may be developed on regular FPGAs and then migrated into a
17 fixed version that more resembles ASIC implementations. Alternate or coordinating
18 implementations may migrate SNAP controller features to a final ASIC instead of or in
19 addition to FPGAs. Depending on the implementation all of the aforementioned
20 embedded components and microprocessors may be considered the "CPU" and/or
21 "processor" for the SNAP.

       WO 2012/112822                                                  PCT/US2012/025530
                                               81
 1                                       Power Source
 2 [o0137]         The power source 1486 may be of any standard form for powering small
 3 electronic   circuit board devices such as the following power cells: alkaline, lithium
 4 hydride,   lithium ion, lithium polymer, nickel cadmium, solar cells, and/or the like.
 5 Other  types of AC or DC power sources may be used as well. In the case of solar cells, in
 6 one   embodiment, the case provides an aperture through which the solar cell may
 7 capture   photonic energy. The power cell 1486 is connected to at least one of the
 8 interconnected     subsequent components of the SNAP thereby providing an electric
 9 current   to all subsequent components. In one example, the power source 1486 is
10 connected to the system bus component 1404. In an alternative embodiment, an outside
11power    source 1486 is provided through a connection across the I/O 1408 interface. For
12 example, a USB and/or IEEE       1394 connection carries both data and power across the
13 connection and is therefore a suitable source of power.
14                                    Interface Adapters
15 [00138]         Interface bus(ses) 1407 may accept, connect, and/or communicate to a
16 number of interface adapters, conventionally although not necessarily in the form of
17 adapter cards, such as but not limited to: input output interfaces (I/O)    1408,  storage
18 interfaces 1409, network interfaces 1410, and/or the like. Optionally, cryptographic
19 processor interfaces 1427 similarly may be connected to the interface bus. The interface
20 bus provides for the communications of interface adapters with one another as well as
21 with other components of the computer systemization. Interface adapters are adapted
22 for a compatible interface bus. Interface adapters conventionally connect to the
23 interface bus via a slot architecture. Conventional slot architectures may be employed,

       WO 2012/112822                                                   PCT/US2012/025530
                                                 82
 1 such as, but not limited to: Accelerated Graphics Port (AGP), Card Bus, (Extended)
 2 Industry   Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus,
 3 Peripheral    Component Interconnect (Extended) (PCI(X)), PCI Express, Personal
 4 Computer    Memory Card International Association (PCMCIA), and/or the like.
 5 [00139]        Storage interfaces 1409 may accept, communicate, and/or connect to a
 6 number    of storage devices such as, but not limited to: storage devices 1414, removable
 7 disc  devices, and/or the like. Storage interfaces may employ connection protocols such
 8 as,  but not limited to: (Ultra) (Serial) Advanced Technology Attachment (Packet
 9 Interface)  ((Ultra) (Serial) ATA(PI)), (Enhanced) Integrated Drive Electronics ((E)IDE),
1o Institute of Electrical and Electronics Engineers (IEEE) 1394, fiber channel, Small
11Computer     Systems Interface (SCSI), Universal Serial Bus (USB), and/or the like.
12 [00140]        Network interfaces 1410 may accept, communicate, and/or connect to a
13 communications network 1413. Through a communications network 1413, the SNAP
14 controller is accessible through remote clients 1433b (e.g., computers with web
15 browsers) by users 1433a. Network interfaces may employ connection protocols such as,
16 but not limited to: direct connect, Ethernet (thick, thin, twisted pair 10/100/1000 Base
17 T, and/or the like), Token Ring, wireless connection such as IEEE 802.11a-x, and/or the
18 like. Should processing requirements dictate a greater amount speed and/or capacity,
19 distributed network controllers (e.g., Distributed SNAP), architectures may similarly be
20 employed to pool, load balance, and/or otherwise increase the communicative
21 bandwidth required by the SNAP controller. A communications network may be any one
22 and/or the combination of the following: a direct interconnection; the Internet; a Local
23 Area Network (LAN); a Metropolitan Area Network (MAN); an Operating Missions as

       WO 2012/112822                                                 PCT/US2012/025530
                                                83
 1 Nodes on the Internet (OMNI); a secured custom connection; a Wide Area Network
 2 (WAN);   a wireless network (e.g., employing protocols such as, but not limited to a
 3 Wireless  Application Protocol (WAP), I-mode, and/or the like); and/or the like. A
 4 network  interface may be regarded as a specialized form of an input output interface.
 5 Further,  multiple network interfaces     1410  may be used to engage with various
 6 communications     network types 1413.  For example, multiple network interfaces may be
 7 employed   to allow for the communication over broadcast, multicast, and/or unicast
 8 networks.
 9 [00141]       Input Output interfaces (I/O) 1408 may accept, communicate, and/or
10 connect to user input devices    1411, peripheral devices 1412, cryptographic processor
11 devices 1428, and/or the like. I/O may employ connection protocols such as, but not
12 limited to: audio: analog, digital, monaural, RCA, stereo, and/or the like; data: Apple
13 Desktop Bus (ADB), IEEE 1394a-b, serial, universal serial bus (USB); infrared; joystick;
14 keyboard; midi; optical; PC AT; PS/2; parallel; radio; video interface: Apple Desktop
15 Connector (ADC), BNC, coaxial, component, composite, digital, Digital Visual Interface
16 (DVI), high-definition multimedia interface (HDMI), RCA, RF antennae, S-Video, VGA,
17 and/or the like; wireless transceivers: 802.na/b/g/n/x; Bluetooth; cellular (e.g., code
18 division multiple access (CDMA), high speed packet access (HSPA(+)), high-speed
19 downlink packet access (HSDPA), global system for mobile communications (GSM),
20 long term evolution (LTE), WiMax, etc.); and/or the like. One typical output device may
21 include a video display, which typically comprises a Cathode Ray Tube (CRT) or Liquid
22 Crystal Display (LCD) based monitor with an interface (e.g., DVI circuitry and cable)
23 that accepts signals from a video interface, may be used. The video interface composites
24 information generated by a computer systemization and generates video signals based

       WO 2012/112822                                                     PCT/US2012/025530
                                                  84
 1 on the composited information in a video memory frame. Another output device is a
 2 television   set, which accepts signals from a video interface. Typically, the video interface
 3 provides    the composited video information through a video connection interface that
 4 accepts   a video display interface (e.g., an RCA composite video connector accepting an
 5 RCA    composite video cable; a DVI connector accepting a DVI display cable, etc.).
 6 [00142]          User input devices 1411 often are a type of peripheral device      1412   (see
 7 below)   and may include: card readers, dongles, finger print readers, gloves, graphics
 8 tablets,  joysticks, keyboards, microphones, mouse (mice), remote controls, retina
 9 readers,   touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors
10 (e.g., accelerometers, ambient light, GPS, gyroscopes, proximity, etc.), styluses, and/or
11 the like.
12 [o0143]          Peripheral devices  1412  may be connected and/or communicate to I/O
13 and/or other facilities of the like such as network interfaces, storage interfaces, directly
14 to the interface bus, system bus, the CPU, and/or the like. Peripheral devices may be
15 external, internal and/or part of the SNAP controller. Peripheral devices may include:
16 antenna, audio devices (e.g., line-in, line-out, microphone input, speakers, etc.),
17 cameras (e.g., still, video, webcam, etc.), dongles (e.g., for copy protection, ensuring
18 secure transactions with a digital signature, and/or the like), external processors (for
19 added capabilities; e.g., crypto devices 1428), force-feedback devices (e.g., vibrating
20 motors), network interfaces, printers, scanners, storage devices, transceivers (e.g.,
21 cellular, GPS, etc.), video devices (e.g., goggles, monitors, etc.), video sources, visors,
22 and/or the like. Peripheral devices often include types of input devices (e.g., cameras).

       WO 2012/112822                                                   PCT/US2012/025530
                                                  85
 1 [o 0144]        It should be noted that although user input devices and peripheral devices
 2 may   be employed, the SNAP controller may be embodied as an embedded, dedicated,
 3 and/or   monitor-less (i.e., headless) device, wherein access would be provided over a
 4 network   interface connection.
 5 [00145]         Cryptographic units such as, but not limited to, microcontrollers,
 6 processors    1426,    interfaces 1427, and/or devices   1428  may be attached, and/or
 7 communicate      with the SNAP controller. A MC68HC16 microcontroller, manufactured
 8 by  Motorola Inc., may be used for and/or within cryptographic units. The MC68HC16
 9 microcontroller     utilizes a 16-bit multiply-and-accumulate instruction in the 16 MHz
1o configuration and requires less than one second to perform a 512-bit RSA private key
11operation.    Cryptographic units support the authentication of communications from
12 interacting agents, as well as allowing for anonymous transactions. Cryptographic units
13 may also be configured as part of the CPU. Equivalent microcontrollers and/or
14 processors may also be used. Other commercially available specialized cryptographic
15 processors include: the Broadcom's CryptoNetX and other Security Processors;
16 nCipher's nShield, SafeNet's Luna PCI (e.g., 7100) series; Semaphore Communications'
17 40 MHz Roadrunner 184; Sun's Cryptographic Accelerators (e.g., Accelerator 6000 PCIe
18 Board, Accelerator 500 Daughtercard); Via Nano Processor (e.g., L2100, L2200,
19 U2400) line, which is capable of performing 500+ MB/s of cryptographic instructions;
20 VLSI Technology's 33 MHz 6868; and/or the like.
21                                            Memory
22 [00146]         Generally, any mechanization and/or embodiment allowing a processor to
23 affect the storage and/or retrieval of information is regarded as memory   1429.  However,

       WO 2012/112822                                                 PCT/US2012/025530
                                               86
 1 memory is a fungible technology and resource, thus, any number of memory
 2 embodiments    may be employed in lieu of or in concert with one another. It is to be
 3 understood   that the SNAP controller and/or a computer systemization may employ
 4 various  forms of memory      1429.  For example, a computer systemization may be
 5 configured  wherein the operation of on-chip CPU memory (e.g., registers), RAM, ROM,
 6 and  any other storage devices are provided by a paper punch tape or paper punch card
 7 mechanism;    however, such an embodiment would result in an extremely slow rate of
 8 operation. In a typical configuration, memory  1429 will include ROM 1406, RAM 1405,
 9 and  a storage device 1414. A storage device 1414 may be any conventional computer
1o system storage. Storage devices may include a drum; a (fixed and/or removable)
11magnetic    disk drive; a magneto-optical drive; an optical drive (i.e., Blueray, CD
12 ROM/RAM/Recordable (R)/ReWritable (RW), DVD R/RW, HD DVD R/RW etc.); an
13 array of devices (e.g., Redundant Array of Independent Disks (RAID)); solid state
14 memory devices (USB memory, solid state drives (SSD), etc.); other processor-readable
15 storage mediums; and/or other devices of the like. Thus, a computer systemization
16 generally requires and makes use of memory.
17                                 Component Collection
18 [00147]       The memory    1429  may contain a collection of program and/or database
19 components and/or data such as, but not limited to: operating system component(s)
20 1415  (operating system); information server component(s) 1416 (information server);
21 user interface component(s) 1417 (user interface); Web browser component(s) 1418
22 (Web browser);     database(s)   1419;  mail server component(s)      1421;  mail client
23 component(s)    1422; cryptographic server component(s)    1420  (cryptographic server);

       WO 2012/112822                                                      PCT/US2012/025530
                                                87
 1 the SNAP component(s)      1435; and/or the like (i.e., collectively a component collection).
 2 These  components may be stored and accessed from the storage devices and/or from
 3 storage   devices accessible through an interface bus. Although non-conventional
 4 program   components such as those in the component collection, typically, are stored in
 5a  local storage device  1414, they may also be loaded and/or stored in memory such as:
 6 peripheral  devices, RAM, remote storage facilities through a communications network,
 7 ROM,   various forms of memory, and/or the like.
 8                                     Operating System
 9 [00148]        The operating     system component        1415    is an executable     program
10 component facilitating the operation of the SNAP controller. Typically, the operating
11system   facilitates access of I/O, network interfaces, peripheral devices, storage devices,
12 and/or the like. The operating system may be a highly fault tolerant, scalable, and
13 secure system such as: Apple Macintosh OS X (Server); AT&T Plan 9; Be OS; Unix and
14 Unix-like system distributions (such as AT&T's UNIX; Berkley Software Distribution
15 (BSD)   variations such as FreeBSD, NetBSD, OpenBSD, and/or the like; Linux
16 distributions such as Red Hat, Ubuntu, and/or the like); and/or the like operating
17 systems. However, more limited and/or less secure operating systems also may be
18 employed such as Apple Macintosh OS, IBM OS/2, Microsoft DOS, Microsoft Windows
19 2000/2003/3.1/95/98/CE/Millenium/NT/Vista/XP (Server), Palm OS, and/or the like.
20 An operating system may communicate to and/or with other components in a
21 component collection, including itself, and/or the like. Most frequently, the operating
22 system communicates with other program components, user interfaces, and/or the like.
23 For example, the operating system may contain, communicate, generate, obtain, and/or

       WO 2012/112822                                                 PCT/US2012/025530
                                                88
 1 provide program component, system, user, and/or data communications, requests,
 2 and/or   responses. The operating system, once executed by the CPU, may enable the
 3 interaction   with communications networks, data, I/O, peripheral devices, program
 4 components,     memory, user input devices, and/or the like. The operating system may
 5 provide  communications protocols that allow the SNAP controller to communicate with
 6 other   entities through a communications network        1413.  Various communication
 7 protocols  may be used by the SNAP controller as a subcarrier transport mechanism for
 8 interaction,   such as, but not limited to: multicast, TCP/IP, UDP, unicast, and/or the
 9 like.
10                                    Information Server
11 [00149]         An information server component 1416 is a stored program component
12 that is executed by a CPU. The information server may be a conventional Internet
13 information server such as, but not limited to Apache Software Foundation's Apache,
14 Microsoft's Internet Information Server, and/or the like. The information server may
15 allow for the execution of program components through facilities such as Active Server
16 Page (ASP), ActiveX, (ANSI) (Objective-) C (++), C# and/or .NET, Common Gateway
17 Interface (CGI) scripts, dynamic (D) hypertext markup language (HTML), FLASH, Java,
18 JavaScript, Practical Extraction Report Language (PERL), Hypertext Pre-Processor
19 (PHP), pipes, Python, wireless application protocol (WAP), WebObjects, and/or the like.
20 The information server may support secure communications protocols such as, but not
21 limited to, File Transfer Protocol (FTP); HyperText Transfer Protocol (HTTP); Secure
22 Hypertext Transfer Protocol (HTI'PS), Secure Socket Layer (SSL), messaging protocols
23 (e.g., America Online (AOL) Instant Messenger (AIM), Application Exchange (APEX),

       WO 2012/112822                                                    PCT/US2012/025530
                                                  89
 1 ICQ, Internet Relay Chat (IRC), Microsoft Network (MSN) Messenger Service, Presence
 2 and   Instant Messaging Protocol (PRIM), Internet Engineering Task Force's (IETF's)
 3 Session    Initiation Protocol (SIP), SIP for Instant Messaging and Presence Leveraging
 4 Extensions      (SIMPLE), open XML-based Extensible Messaging and Presence Protocol
 5 (XMPP)      (i.e., Jabber or Open Mobile Alliance's (OMA's) Instant Messaging and
 6 Presence     Service (IMPS)), Yahoo! Instant Messenger Service, and/or the like. The
 7 information      server provides results in the form of Web pages to Web browsers, and
 8 allows   for the manipulated generation of the Web pages through interaction with other
 9 program     components. After a Domain Name System (DNS) resolution portion of an
10 HTTP request is resolved to a particular information server, the information server
11resolves    requests for information at specified locations on the SNAP controller based on
12 the    remainder       of  the   HTTP    request.  For   example,   a   request    such  as
13 http://123.124.125.126/myInformation.html might have the IP portion of the request
14 "123.124.125.126"     resolved by a DNS server to an information server at that IP address;
15 that information server might in turn further parse the http request for the
16 "/myInformation.html" portion of the request and resolve it to a location in memory
17 containing the information "myInformation.html." Additionally, other information
18 serving protocols may be employed across various ports, e.g., FTP communications
19 across port    21, and/or the like. An information server may communicate to and/or with
20 other components in a component collection, including itself, and/or facilities of the
21 like. Most frequently, the information server communicates with the SNAP database
22 1419,   operating systems, other program components, user interfaces, Web browsers,
23 and/or the like.

       WO 2012/112822                                                    PCT/US2012/025530
                                                 90
 1 [o 0150]       Access to the SNAP database may be achieved through a number of
 2 database   bridge mechanisms such as through scripting languages as enumerated below
 3 (e.g., CGI) and through inter-application communication channels as enumerated below
 4 (e.g., CORBA, WebObjects, etc.). Any data requests through a Web browser are parsed
 5 through   the bridge mechanism into appropriate grammars as required by the SNAP. In
 6 one   embodiment, the information server would provide a Web form accessible by a Web
 7 browser.   Entries made into supplied fields in the Web form are tagged as having been
 8 entered  into the particular fields, and parsed as such. The entered terms are then passed
 9 along  with the field tags, which act to instruct the parser to generate queries directed to
10 appropriate tables and/or fields. In one embodiment, the parser may generate queries in
11 standard SQL by instantiating a search string with the proper join/select commands
12 based on the tagged text entries, wherein the resulting command is provided over the
13 bridge mechanism to the SNAP as a query. Upon generating query results from the
14 query, the results are passed over the bridge mechanism, and may be parsed for
15 formatting and generation of a new results Web page by the bridge mechanism. Such a
16 new results Web page is then provided to the information server, which may supply it to
17 the requesting Web browser.
18 [o0151]        Also, an information server may contain, communicate, generate, obtain,
19 and/or provide program component, system, user, and/or data communications,
20 requests, and/or responses.
21                                        User Interface
22 [00152]        Computer interfaces in some respects are similar to automobile operation
23 interfaces. Automobile operation interface elements such as steering wheels, gearshifts,

       WO 2012/112822                                                        PCT/US2012/025530
                                                    91
 1 and speedometers facilitate the access, operation, and display of automobile resources,
 2 and    status. Computer interaction interface elements such as check boxes, cursors,
 3 menus,     scrollers, and windows (collectively and commonly referred to as widgets)
 4 similarly   facilitate the access, capabilities, operation, and display of data and computer
 5 hardware      and operating system resources, and status. Operation interfaces are
 6 commonly      called user interfaces. Graphical user interfaces (GUIs) such as the Apple
 7 Macintosh        Operating     System's    Aqua,    IBM's     OS/2,     Microsoft's    Windows
 8 2000/2003/3.1/95/98/CE/Millenium/NT/XP/Vista/7                (i.e., Aero), Unix's X-Windows
 9 (e.g., which may include additional Unix graphic interface libraries and layers such as K
10 Desktop Environment (KDE), mythTV and GNU Network Object Model Environment
11 (GNOME)), web interface libraries (e.g., ActiveX, AJAX, (D)HTML, FLASH, Java,
12 JavaScript, etc. interface libraries such as, but not limited to, Dojo, jQuery(UI),
13 MooTools, Prototype, script.aculo.us, SWFObject, Yahoo! User Interface, any of which
14 may be used and) provide a baseline and means of accessing and displaying information
15 graphically to users.
16 [o0153]          A user interface component 1417 is a stored program component that is
17 executed by a CPU. The user interface may be a conventional graphic user interface as
18 provided by, with, and/or atop operating systems and/or operating environments such
19 as already discussed. The user interface may allow for the display, execution,
20 interaction, manipulation, and/or operation of program components and/or system
21 facilities through textual and/or graphical facilities. The user interface provides a facility
22 through which users may affect, interact, and/or operate a computer system. A user
23 interface may communicate to and/or with other components in a component
24 collection, including itself, and/or facilities of the like. Most frequently, the user

       WO 2012/112822                                                PCT/US2012/025530
                                                 92
 1 interface communicates with operating systems, other program components, and/or the
 2 like. The user interface may contain, communicate, generate, obtain, and/or provide
 3 program     component, system, user, and/or data communications, requests, and/or
 4 responses.
 5                                        Web Browser
 6 [00154]         A Web browser component 1418 is a stored program component that is
 7 executed    by a CPU. The Web browser may be a conventional hypertext viewing
 8 application    such as Microsoft Internet Explorer or Netscape Navigator. Secure Web
 9 browsing    may be supplied with 128bit (or greater) encryption by way of HTIPS, SSL,
10 and/or the like. Web browsers allowing for the execution of program components
11 through    facilities such as ActiveX, AJAX, (D)HTML, FLASH, Java, JavaScript, web
12 browser plug-in APIs (e.g., FireFox, Safari Plug-in, and/or the like APIs), and/or the
13 like. Web browsers and like information access tools may be integrated into PDAs,
14 cellular telephones, and/or other mobile devices. A Web browser may communicate to
15 and/or with other components in a component collection, including itself, and/or
16 facilities of the like. Most frequently, the Web browser communicates with information
17 servers, operating systems, integrated program components (e.g., plug-ins), and/or the
18 like; e.g., it may contain, communicate, generate, obtain, and/or provide program
19 component, system, user, and/or data communications, requests, and/or responses.
20 Also, in place of a Web browser and information server, a combined application may be
21 developed to perform similar operations of both. The combined application would
22 similarly affect the obtaining and the provision of information to users, user agents,

       WO 2012/112822                                               PCT/US2012/025530
                                              93
 1 and/or the like from the SNAP enabled nodes. The combined application may be
 2 nugatory  on systems employing standard Web browsers.
 3                                       Mail Server
 4 [o0155]       A mail server component    1421 is a stored program component that is
 5 executed  by a CPU   1403. The mail server may be a conventional Internet mail server
 6 such  as, but not limited to sendmail, Microsoft Exchange, and/or the like. The mail
 7 server may allow for the execution of program components through facilities such as
 8 ASP,   ActiveX, (ANSI) (Objective-) C (++),     C#  and/or .NET, CGI scripts, Java,
 9 JavaScript,  PERL, PHP, pipes, Python, WebObjects, and/or the like. The mail server
1o may support communications protocols such as, but not limited to: Internet message
11 access    protocol    (IMAP),    Messaging    Application    Programming      Interface
12 (MAPI)/Microsoft Exchange, post office protocol (POP3), simple mail transfer protocol
13 (SMTP), and/or the like. The mail server can route, forward, and process incoming and
14 outgoing mail messages that have been sent, relayed and/or otherwise traversing
15 through and/or to the SNAP.
16 [oo156]       Access to the SNAP mail may be achieved through a number of APIs
17 offered by the individual Web server components and/or the operating system.
18 [00157]       Also, a mail server may contain, communicate, generate, obtain, and/or
19 provide program component, system, user, and/or data communications, requests,
20 information, and/or responses.

       WO 2012/112822                                                       PCT/US2012/025530
                                                   94
 1                                          Mail Client
 2 [o 0158]        A mail client component      1422   is a stored program component that is
 3 executed   by a CPU   1403. The mail client may be a conventional mail viewing application
 4 such   as Apple Mail, Microsoft Entourage, Microsoft Outlook, Microsoft Outlook
 5 Express,   Mozilla, Thunderbird, and/or the like. Mail clients may support a number of
 6 transfer  protocols, such as: IMAP, Microsoft Exchange, POP3, SMTP, and/or the like. A
 7 mail   client may communicate to and/or with other components in a component
 8 collection,  including itself, and/or facilities of the like. Most frequently, the mail client
 9 communicates      with mail servers, operating systems, other mail clients, and/or the like;
10 e.g., it may contain, communicate,            generate,   obtain, and/or provide program
11component,      system, user, and/or data communications, requests, information, and/or
12 responses. Generally, the mail client provides a facility to compose and transmit
13 electronic mail messages.
14                                    Cryptographic Server
15 [00159]         A cryptographic server component       1420   is a stored program component
16 that is executed by a CPU 1403, cryptographic processor 1426, cryptographic processor
17 interface 1427, cryptographic processor device 1428, and/or the like. Cryptographic
18 processor interfaces will allow for expedition of encryption and/or decryption requests
19 by the cryptographic component; however, the cryptographic component, alternatively,
20 may run on a conventional CPU. The cryptographic component allows for the
21 encryption and/or decryption of provided data. The cryptographic component allows for
22 both symmetric and asymmetric (e.g., Pretty Good Protection (PGP)) encryption and/or
23 decryption. The cryptographic component may employ cryptographic techniques such

       WO 2012/112822                                                     PCT/US2012/025530
                                                  95
 1 as, but not limited to: digital certificates (e.g., X.5o9 authentication framework), digital
 2 signatures,    dual signatures, enveloping, password access protection, public key
 3 management,      and/or the like. The cryptographic component will facilitate numerous
 4 (encryption   and/or decryption) security protocols such as, but not limited to: checksum,
 5 Data   Encryption Standard (DES), Elliptical Curve Encryption (ECC), International Data
 6 Encryption    Algorithm (IDEA), Message Digest 5 (MD5, which is a one way hash
 7 operation),   passwords, Rivest Cipher (RC5), Rijndael, RSA (which is an Internet
 8 encryption   and authentication system that uses an algorithm developed in      1977  by Ron
 9 Rivest,   Adi Shamir, and Leonard Adleman), Secure Hash Algorithm (SHA), Secure
10 Socket Layer (SSL), Secure Hypertext Transfer Protocol (HTIPS), and/or the like.
11 Employing     such encryption security protocols, the SNAP may encrypt all incoming
12 and/or outgoing communications and may serve as node within a virtual private
13 network (VPN) with a wider communications network. The cryptographic component
14 facilitates the process of "security authorization" whereby access to a resource is
15 inhibited by a security protocol wherein the cryptographic component effects authorized
16 access to the secured resource. In addition, the cryptographic component may provide
17 unique identifiers of content, e.g., employing and MD5 hash to obtain a unique
18 signature for an digital audio file. A cryptographic component may communicate to
19 and/or with other components in a component collection, including itself, and/or
20 facilities of the like. The cryptographic component supports encryption schemes
21 allowing for the secure transmission of information across a communications network
22 to enable the SNAP component to engage in secure transactions if so desired. The
23 cryptographic component facilitates the secure accessing of resources on the SNAP and
24 facilitates the access of secured resources on remote systems; i.e., it may act as a client

       WO 2012/112822                                                   PCT/US2012/025530
                                                 96
 1 and/or server of secured resources. Most frequently, the cryptographic component
 2 communicates     with information servers, operating systems, other program components,
 3 and/or   the like. The cryptographic component may contain, communicate, generate,
 4 obtain,  and/or provide program component, system, user, and/or data communications,
 5 requests,  and/or responses.
 6                                    The SNAP Database
 7 [o  016 ]      The SNAP database component 1419 may be embodied in a database and
 8 its stored data. The database is a stored program component, which is executed by the
 9 CPU;   the stored program component portion configuring the CPU to process the stored
10 data. The database may be a conventional, fault tolerant, relational, scalable, secure
11 database such as Oracle or Sybase. Relational databases are an extension of a flat file.
12 Relational databases consist of a series of related tables. The tables are interconnected
13 via a key field. Use of the key field allows the combination of the tables by indexing
14 against the key field; i.e., the key fields act as dimensional pivot points for combining
15 information from various tables. Relationships generally identify links maintained
16 between tables by matching primary keys. Primary keys represent fields that uniquely
17 identify the rows of a table in a relational database. More precisely, they uniquely
18 identify rows of a table on the "one" side of a one-to-many relationship.
19 [00161]        Alternatively, the SNAP database may be implemented using various
20 standard data-structures, such as an array, hash, (linked) list, struct, structured text file
21 (e.g., XML), table, and/or the like. Such data-structures may be stored in memory
22 and/or in (structured) files. In another alternative, an object-oriented database may be
23 used, such as Frontier, ObjectStore, Poet, Zope, and/or the like. Object databases can

       WO 2012/112822                                                     PCT/US2012/025530
                                                  97
 1 include a number of object collections that are grouped and/or linked together by
 2 common     attributes; they may be related to other object collections by some common
 3 attributes.  Object-oriented databases perform similarly to relational databases with the
 4 exception   that objects are not just pieces of data but may have other types of capabilities
 5 encapsulated    within a given object. If the SNAP database is implemented as a data
 6 structure,  the use of the SNAP database    1419  may be integrated into another component
 7 such  as the SNAP component       1435. Also, the database may be implemented as a mix of
 8 data  structures, objects, and relational structures. Databases may be consolidated
 9 and/or  distributed in countless variations through standard data processing techniques.
10 Portions of databases, e.g., tables, may be exported and/or imported and thus
11decentralized    and/or integrated.
12 [o0162]         In one embodiment, the database component 1419 includes several tables
13 1419a-o.  A Users table 1419a may include fields such as, but not limited to: userid, ssn,
14 dob, firstname, lastname, age, state, addressfirstline, addresssecondline, zipcode,
15 deviceslist, contactinfo, contact type, altcontactinfo, altcontact-type, and/or the
16 like. The Users table may support and/or track multiple entity accounts on a SNAP. A
17 Devices table 1419b may include fields such as, but not limited to: deviceID,
18 device-name, deviceIP, deviceMAC, devicetype, devicemodel, deviceversion,
19 deviceOS, device-appslist, devicesecurekey, wallet app-installed-flag, and/or the
20 like. An Apps table      1419c may include fields such as, but not limited to: appID,
21 app-name, app type, app-dependencies, and/or the like. An Accounts table 1419d
22 may include fields such as, but not limited to: accountnumber, accountsecurity code,
23 accountname, issuer-acquirer flag, issuername, acquirer-name, accountaddress,
24 routing-number, accessAPIcall, linkedwalletslist, and/or the like. A Merchants

       WO 2012/112822                                                     PCT/US2012/025530
                                                 98
 1 table 1419e may include fields such as, but not limited to: merchantid,
 2 merchantname,       merchantaddress, ip-address, macaddress, auth-key, port num,
 3 security-settings-list,  and/or the like. An Issuers table    1419f may include fields such
 4 as,   but not limited to:        issuerid, issuername,        issueraddress,     ip-address,
 5 macaddress,      authkey, port num, security-settings-list, and/or the like.               An
 6Acquirers   table 1419g  may include fields such as, but not limited to: accountfirstname,
 7 accountlastname,     account type, accountnum, account_ balance_list, billingaddress_
 8 line,   billingaddress_    line2, billing-zipcode, billing-state,     shipping-preferences,
 9 shippingaddressline1,      shippingaddressline2,      shipping_   zipcode, shipping-state,
10 and/or the like. A Pay Gateways table    1419h   may include fields such as, but not limited
11 to: gatewayID, gatewayIP, gatewayMAC, gateway-secure-key, gateway-accesslist,
12 gatewayAPI-calllist, gatewayserviceslist, and/or the like. A Transactions table
13 1419i  may include fields such as, but not limited to: orderid, userid, timestamp,
14 transactioncost, purchase detailslist, num products, products list, product type,
15 product-paramslist, product-title, product-summary, quantity, userid, clientid,
16 client ip, client-type, client_model, operatingsystem, osversion, app-installedflag,
17 userid,      accountfirstname,       accountlastname,       account type,     accountnum,
18 account-priority-accountratio,            billingaddressline1,         billingaddressline2,
19 billingzipcode,       billing-state,    shipping-preferences,        shippingaddressline1,
20 shippingaddressline2,         shipping_      zipcode,     shipping-state,      merchantid,
21 merchantname, merchantauth key, and/or the like.                A Batches table   1419j  may
22 include fields such as, but not limited to: batchid, transactionidlist, timestamp-list,
23 cleared flag list, clearance trigger    settings, and/or the like. A Ledgers table      1419k
24 may include fields such as, but not limited to: requestid, timestamp, deposit-amount,

       WO 2012/112822                                                     PCT/US2012/025530
                                                99
 1 batchid, transactionid, clear-flag, deposit-account, transactionsummary, payor_
 2 name,    payor account, and/or the like. A Products table      14191 may include fields such
 3 as,   but    not   limited   to:   productID,     producttitle,      productattributeslist,
 4 product-price,     taxinfolist,     relatedproducts_     list,   offerslist,  discountslist,
 5 rewardslist,    merchantslist, merchantavailability list, and/or the like.         An Offers
 6 table 1419m    may include fields such as, but not limited to: offer_ID, offertitle,
 7 offerattributeslist,    offer-price, offer_expiry, related-products_ list, discountslist,
 8 rewardslist,    merchantslist, merchantavailability list, and/or the like. A Behavior
 9 Data   table 1419n may include fields such as, but not limited to: userid, timestamp,
10 activity type, activity location, activityattributelist, activity-attributevalueslist,
11 and/or the like. An Analytics table 14190 may include fields such as, but not limited to:
12 reportid, userid, report-type, report algorithmid, report destinationaddress,
13 and/or the like.
14 [o 0163]       In one embodiment, the SNAP database may interact with other database
15 systems. For example, employing a distributed database system, queries and data access
16 by search SNAP component may treat the combination of the SNAP database, an
17 integrated data security layer database as a single database entity.
18 [o0164]        In one embodiment, user programs may contain various user interface
19 primitives, which may serve to update the SNAP. Also, various accounts may require
20 custom database tables depending upon the environments and the types of clients the
21 SNAP may need to serve. It should be noted that any unique fields may be designated as
22 a key field throughout. In an alternative embodiment, these tables have been
23 decentralized into their own databases and their respective database controllers (i.e.,

       WO 2012/112822                                                    PCT/US2012/025530
                                               100
 1 individual database controllers for each of the above tables). Employing standard data
 2 processing  techniques, one may further distribute the databases over several computer
 3 systemizations   and/or storage devices. Similarly, configurations of the decentralized
 4 database controllers may be varied by consolidating and/or distributing the various
 5 database   components 1419a-o. The SNAP may be configured to keep track of various
 6 settings, inputs, and parameters via database controllers.
 7 [o 0165]       The SNAP database may communicate to and/or with other components
 8 in a component collection, including itself, and/or facilities of the like. Most frequently,
 9 the   SNAP    database communicates with the SNAP component, other program
10 components, and/or the like. The database may contain, retain, and provide
11 information regarding other nodes and data.
12                                        The SNAPs
13 [00166]        The SNAP component       1435   is a stored program component that is
14 executed by a CPU. In one embodiment, the SNAP component incorporates any and/or
15 all combinations of the aspects of the SNAP discussed in the previous figures. As such,
16 the SNAP affects accessing, obtaining and the provision of information, services,
17 transactions, and/or the like across various communications networks.
18 [o0167]        The SNAP component may transform real-time-generated merchant
19 product Quick Response codes via SNAP components into virtual wallet card-based
20 transaction purchase notifications, and/or the like and use of the SNAP. In one
21 embodiment, the SNAP component        1435 takes inputs (e.g., checkout input 411; product
22 data 414; payment input 419; issuer server data 423; user data 427a-n; and/or the like),
23 and transforms the inputs via SNAP components (e.g., SMPE         1441;  QRCP 1442;  and/or

       WO 2012/112822                                                 PCT/US2012/025530
                                                101
 1 the like), into outputs (e.g., QR pay code 417; card authorization request           421;
 2 authorization    response 429a-n; authorization success message 433a-b; batch append
 3 data  435; purchase receipt 436; and/or the like).
 4 [o 0168]        The SNAP component enabling access of information between nodes may
 5 be developed by employing standard development tools and languages such as, but not
 6 limited   to: Apache components, Assembly, ActiveX, binary executables, (ANSI)
 7 (Objective-)   C (++), C# and/or .NET, database adapters, CGI scripts, Java, JavaScript,
 8 mapping    tools, procedural and object oriented development tools, PERL, PHP, Python,
 9 shell  scripts, SQL commands, web application server extensions, web development
10 environments and libraries (e.g., Microsoft's ActiveX; Adobe AIR, FLEX & FLASH;
11 AJAX;     (D)HTML;      Dojo,  Java;  JavaScript;   jQuery(UI);  MooTools;    Prototype;
12 script.aculo.us; Simple Object Access Protocol (SOAP); SWFObject; Yahoo! User
13 Interface; and/or the like), WebObjects, and/or the like. In one embodiment, the SNAP
14 server employs a cryptographic server to encrypt and decrypt communications. The
15 SNAP component may communicate to and/or with other components in a component
16 collection, including itself, and/or facilities of the like. Most frequently, the SNAP
17 component communicates with the SNAP database, operating systems, other program
18 components, and/or the like. The SNAP may contain, communicate, generate, obtain,
19 and/or provide program component, system, user, and/or data communications,
20 requests, and/or responses.
21                                    Distributed SNAPs
22 [o0169]         The structure and/or operation of any of the SNAP node controller
23 components may be combined, consolidated, and/or distributed in any number of ways

       WO 2012/112822                                                PCT/US2012/025530
                                               102
 1 to facilitate development and/or deployment. Similarly, the component collection may
 2 be  combined in any number of ways to facilitate deployment and/or development. To
 3 accomplish    this, one may integrate the components into a common code base or in a
 4 facility that can dynamically load the components on demand in an integrated fashion.
 5 [00170]         The component collection may be consolidated and/or distributed in
 6 countless   variations through standard data processing and/or development techniques.
 7 Multiple   instances of any one of the program components in the program component
 8 collection   may be instantiated on a single node, and/or across numerous nodes to
 9 improve     performance through load-balancing and/or data-processing techniques.
10 Furthermore, single instances may also be distributed across multiple controllers
11 and/or storage devices;      e.g., databases. All program component instances and
12 controllers working      in concert   may do so through standard data processing
13 communication techniques.
14 [00171]         The configuration of the SNAP controller will depend on the context of
15 system deployment. Factors such as, but not limited to, the budget, capacity, location,
16 and/or use of the underlying hardware resources may affect deployment requirements
17 and configuration. Regardless of if the configuration results in more consolidated
18 and/or integrated program components, results in a more distributed series of program
19 components,      and/or results in some combination between a consolidated and
20 distributed configuration, data may be communicated, obtained, and/or provided.
21 Instances of components consolidated into a common code base from the program
22 component collection may communicate, obtain, and/or provide data. This may be
23 accomplished through intra-application data processing communication techniques

       WO 2012/112822                                                   PCT/US2012/025530
                                                103
 1 such as, but not limited to: data referencing (e.g., pointers), internal messaging, object
 2 instance   variable communication, shared memory space, variable passing, and/or the
 3 like.
 4 [00172]         If component collection components        are discrete, separate, and/or
 5 external   to one another, then communicating, obtaining, and/or providing data with
 6 and/or    to other components may be accomplished through inter-application data
 7 processing   communication techniques such as, but not limited to: Application Program
 8 Interfaces    (API) information     passage;   (distributed)  Component    Object    Model
 9 ((D)COM),     (Distributed) Object Linking and Embedding ((D)OLE), and/or the like),
10 Common Object Request Broker Architecture (CORBA), Jini local and remote
11 application program interfaces, JavaScript Object Notation (JSON), Remote Method
12 Invocation (RMI), SOAP, process pipes, shared files, and/or the like. Messages sent
13 between discrete component components for inter-application communication or within
14 memory spaces of a singular component for intra-application communication may be
15 facilitated through the creation and parsing of a grammar. A grammar may be
16 developed by using development tools such as lex, yacc, XML, and/or the like, which
17 allow for grammar generation and parsing capabilities, which in turn may form the basis
18 of communication messages within and between components.
19 [o0173]         For example, a grammar may be arranged to recognize the tokens of an
20 HTIP post command, e.g.:
21                       w3c -post http://... Valuel
22
23 [00174]         where Value1 is discerned as being a parameter because "http://" is part of
24 the grammar syntax, and what follows is considered part of the post value. Similarly,

       WO 2012/112822                                                    PCT/US2012/025530
                                               104
 1 with such a grammar, a variable "Valuei" may be inserted into an "http://" post
 2 command    and then sent. The grammar syntax itself may be presented as structured data
 3 that is interpreted and/or otherwise used to generate the parsing mechanism (e.g., a
 4 syntax  description text file as processed by lex, yacc, etc.). Also, once the parsing
 5 mechanism     is generated and/or instantiated, it itself may process and/or parse
 6 structured  data such as, but not limited to: character (e.g., tab) delineated text, HTML,
 7 structured  text streams, XML, and/or the like structured data. In another embodiment,
 8 inter-application   data processing protocols themselves may have integrated and/or
 9 readily available parsers (e.g., JSON, SOAP, and/or like parsers) that may be employed
10 to parse (e.g., communications) data. Further, the parsing grammar may be used
11beyond    message parsing, but may also be used to parse: databases, data collections, data
12 stores, structured data, and/or the like. Again, the desired configuration will depend
13 upon the context, environment, and requirements of system deployment.
14 [o0175]        For example, in some implementations, the SNAP controller may be
15 executing a PHP script implementing a Secure Sockets Layer ("SSL") socket server via
16 the information server, which listens to incoming communications on a server port to
17 which a client may send data, e.g., data encoded in JSON format. Upon identifying an
18 incoming communication, the PHP script may read the incoming message from the
19 client device, parse the received JSON-encoded text data to extract information from the
20 JSON-encoded text data into PHP script variables, and store the data (e.g., client
21 identifying information, etc.) and/or extracted information in a relational database
22 accessible using the Structured Query Language ("SQL"). An exemplary listing, written
23 substantially in the form of PHP/SQL commands, to accept JSON-encoded input data

       WO 2012/112822                                                   PCT/US2012/025530
                                                105
 1 from a client device via a SSL connection, parse the data to extract variables, and store
 2 the data to a database, is provided below:
 3     <?PHP
 4     header('Content-Type:   text/plain');
 5
 6     // set ip address and port to listen to for incoming data
 7     $address = '192.168.0.100';
 8     $port = 255;
 9
10     // create a server-side SSL socket, listen for/accept incoming communication
11     $sock = socketcreate(AFINET, SOCKSTREAM, 0);
12     socket bind($sock, $address, $port) or die('Could not bind to address');
13     socketlisten($sock);
14     $client = socketaccept($sock);
15
16     // read input data from client device in 1024 byte blocks until end of message
17     do  {
18         $input =
19         $input = socketread($client, 1024);
20         $data .= $input;
21     1 while($input
22
23     // parse data to extract variables
24     $obj = jsondecode($data, true);
25
26     // store input data in a database
27     mysql connect("201.408.185.132",$DBserver,$password); // access database server
28     mysql select("CLIENTDB.SQL"); // select database to append
29     mysql query("INSERT INTO UserTable (transmission)
30     VALUES ($data)"); // add data to UserTable table in a CLIENT database
31     mysqlclose("CLIENT_DB.SQL"); // close connection to database
32     ?>
33
34 [o0176]        Also,   the following    resources may be used to provide example
35 embodiments regarding SOAP parser implementation:
36     http://www.xav.com/perl/site/lib/SOAP/Parser.html
37     http://publib.boulder.ibm.com/infocenter/tivihelp/v2rl/index.jsp?topic=/com.ibm
38          .IBMDI.doc/referenceguide295.htm
39
40 [o 0177]       and other parser implementations:
41     http://publib.boulder.ibm.com/infocenter/tivihelp/v2rl/index.jsp?topic=/com.ibm
42          .IBMDI.doc/referenceguide259.htm
43
44 [00178]        all of which are hereby expressly incorporated by reference herein.
45 [00179]        In order to address various issues and advance the art, the entirety of this
46 application for SNAP MOBILE PAYMENT APPARATUSES, METHODS AND SYSTEMS
47 (including the Cover Page, Title, Headings, Field, Background, Summary, Brief

       WO 2012/112822                                                   PCT/US2012/025530
                                                 106
 1 Description     of the Drawings,      Detailed Description,   Claims, Abstract, Figures,
 2 Appendices     and/or otherwise) shows by way of illustration various embodiments in
 3 which   the claimed innovations may be practiced. The advantages and features of the
 4 application   are of a representative sample of embodiments only, and are not exhaustive
 5 and/or   exclusive. They are presented only to assist in understanding and teach the
 6 claimed    principles. It should be understood that they are not representative of all
 7 claimed   innovations. As such, certain aspects of the disclosure have not been discussed
 8 herein.  That alternate embodiments may not have been presented for a specific portion
 9 of the innovations or that further undescribed alternate embodiments may be available
10 for a portion is not to be considered a disclaimer of those alternate embodiments. It will
11 be appreciated that many of those undescribed embodiments incorporate the same
12 principles of the innovations and others are equivalent. Thus, it is to be understood that
13 other embodiments may be utilized and functional, logical, operational, organizational,
14 structural and/or topological modifications may be made without departing from the
15 scope and/or spirit of the disclosure. As such, all examples and/or embodiments are
16 deemed to be non-limiting throughout this disclosure. Also, no inference should be
17 drawn regarding those embodiments discussed herein relative to those not discussed
18 herein other than it is as such for purposes of reducing space and repetition. For
19 instance, it is to be understood that the logical and/or topological structure of any
20 combination of any program components (a component collection), other components
21 and/or any present feature sets as described in the figures and/or throughout are not
22 limited to a fixed operating order and/or arrangement, but rather, any disclosed order is
23 exemplary and all equivalents, regardless of order, are contemplated by the disclosure.
24 Furthermore, it is to be understood that such features are not limited to serial execution,

                                                  107
but rather, any number of threads, processes, services, servers, and/or the like that may
execute asynchronously, concurrently, in parallel, simultaneously, synchronously, and/or
the like are contemplated by the disclosure.        As such, some of these features may be
mutually contradictory, in that they cannot be simultaneously present in a single
embodiment. Similarly, some features are applicable to one aspect of the innovations, and
inapplicable to others. In addition, the disclosure includes other innovations not presently
claimed. Applicant reserves all rights in those presently unclaimed innovations, including
the right to claim such innovations, file additional applications, continuations, continuations
in part, divisions, and/or the like thereof. As such, it should be understood that advantages,
embodiments, examples, functional, features, logical, operational, organizational, structural,
topological, and/or other aspects of the disclosure are not to be considered limitations on
the disclosure as defined by the claims or limitations on equivalents to the claims. It is to
be understood that, depending on the particular needs and/or characteristics of a SNAP
individual and/or enterprise user, database configuration and/or relational model, data type,
data transmission and/or network framework, syntax structure, and/or the like, various
embodiments of the SNAP may be implemented that enable a great deal of flexibility and
customization. For example, aspects of the SNAP may be adapted for restaurant dining,
online shopping, shopping in brick-and-mortar stores, secure information processing,
healthcare information systems,        and/or the like.     While various embodiments and
discussions of the SNAP have been directed to electronic purchase transactions, however, it
is to be understood that the embodiments described herein may be readily configured
and/or customized for a wide variety of other applications and/or implementations.
         Throughout this specification and the claims which follow, unless the context
requires otherwise, the word "comprise", and variations such as "comprises" and
"comprising", will be understood to imply the inclusion of a stated integer or step or group
of integers or steps but not the exclusion of any other integer or step or group of integers or
steps.
         The reference to any prior art in this specification is not, and should not be taken as,
an acknowledgement or any form of suggestion that the prior art forms part of the common
general knowledge in Australia.

                                            108
                                          CLAIMS
1.      A visual snap computer-implemented method, comprising:
        obtaining a user visual item information request (VITR) by a first processor
executing at a merchant server, the VITR including a checkout request from a virtual
wallet application executing on a second processor at a user mobile computing device,
the checkout request including user data and first product data to initiate a purchase
transaction for a product using the virtual wallet application that is native to the user
mobile computing device;
        extracting, by the first processor executing at the merchant server, VITR field
 attributes from the checkout request, wherein the VITR field attributes include the
  user data and the first product data, the user data including one or more of a user ID,
 a user name, a user balance, and a user account type corresponding to an account
 of the virtual wallet application;
        querying, by the first processor executing at the merchant server, a merchant
database with the extracted VITR field attributes and with second product data
corresponding to the first product data;
        generating, by the first processor executing at the merchant server, a QR code
including the parsed user data, merchant data, and one or more of the first product
data and the second product data, wherein both the first product data and the second
product data correspond to the product;
        providing, by a digital camera of the user mobile computing device to the virtual
wallet application executing at the user mobile computing device, an image frame, the
image frame including the QR code;
        decoding, by the second processor executing the virtual wallet application at
the user mobile computing device, the user data, the merchant data, and the one or
more of the first product data and the second product data from the QR code of the
provided image frame;
        generating, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a card authorization request including
the merchant data and the one or more of the first product data and the second product
data that were decoded from the QR code of the provided image frame;
        obtaining, by the second processor executing at the user mobile computing
device executing the virtual wallet application, for payment processing, payment

                                             109
information associated with a virtual wallet account, wherein the virtual wallet account
is linked to the virtual wallet application and the generated card authorization request
includes the payment information associated with the virtual wallet account;
        sending, by the second processor executing at the user mobile computing
device executing the virtual wallet application, the card authorization request to a
payment network for payment processing from the payment network to the merchant
server for the purchase transaction; and
        receiving, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a purchase receipt for the purchase
transaction responsive to the card authorization request.
2.      The method of claim 1, wherein the VITR may be one of a visual coupon
addition request, a visual account addition request, a visual bill addition request, a
visual purchase request, and a visual purchase information request.
3.      The method of claim 2, wherein the VITR and image frame are storable for later
access and retrieval via a VITR history.
4.      The method of claim 1, wherein the VITR is a visual purchase request, and
the provided image frame is a purchase intake mechanism, and further comprising:
        obtaining a user's indication to purchase the product identified in the provided
image frame;
        obtaining a purchase transaction request for payment processing of the
  product; and
        providing the purchase receipt for the purchase transaction.
5.      A visual snap computer-implemented system, comprising:
        a processor; and
        a memory       disposed in communication with the processor and storing
processor- executable instructions to:
        obtain a user visual item information request (VITR) by a first processor
executing at a merchant server, the VITR including a checkout request from a virtual
wallet application executing on a second processor at a user mobile computing device,
the checkout request including user data and first product data to initiate a purchase

                                            110
transaction for a product using the virtual wallet application that is native to the user
mobile computing device;
        extract, by the first processor executing at the merchant server, VITR field
 attributes from the checkout request, wherein the VITR field attributes include the
  user data and the first product data, the user data including one or more of a user ID,
 a user name, a user balance, and a user account type corresponding to an account
 of the virtual wallet application;
        query, by the first processor executing at the merchant server, a merchant
database with the extracted VITR field attributes and with second product data
corresponding to the first product data;
        generate, by the first processor executing at the merchant server, a QR code
including the parsed user data, merchant data, and one or more of the first product
data and the second product data, wherein both the first product data and the second
product data correspond to the product;
        provide, by a digital camera of the user mobile computing device to the virtual
wallet application executing at the user mobile computing device, an image frame, the
image frame including the QR code;
        decode, by the second processor executing the virtual wallet application at the
user mobile computing device, the user data, the merchant data, and the one or more
of the first product data and the second product data from the QR code of the provided
image frame;
        generate, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a card authorization request including
the merchant data and the one or more of the first product data and the second product
data that were decoded from the QR code of the provided image frame;
        obtain, by the second processor executing at the user mobile computing device
executing the virtual wallet application, for payment processing, payment information
associated with a virtual wallet account, wherein the virtual wallet account is linked to
the virtual wallet application and the generated card authorization request includes the
payment information associated with the virtual wallet account;
        send, by the second processor executing at the user mobile computing device
executing the virtual wallet application, the card authorization request to a payment
network for payment processing from the payment network to the merchant server for
the purchase transaction; and

                                            111
        receive, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a purchase receipt for the purchase
transaction responsive to the card authorization request.
6.      The system of claim 5, wherein the VITR may be one of a visual coupon
addition request, a visual account addition request, a visual bill addition request, a
visual purchase request, and a visual purchase information request.
7.      The system of claim 6, wherein the VITR and image frame are storable for later
access and retrieval via a VITR history.
8.      The system of claim 5, wherein the VITR is a visual purchase request, and the
provided image frame is a purchase intake mechanism, and further comprising:
         obtain a user's indication to purchase t he product identified i n the provided
  image frame;
         obtain a purchase transaction request for payment processing of the
  product; and
         provide the purchase receipt for the purchase transaction.
9.      A computer-readable tangible medium storing computer-executable visual
snap instructions to:
        obtain a user visual item information request (VITR) by a first processor
executing at a merchant server, the VITR including a checkout request from a virtual
wallet application executing on a second processor at a user mobile computing device,
the checkout request including user data and first product data to initiate a purchase
transaction for a product using the virtual wallet application that is native to the user
mobile computing device;
        extract, by the first processor executing at the merchant server, VITR field
 attributes from the checkout request, wherein the VITR field attributes include the
  user data and the first product data, the user data including one or more of a user ID,
 a user name, a user balance, and a user account type corresponding to an account
 of the virtual wallet application;
        query, by the first processor executing at the merchant server, a merchant
database with the extracted VITR field attributes and with second product data

                                            112
corresponding to the first product data;
        generate, by the first processor executing at the merchant server, a QR code
including the parsed user data, merchant data, and one or more of the first product
data and the second product data, wherein both the first product data and the second
product data correspond to the product;
        provide, by a digital camera of the user mobile computing device to the virtual
wallet application executing at the user mobile computing device, an image frame, the
image frame including the QR code;
        decode, by the second processor executing the virtual wallet application at the
user mobile computing device, the user data, the merchant data, and the one or more
of the first product data and the second product data from the QR code of the provided
image frame;
        generate, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a card authorization request including
the merchant data and the one or more of the first product data and the second product
data that were decoded from the QR code of the provided image frame;
        obtain, by the second processor executing at the user mobile computing device
executing the virtual wallet application, for payment processing, payment information
associated with a virtual wallet account, wherein the virtual wallet account is linked to
the virtual wallet application and the generated card authorization request includes the
payment information associated with the virtual wallet account;
        send, by the second processor executing at the user mobile computing device
executing the virtual wallet application, the card authorization request to a payment
network for payment processing from the payment network to the merchant server for
the purchase transaction; and
        receive, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a purchase receipt for the purchase
transaction responsive to the card authorization request.
10.       The medium of claim 9, wherein the VITR may be one of a visual coupon
addition request, a visual account addition request, a visual bill addition request,
a visual purchase request, and a visual purchase information request.
11.       The medium of claim 10, wherein the VITR and image frame are storable for

                                            113
later access and retrieval via a VITR history.
12.     The medium of claim 9, wherein the VITR is a visual purchase request, and
the provided image frame is a purchase intake mechanism, and further storing
instructions to:
        obtain a user's indication to purchase t he product identified in the provided
                image frame;
         obtain a purchase transaction request for payment processing of the
  product; and
         provide the purchase receipt for the purchase transaction.
13.     A visual snap computer-implemented means, comprising means for:
        obtaining a user visual item information request (VITR) by a first processor
executing at a merchant server, the VITR including a checkout request from a virtual
wallet application executing on a second processor at a user mobile computing device,
the checkout request including user data and first product data to initiate a purchase
transaction for a product using the virtual wallet application that is native to the user
mobile computing device;
        extracting, by the first processor executing at the merchant server, VITR field
 attributes from the checkout request, wherein the VITR field attributes include the
  user data and the first product data, the user data including one or more of a user ID,
 a user name, a user balance, and a user account type corresponding to an account
 of the virtual wallet application;
        querying, by the first processor executing at the merchant server, a merchant
database with the extracted VITR field attributes and with second product data
corresponding to the first product data;
        generating, by the first processor executing at the merchant server, a QR code
including the parsed user data, merchant data, and one or more of the first product
data and the second product data, wherein both the first product data and the second
product data correspond to the product;
        providing, by a digital camera of the user mobile computing device to the virtual
wallet application executing at the user mobile computing device, an image frame, the
image frame including the QR code;
        decoding, by the second processor executing the virtual wallet application at

                                             114
the user mobile computing device, the user data, the merchant data, and the one or
more of the first product data and the second product data from the QR code of the
provided image frame;
        generating, by the second processor executing at the user mobile computing
device executing the virtual wallet application, a card authorization request including
the merchant data and the one or more of the first product data and the second product
data that were decoded from the QR code of the provided image frame;
        obtaining, by the second processor executing at the user mobile computing
device executing the virtual wallet application, for payment processing, payment
information associated with a virtual wallet account, wherein the virtual wallet account
is linked to the virtual wallet application and the generated card authorization request
includes the payment information associated with the virtual wallet account;
        sending, by the second processor executing at the user mobile computing
device executing the virtual wallet application, the card authorization request to a
payment network for payment processing from the payment network to the merchant
server for the purchase transaction; and
receiving, by the second processor executing at the user mobile computing device
executing the virtual wallet application, a purchase receipt for the purchase transaction
responsive to the card authorization request.
14.     The means of claim 13, wherein the VITR may be one of a visual coupon
addition request, a visual account addition request, a visual bill addition request,
a visual purchase request, and a visual purchase information request.
15.     The means of claim 14, wherein the VITR and image frame are storable for later
access and retrieval via a VITR history.
16.     The means of claim 13, wherein the VITR is a visual purchase request, and
the provided image frame is a purchase intake mechanism, and further comprising
means for:
        obtaining the user's indication to purchase a purchase item identified
                in the provided image frame;
        obtaining a purchase transaction request for payment processing of the
                product; and

                                 115
providing the purchase receipt for the purchase transaction.

                                                                                                       <removed-apn>                <removed-date>
                                QR pay                                                                                                          :.;;
                                                                                                                                                0
    Snap QR code (e.g.,      code 1 05a                                         Snap QR code (e.g.,                                             N
                                                                                                                                                0
      via mobile app) for                                                         via mobile app) for                                           ......
                                                                                                                                                N
    payment (e.g., using                                                        payment (e.g., using     Purchase items                         ......
                                                                                                                                                ......
                                                                                                                                                --
                                                                                                                                                N
                                                                                                         (e.g., online                          QCI
     virtual wallet) 1 04a ~                                                     virtual wallet) 1 04b                                          N
                                                                                                         shopping cart) 1 02b                   N
                                                                                               User
                 User                                                                         1 01b
               1 01a
                                                                                                                                             01
                                                                                                                                             w
                                                                                                                                             -
                                                    00                       00
                                                 Store#123 Receipt
                                                 San Francisco, CA
                                                 Date:                Jan-21
                                                 Total:               $56. 00
                                                 Card : XXXXXX3 7 0 9
                                                 Trans#: 01238567
                                                 MCC: (Food) 5814
                                                 Au th:               122845
                                       Purchase         1111111111111111111111
                                                           123456
                                   receipt 1 07a                                     Mobile_ phone
                                                                                     1 06a
FIGURE 1A                                                                                                       Example(s): Snap Mobile Payment

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
