                                              ABSTRACT
A task item is electronic data that represents a task to be performed, whether manually or
automatically. A task item includes one or more details about its corresponding task, such as a
description of the task and a location of the task. Specifically, techniques for generating task
items, organizing task items, triggering notifications of task items, and consuming task items are
described. In one approach, a task item is generated based on input from a user and context of
the input. In another approach, different attributes of task items are used to organize the task
items intelligently into multiple lists. In another approach, one or more criteria, such as location,
are used to determine when to notify a user of a task item. In another approach, actions other
than the generation of notification are enabled or automatically performed, actions such as
emailing, calling, texting, and searching.

    TRIGGERING NOTIFICATIONS ASSOCIATED WITH TASKS TO PERFORM
                                     RELATED APPLICATION
[0001]       This application is related to International Application Number PCT/US2012/040571
(International Publication Number WO 2012/167168), filed on 1 June 2012, the contents of
which are hereby incorporated by reference in their entirety.
                                    FIELD OF THE INVENTION
[0001A]      The present invention relates to electronic reminders and, more particularly to, the
intelligent generation, organization, triggering, and delivery of reminders and tasks in electronic
to-do lists.
                                           BACKGROUND
[0002]       People have devised numerous ways to remind themselves of certain tasks or events.
Many people have and still do write on physical media, such as sticky notes and calendars. With
the ubiquity of electronic devices, many people have turned to computers to help manage their
to-do lists and keep of record of upcoming events. Numerous reminder and to-do applications are
available, both for desktop computers as well as handheld devices, such as laptop computers,
tablet computers, and "smart" phones.
[0003]       However, the timeliness and accuracy of a notification provided to a user of a
reminder application depends almost entirely on input received from the user. For example, if a
user enters, in a reminder application, a wrong date for an important event, then the user might
not receive a notification of the event until after the event occurs. As another example, if a user
provides a generic description of a task (e.g., "send him an email") in a to-do application, then,
when the user later reads the description, the user might not remember who "him" is and/or what
the content of the email should be. In other words, when it comes to reminder and to-do
applications, the old adage of "garbage in garbage out" is applicable.
[0004]       The approaches described in this section are approaches that could be pursued, but
not necessarily approaches that have been previously conceived or pursued. Therefore, unless
                                                  -1 -

otherwise indicated, it should not be assumed that any of the approaches described in this section
qualify as prior art merely by virtue of their inclusion in this section.
                           BRIEF DESCRIPTION OF THE DRAWINGS
[0005]      In the drawings:
[00061      FIG. 1 is a block diagram that depicts a system that is used for creating and
processing task items, according to an embodiment of the invention;
[0007]      FIG. 2 is a flow diagram that depicts a process for generating a task item based on
context of user input, according to an embodiment of the invention;
                                                 - 1A -

  WO 2012/167168                                                           PCT/US2012/040571
[0008]      FIG. 3 is a flow diagram that depicts a process for determining a time to provide a
reminder to a user ahead of a scheduled time for a task, according to an embodiment of the
invention;
[0009]      FIG. 4 is a view of a travel reminder, according to an embodiment of the
invention;
[00010]     FIGs. 5-15 depict views of various types of lists, according to an embodiment of
the invention; and
[00011]     FIG. 16 is a block diagram that illustrates a computer system upon which an
embodiment of the invention may be implemented.
[00012]     FIGS. 17-24 are functional block diagrams of electronic devices, in accordance
with some embodiments.
                                    DETAILED DESCRIPTION
[00013]     In the following description, for the purposes of explanation, numerous specific
details are set forth in order to provide a thorough understanding of the present invention. It
will be apparent, however, that the present invention may be practiced without these specific
details. In other instances, well-known structures and devices are shown in block diagram
form in order to avoid unnecessarily obscuring the present invention.
                                     GENERAL OVERVIEW
[00014]     Multiple techniques are provided below for assisting a user in managing his/her
tasks. Tasks are represented as task items in a computing system. Specifically, approaches
for generating task items, organizing task items, triggering the notification of tasks based on
corresponding task items, and consuming task items are described in detail below.
[00015]     With respect to generating a task item, a task item is generated based on input
from a user. The input (whether voice or text) includes one or more details about a task while
context of the input is used to determine one or more other details about the task. The one or
more other details are not reflected in the input. Context may include data that is stored on a
device of the user. For example, a user provides the following voice input: "Call George at
5PM today." The user may have a contact list that includes information about multiple
people with the first name of George. However, based on the context of the input, such as a
recent voice message from a phone number associated with a particular George, it can be
determined which George the user intends to call. In this way, a user is not required to be
specific about each detail of a task when providing input about the task.
[00016]     With respect to triggering a notification of a task item, one or more characteristics
of a device may be used to determine whether to trigger the notification. Thus, time is not the

  WO 2012/167168                                                              PCT/US2012/040571
sole factor (if at all) of whether a notification should be provided to a user. Examples of such
characteristics may include where the device is located, what the device is displaying or
processing, and specific movements of the device. For example, the fact that the device is in
a car or at work may trigger the generation of a reminder of a task. As another example, if
the device is currently displaying web content, then a user of the device may be considered to
be "online," which status might trigger a notification of a task to be provided to the user.
[00017]      With respect to "consuming" task items, instead of simply providing a reminder of
a task, the task is automated so that a user is not required to perform the steps typically
required to perform the task. For example, a user may want to call a particular person at a
particular time. When the particular time equals the current time, instead of simply
reminding the user about the call, the call can be set up, ready to make without the user
having to specify the person's phone number.
[00018]      With respect to organizing task items, task items may be organized automatically
or manually into multiple lists. Each list corresponds to a different attribute of a task item,
such as the type of task, the type of criteria that is used to trigger a notification of a task, and
the location of where the task is to be performed.
                                            TASK ITEMS
[00019]      Again, a "task item" is an electronic data item that contains one or more details
about a task to perform, whether by a user or automatically by a process. A task item is
generated based on input from a user. A task item may be one of two types: tasks associated
with reminders ("reminder task") and tasks not associated with reminders ("non-reminder
task"). A reminder task is associated with an action, such as a notification being generated
and provided to a user, while a non-reminder task is not associated with any action. A non
reminder task may be associated with a "complete-by" date or time. However, the complete
by date or time does not trigger the creation of a notification or other action. In other words,
while a reminder task is associated with one or more triggering criteria that, when satisfied,
trigger an action, a non-reminder task is not. Thus, a "task item" may or may not be
associated with one or more triggering criteria that, when satisfied, triggers an action.
                                      SYSTEM OVERVIEW
[00020]      FIG. 1 is a block diagram that depicts a system 100 that is used for creating task
items and processing task items, according to an embodiment of the invention. System 100
includes a device 110, a network 120, and a cloud 130.
[00021]      Device 110 is any computing device that is capable of receiving input from a user
and displaying information about tasks. Non-limiting examples of device 110 include a

  WO 2012/167168                                                           PCT/US2012/040571
desktop computer and a handheld device, such as a laptop computer, a tablet computer, and a
"smart" phone. In the illustrated embodiment, device 110 includes a task manager 112. Task
manager 112 processes task items, both of the reminder type or of the non-reminder type.
Task manager 112 may be implemented in software, hardware, or any combination of
software and hardware.
[00022]      Device 110 includes communication technology (e.g., wireless technology) for
sharing information with other devices. Device 110 can include a variety of integrated user
interface units or can be coupled to user interface units through one or more communication
ports or data links of the device. Non-limiting examples of user interface units include a
voice input unit (e.g., a microphone), physical input units (e.g., a keyboard, a mouse, a track
ball, a rotary dial or wheel, a touchpad, or a touch-screen), and motion sensors (e.g., an
accelerometer, magnetometer, or a gyroscope). Any of these user interface units can be
implemented as an external unit that communicates with device 110 to provide user input
using a wired or wireless communication technology. Examples of wired communication
technology include Universal Serial Bus (USB) interface, FireWire interface, etc. Examples
of wireless communication technology include Bluetooth, Wi-Fi, and WiMax, infrared.
Through these user interface units, device 110 can receive physical or voice inputs from the
user.
[00023]      Device 110 includes one or more output units to present visual and audio
information to a user. Non-limiting examples of output units include a display unit for
displaying visual data and a speaker for playing audio.
[00024]      Cloud 130 is implemented by one or more computing devices. Cloud 130 hosts
multiple services, such as a NLP (natural language processing) service 132 and one or more
other services 134A-N. NLP service 132 uses one or more models of real-world things that a
user can talk about in order to make sense of what the user is trying to say. For example,
NLP service 132 can determine, based on models and context, what a user may be referring
to when the user uses terms like, "him," "there," or "that." An example of how NLP service
 132 might operate is described in U.S. Patent Application Serial No. 12/987,982, referenced
above.
[00025]      NLP service 132 may employ numerous APIs to communicate with and initiate
actions performed by the one or more other services 134A-N and, optionally, other services
not hosted in cloud 130. For example, in response to voice data sent from device 110, where
the voice data reflects the user command "Reserve two seats at Maribella's in San Jose at
7PM tonight," NLP service 132 makes an API call to an online reservation service provided
by Maribella's restaurant to initiate the creation of two reservations at that restaurant for
7PM. Thus, NLP service 132 allows many operations to be performed automatically without

  WO 2012/167168                                                          PCT/US2012/040571
requiring a user of device 110 to manually input text data and interact with numerous
applications.
[00026]     Communication between device 110 and services hosted in cloud 130 is made
possible via network 120. Network 120 may be implemented by any medium or mechanism
that provides for the exchange of data between various computing devices. Examples of such
a network include, without limitation, a network such as a Local Area Network (LAN), Wide
Area Network (WAN), Ethernet or the Internet, or one or more terrestrial, satellite, or
wireless links. The network may include a combination of networks such as those described.
Without limitation, the network may transmit data according to Transmission Control
Protocol (TCP), User Datagram Protocol (UDP), and/or Internet Protocol (IP).
[00027]     The following description includes numerous examples where both device 110
and cloud 130 take part in generating task items, organizing task items, triggering
notifications of task items, and consuming task items. Instead, one or more of the techniques
described herein may be implemented wholly on device 110 (making network 120 and cloud
 130 unnecessary, wholly in cloud 130, or using some combination of device 110 and cloud
 130.
                                PROCESSING OF TASK ITEMS
[00028]     Task items may be created on device 110 or in cloud 130 based on input received
at device 110. Although not depicted, task items may be stored on device 110 or in cloud
 130, or synchronized to both. If task items are stored in cloud 130, then task manager 112
may retrieve the task items in response to, for example, input from a user or the one or more
triggering criteria associated with one or more task items being satisfied.
[00029]     In the scenario where task items are created and stored in cloud 130, task manager
 112 may be, primarily, a set of one or more user interfaces that display information about
tasks. Thus, a task service (not shown) in cloud 130 would be responsible for maintaining
task items and triggering any notifications when triggering events occur.
[00030]     Alternatively, task manager 112 creates and stores task items on device 110. In
this scenario, task manager 112 may be entirely responsible for maintaining task items and
generating any notifications when triggering events occur. One advantage of this scenario is
that device 110 may be operating in an "offline" mode where device 110 is not capable of
communicating with any service hosted in cloud 130.
[00031]     Further, in this scenario, device 110 may include a service like NLP service 132,
which may be part of task manager 112 or may execute separately from task manager 112.
Such a service acts as a conversational interface to allow a user to quickly and easily create
tasks. Such a service may be implemented by a process that is continually executing in the
background without requiring a user of device 110 to provide input to cause the service to

   WO 2012/167168                                                            PCT/US2012/040571
execute. Thus, whenever device 110 starts up (or restarts), the service is automatically
started.
[00032]      Alternatively, information needed to create task items may be identified by NLP
service 132 (i.e., hosted in cloud 130). Device 110 may include a user input interface that
continuously executes in the background, identifies input (e.g., voice or text) from a user, and
sends the input over network 120 to NLP service 132. Once NLP service 132 identifies task
details in the input, NLP service 132 may send task information (e.g., a description of a task
and a time to complete the task) (a) over network 120 to task manager 112, which creates and
stores a task item based on the information or (b) to a task service in cloud 130 to create a
task item based on the information.
[00033]      Most of the examples provided herein involve NLP service 132 receiving input
data from device 110, identifying details (about a task) reflected in the input data, and
providing those details to task manager 112. However, embodiments of the invention are not
limited to this scenario. Such examples may alternatively involve only device 110 or may
involve device 110 as merely an input and display device where NLP service 132 and a task
service in cloud 130 provide the primary functionality.
I.       GENERATING TASK ITEMS BASED ON CONTEXT
[00034]      According to an embodiment of the invention, a task item is generated based on
input and context of the input. "Context" of input refers to data that is currently or recently
(relative to input, from a user, that initiated the generation of a task item) displayed or
processed at device 110. Thus, context data is not reflected in the input from the user. For
example, a user of device 110 may provide the following voice input: "Send him an email
about the project when I get home." The pronoun "him" is ambiguous because it is not clear,
from the input alone, to whom "him" refers. However, the context of the voice input may be
that device 110 currently displays (or just recently displayed) an email from an individual
named Jack Bauer where the email includes a request for a status update about a project
named "Bunny." Based on the voice input and the context, task manager 112 (or a task
service in cloud 130) creates a task item that includes the description "Send Jack Bauer an
email about Project Bunny" and that includes the triggering criterion of device 110 being at a
geographical location that is at or near the user's home. When device 110 is at or near the
user's home, task manager 112 causes a notification to be displayed on device 110 where the
notification includes the description from the task item.
[00035]      FIG. 2 is a flow diagram that depicts a process 200 for generating a task item
based on context of user input, according to an embodiment of the invention. At step 210,
input that expressly specifies one or more first attributes for a task is received from a user.
                                                  _r.

  WO 2012/167168                                                            PCT/US2012/040571
The input may be text input or voice input. The text input may be from a user of device 110
pressing physical keys on device 110 or pressing a touch screen of device 110 that includes a
graphical keyboard. Additionally or alternatively, device 110 includes a microphone that
accepts, from a user, voice input that device 110 converts into voice data. Device 110 may
send the input data (whether voice data or text data) to NLP service 132, which analyzes the
input data to identify the one or more first attributes for the task. Instead, as noted
previously, device 110 may include functionality to analyze the input data to identify the one
or more first attributes for the task. (Although many of the examples herein refer to natural
language processing, natural language processing is not required.)
[00036]      At step 220, a task item is generated for the task based on the input data. At step
230, one or more second attributes for the task are determined based on context data that is
separate from the input. Although step 230 is depicted as occurring after step 220, step 230
may occur before step 220.
[00037]      At step 240, the one or more first attributes and the one or more second attributes
are stored in association with the task item.
[00038]      The steps of process 200 may be performed by one or multiple devices. For
example, the input in step 210 may be processed at device 110 to generate the task item. In
this scenario, task manager 112 (or another process executing on device 110) identifies the
context data associated with the input to determine the one or more second attributes, for the
task, that are not identified in the input. Task manager 112 then stores the one or more
second attributes in or in association with the task item.
[00039]      Alternatively, in another scenario, device 110 sends the user input over network
 120 to NLP service 132. NLP service 132 accepts, as input, context data associated with the
input to determine the one or more second attributes, for the task, that are not identified in the
input. Context data may have been sent to NLP service 132 prior to the input that initiates
the generation of the task item (in step 220). NLP service 132 sends the one or more second
attributes to task manager 112 (or a task service in cloud 130). Task manager 112 stores the
one or more second attributes in or in association with a newly-generated task item.
[00040]      Certain words or phrases may be used to cue NLP service 132 to communicate
with manager 112. For example, user commands that begin with "Remind me..." and "I
need to..." are used by NLP service 132 to determine to communicate with task manager
 112. In response to detecting one of those user commands, NLP service 132 analyzes the
input data (from device 110) and, optionally, context data for certain types of task details,
such as a location, time, description, and/or action. NLP service 132 then determines to
communicate with task manager 112 and sends, to task manager 112, the task details as part
of the communication(s).

  WO 2012/167168                                                           PCT/US2012/040571
                               SOURCES OF CONTEXT DATA
[00041]      Context data associated with user input that initiates the generation of a task item
may come from one of many sources. Non-limiting examples of context data include data
that is or was displayed on device 110 ("display data"), data that is stored on or in association
with device 110 ("personalized data"), data that is or was processed by device 110 ("process
data"), data that was previously provided by a user of device 110 ("input data"), data that
indicates the location of device 110 ("location data").
[00042]      The following is an example of display data, or data that is or was displayed on
device 110. Device 110 displays a map that includes a marker associated with a specific
location on the map. A user of device 110 then says, while the map is displayed or soon after
the map was displayed, "I need to be there by 5 today." NLP service 132 (or a voice analyzer
on device 110) analyzes voice data that reflects the voice input. NLP service 132 analyzes
data that is currently displayed on device 110 to determine what "there" refers to. NLP
service 132 identifies the marker and the associated location and replaces "there" with the
location. NLP service 132 sends, to task manager 112, task data that indicates 5PM today as
the completion time of the task and the specified location as the location of the task. Task
manager 112 generates a task item based on the task data.
[00043]      As another example of display data, device 110 displays an email that is from a
particular sender and includes a subject line. A user of device 110 then says, "I need to email
him about that subject in two hours." Device 110 sends voice data that reflects this input and
an image of what is displayed to NLP service 132. In response, NLP service 132 identifies
the email address of the sender of the email and the subject of the email. NLP service 132
sends, to task manager 112, task data that indicates a time of two hours from the current time
as the completion time of the task and
[00044]      The following is an example of personalized data, or data that is stored on or in
association with device 110. A user of device 110 says, "I will have lunch with Rachelle
tomorrow at 12 noon." Device 110 sends voice data that reflects this input to NLP service
 132, which identifies "Rachelle" in the voice data. NLP service 132 looks up "Rachelle" in
contact data or an "address book" (stored on device 110 or in cloud 130) and determines that
the last name of Rachelle is Goodwin. NLP service 132 then causes "Rachelle Goodwin" to
be associated with a task item that is generated for the task. In addition to or instead of being
stored on device 110, personalized data may be stored in cloud 130, i.e., remote to device
 110.
[00045]      The following is an example of process data, or data that was recently processed
by device 110. For example, a user of device 110 used device 110 as a phone to
communicate with a friend. Device 110 keeps track of who the user recently spoke with.

  WO 2012/167168                                                           PCT/US2012/040571
After ending the call, the user says, "Remind me to call her back in 30 minutes." NLP
service 132, in addition to analyzing the voice input, analyzes data that indicates who recently
established a phone call with device 110 (e.g., the last five phone calls). NLP service 132
determines the phone number of the most recently established phone call with device 110.
NLP service 132 then determines, based on contact data, that the phone number is associated
with particular individual. NLP service 132 sends, to task manager 112, task data that
indicates a task of calling, a time of 30 minutes from the current time as the completion time
of the task, the name of the particular individual, and, optionally, the phone number of the
particular individual. Task manager 112 generates a task item based on the task item.
[00046]     The following is an example of input data, or data that was recently (e.g., the last
5 minutes) provided by a user of device 110. The input from the user may be text input or
voice input. Device 110 or NLP service 132 keeps track of recently entered input and may
use that input to determine the identity of certain terms reflected in current input. For
example, a user of device 110 says, "Remind me to meet him there at 7 tonight." NLP
service 132 receives voice data that reflects that voice input and identifies the terms "him"
and "there." Although it is not clear who "him" is and where "there" is, NLP service 132
accesses input that was recently received from the user. Such recently-received input reflects
the names "George Reed" (identified as a name of a person) and "Starbucks" (identified as a
place). In response, NLP service 132 causes a task item to be generated where the task is to
"Meet George Reed at Starbucks" where the time is 7PM of the current day.
[00047]     The following is example of location data, or data that indicates a location of
device 110, whether current or past. A user of device 110 says, "Remind me to meet Julian
here next Thursday for lunch." Device 110 sends voice data that reflects this input to NLP
service 132. NLP service 132 identifies the term "here" and, in response, determines where
device 110 is currently located. The current location may be determined in numerous ways.
For example, device 110 may provide, to NLP service 132, a geographical location, such as
longitude and latitude coordinates. NLP service 132 may then determine, based on the
coordinates, a name of the place or establishment that is located at those coordinates. NLP
service 132 causes a name of the place or establishment to be associated with a task item for
the task to meet Julian for lunch on the date indicated.
[00048]     Alternatively, the user may say, "I need to meet Josh Peters tomorrow at the same
place where I was last Thursday at noon." Device 110 sends voice data that reflects this input
to NLP service 132. NLP service identifies the phrase "at the same place where I was last
Thursday at noon" and, in response, determines where device 110 was located last Thursday
at noon. NLP service 132 accesses location history data (stored in cloud 130 or stored on
device 110 and sent to NLP service 132) and determines where device 110 was located last
                                                _a_

  WO 2012/167168                                                            PCT/US2012/040571
Thursday at noon. The location history may indicate the name of a place or may consist of
geographical coordinates. If geographical coordinates, then NLP service 132 determines a
name of the place or establishment that is located at those coordinates. NLP service 132
causes that name to be associated with a task item for the task to meet Josh Peters on the date
indicated.
[00049]     Events that occur with respect to device 110 may also be used to create task items.
Such events may fall into one or more categories (or types) of context data described above,
such as display data, presentation data, and process data. For example, device 110 detects an
incoming call and notifies the user of the call by causing a phone number or other identifying
information about the call or caller to be displayed on a screen of device 110. In addition to
this information, the display may include three selectable options: "Answer", "Ignore", and
"Call Back Later." If the user selects "Call Back Later", then a task item is created where the
task item identifies the caller and, optionally, a time of the call and/or a time to make a call to
the caller. Also, the task item may be automatically categorized as a task of type "To Call."
[00050]     Many of the examples herein regarding generating task items include a user
providing voice or text input that includes details about a task. Another non-limiting example
of how a task item may be generated is a user selecting (or highlighting) text that is displayed
on a screen of device 110. The selected text is considered context data. After the text is
selected, the user may be presented with one or more options, one of which is a "Remind"
option which, when selected, causes a task item to be generated. Task manager 112 generates
the task item based on the information reflected in the selected text. Details of the task item
may be also determined from other context data, such as a time or event to trigger a
notification of the task.
                                     VIRTUAL DIALOGUE
[00051]     In some situations, NLP service 132 is unable to determine one or more details
about a task based on input received from device 110 and the context associated with the
input. Thus, in an embodiment, NLP service 132 prompts a user of device 110 for further
input to determine the one or more details. The one or more details may pertain to any
attribute of a task item, such as the description of the task, the location of the task, the
location of a reminder (if any), or the time of the task.
[00052]     For example, NLP service 132 receives, from device 110, voice data that reflects a
user's command to "Remind me to call Steve at 7." NLP service 132 may have access to
information (e.g., an address book) about numerous contacts, of the user, that have the name
of Steve. Further, nothing in the address book can be used to disambiguate which of the
Steve contacts to call. Therefore, NLP service 132 sends, to device 110, the following
                                                -1 ()_

  WO 2012/167168                                                          PCT/US2012/040571
message to be displayed (or played audibly) by device 110: "Do you mean Steve Anderson,
Steve Hanson, or Steve Jobs?" The user then provides, to device 110, voice or text input that
indicates one of the three Steve contacts. In response, device 110 sends the corresponding
voice or text data over network 120 to NLP service 132.
[00053]     As another example, NLP service 132 receives, from device 110, voice data that
reflects a user's command to "I need to pick up bread at Whole Foods." In response, NLP
service 132 performs a lookup of the nearest Whole Foods stores to (a) the current location of
device 110 or (b) the user's home. There may be multiple Whole Foods stores that are near
device 110's current location and near the user's home. Therefore, NLP service 132 sends, to
device 110, the following message to be displayed by device 110: "Which Whole Food's?
The one on Almaden Rd, Chester Expressway, or Green Street?" The user then provides, to
device 110, voice or text input that indicates one of the three Whole Foods stores. In
response, device 110 sends the corresponding voice or text data over network 120 to NLP
service 132.
[00054]     As another example, NLP service 132 receives, from device 110, voice data that
reflects a user's command to "Remind me to text Jerry by 8." In response, NLP service 132
determines, based on the voice data and the context of the input that Jerry is Jerry Wall,
indicated in the user's contact list (or address book). However, it is unclear whether the user
intended 8AM or 8PM as the time to send an SMS message to Jerry. Therefore, NLP service
 132 sends, to device 110, the following message to be displayed by device 110: "Do you
want to text Jerry Wall at 8AM or 8PM?" The user then provides, to device 110, voice or
text input that selects one of the two times. In response, device 110 sends the corresponding
voice or text data over network 120 to NLP service 132.
                         AUTOCATEGORIZATION OF TASK ITEMS
[00055]     In an embodiment, NLP service 132 determines, based on input from a user of
device 110, one or more categories to associate with a task item. The one or more categories
may be one of many different categories, which may be virtually limitless. Non-limiting
examples of categories with which a task item may be associated include things to purchase,
things to do on vacation, things to do at work, and things to do while driving. Each category
may be associated with a sub-category. For example, a "purchase category" may be divided
into a grocery category indicating items to purchase at a grocery store, a book category
indicating books to purchase, and a music category indicating songs to purchase.
[00056]     For example, a user may provide the following voice input to device 110:
"Remind me to get milk." Device 110 sends voice data that reflects that input to NLP service
 132. NLP service 132 determines that a task item should be created and that "get milk"
                                                _1 1_

  WO 2012/167168                                                             PCT/US2012/040571
should be the description associated with the task item. NLP service 132 may also determine
that milk is a grocery item and that the task item should be associated with a grocery category
and/or a purchase category. Thus, NLP service 132 may send, to task manager 112, category
data that indicates one or more categories with which the task item (whether created by NLP
service 132, by a task service in cloud 130, or by task manager 112) should be associated.
[00057]      As will be described hereinafter, the one or more categories associated with each
task item may be used to organize task items that belong to the same category and display, on
device 110, task items of the same category. This will allow a user of device 110 to view
task items by category, in addition to or instead of by completion time, by creation time, by
trigger type (described hereinafter), by location, by type (e.g., reminder task v. non-reminder
task), or by some other criterion.
II.      TRIGGERING NOTIFICATIONS OF TASK ITEMS
[00058]      As noted previously, a task item may be associated with one or more triggering
criteria (or triggers) that, when satisfied, causes a notification to be presented to a user of
device 110 or some other action to be performed. When one or more triggering criteria of a
task item are satisfied, a notification (or other action) is "triggered." Non-limiting examples
of triggering criteria include time, location, relative travel time, context triggers, and
exogenous triggers, each of which is described in more detail below.
                                          TIME TRIGGER
[00059]      The time of a time trigger may be an absolute time, a relative time, a recurring
time, or a symbolic deadline. An example of an absolute time is June 6, 2011, 9AM Pacific
Time. An example of a relative time is "10 minutes before the Patriots-Jets football game."
An example of a recurring time is "Every Thursday at 10AM." An example of a symbolic
deadline is "end of business day".
                                      LOCATION TRIGGER
[00060]      According to an embodiment of the invention, the location of device 110 is a
triggering criterion associated with a task item. Such a triggering criterion is referred to
herein as a "location trigger." The location of device 110 may be determined in one of many
ways. For example, the location of device 110 may be automatically determined based on
Wi-Fi positioning, cell positioning, and/or GPS (global positioning system) positioning.
Device 110 may determine its current location with or without input from a service in cloud
 130.
                                                 _1 9_

  WO 2012/167168                                                          PCT/US2012/040571
[00061]     In an embodiment, a user may provide input that indicates a label to be associated
with a certain geographical location. For example, a user of device 110 may speak the
following sentence, "I am home" or "I am at Whole Foods." NLP service 132 may then
associate the word "home" or phrase "Whole Foods" with the current location of device 110,
as determined based on one of the three positioning methods mentioned previously. This
association of a word with a location may be later leveraged to determine where "home" or
"Whole Foods" is located.
[00062]     A location trigger may not be associated with a specific geographic location or
area. Instead, a location trigger may be associated with a place that is not limited to a specific
geographic location or area. For example, a location trigger of a task item may be "on the
road" or "while driving." Device 110 (or a process executing on device 110) determines that
the current location of device 110 is on a freeway or another busy road. Thus, this
determination can be made regardless of the speed at which device 110 is moving or whether
device 110 is paired with another device that would indicate that the user is traveling. Based
on this determination, task manager 112 analyzes one or more task items to determine
whether any task items are associated with the "on the road" or "while driving" location
trigger.
[00063]     As another example, a location trigger of a task item may be the user's car.
Specifically, the user may have provided the following voice command: "Remind me to call
my mom while driving." NLP service 132 analyzes voice data that reflects that command
and determines that "while driving" refers to the user's car. The user's car may have a
Bluetooth-enabled component to allow device 110 to communicate with the user's car. When
device 110 comes into range of a Bluetooth signal propagated by a Bluetooth-enabled
component in the user's car, device 110 determines that device 110 is located in (or at least
near) the user's car. In response to this determination, task manager 112 triggers the location
trigger of the task item. Task manager 112 causes a reminder message to be displayed on
device 110, where the reminder message informs the user to call his mother. The user may
then provide a single tap or a voice response that causes a phone application executing on
device 110 to initiate a call to a phone number associated with the user's mom.
[00064]     While establishing a connection (or "pairing") with another Bluetooth-enabled
device is one example of pairing that can be used to determine device 110's location, other
types of pairings are possible. For example, device 110 may detect certain network data
during the evening and morning hours. The network data indicates one or more networks to
which device 110 may connect. The network data may include the names of one or more
networks or MAC addresses of one or more routers. Device 110 may then determine that
whenever that network data is detected, device 110 is considered to be at the user's home.
                                                1 1-

  WO 2012/167168                                                           PCT/US2012/040571
Thus, actual pairing is not required since pairing entails the establishment of a connection
between device 110 and another device, such as a router. As another example, device 110
may detect a Wi-Fi signal on a train, subway, or bus. The Wi-Fi signal might indicate the
type of transportation that corresponds to the Wi-Fi signal. Thus, device 110 might detect,
based on the Wi-Fi signal, that its location is "on a train," "in a subway," or "on a bus." If a
triggering criterion of a task item indicates one or more of these locations, then an action
associated with the task item may be triggered. Further, such "transit-oriented" locations
may also be considered to be associated with specific contexts (described in more detail
below), such as "in transit" or "while traveling." Thus, detection by task manager 112 of
such contexts may cause actions associated with certain task items to be performed.
[00065]     The foregoing examples of location triggers can be categorized as "arrival
triggers," such as are found in user input to "Remind me to do X when I arrive at Y."
Another type of location trigger is a "departure trigger," an example of which is found in the
user command to "Remind me to do X when I leave work" or "...when I leave here." In an
embodiment, in the departure trigger scenario, a minimum distance from the current location
and the location of the departure is required before a particular departure trigger "fires."
Such a minimum distance may be helpful to avoid the performance of corresponding actions
when there are false starts.
[00066]     Additionally, a location trigger may be one of multiple conditions that trigger an
action of a task item. Examples of user commands that include multiple conditions include
"Remind me to do X when I get home or at 8PM at the latest," "Remind me to do X before
8PM or when I leave, whichever is first," and "Remind me to do X before 8PM or while I am
driving, whichever is first."
                                   TRAVEL TIME TRIGGER
[00067]     In an embodiment, the location of device 110 and a time associated with a task
item is used to provide a notification to a user of device 110. Thus, while the time may be
one of the one or more triggering criteria associated with the task item, the location of device
 110 may not be, at least explicitly so.
[00068]     FIG. 3 is a flow diagram that depicts a process 300 for determining a time to
provide a reminder to a user ahead of a scheduled time for a task, according to an
embodiment of the invention. Process 300 may be performed by one or more processes
executing on device 110 or in cloud 130. However, for ease of explanation, all the steps in
process 300 are performed by task manager 112.
[00069]     At step 310, task manager 112 determines a current location of device 110. At
step 320, task manager 112 determines a location of a destination (or "destination location")
associated with (or identify by) a task item. At step 320, based on the distance between the
                                               _1 A_

  WO 2012/167168                                                             PCT/US2012/040571
two locations, task manager 112 determines a "travel time," or the time it might take for the
user of device 110 to travel to the destination location. At step 330, task manager 112
determines a "difference time," or the difference between the current time and the time
triggering criterion associated with the task item. At step 340, if the travel time is the same as
or near the difference time, then task manager 112 provides a notification to the user. This
notification acts as a reminder for the user to begin (if s/he has not already done so) traveling
to the destination.
[00070]      For example, a task item may be for a reminder to meet Sue at a particular
restaurant at 2PM. Task manager 112 determines the location of device 110 and the location
of the particular restaurant. The location of the particular restaurant may be determined by
initiating, e.g., an Internet search and identifying the closest restaurant, with the same name,
to device 110's location. Alternatively, an address of the particular restaurant may already be
stored in association with the task item. Based on the distance between device 110's location
and the particular restaurant, task manager 112 determines how long it will take for the user
of device 110 to travel to the particular restaurant (or "travel time"). When the travel time is
the same as or near (e.g., within 10 minutes) the difference between the current time and the
time trigger (i.e., 2PM), then task manager 112 causes, to be displayed on device 110, a
message that indicates that the user should leave soon to arrive at the particular restaurant at
2PM.
[00071]      In an embodiment, the time of when to leave for a destination changes based on
the current location of device 110. For example, when the current location of device 110 is at
location A and the destination is at location B, task manager 112 determines that the user
should begin traveling 50 minutes before the time of a scheduled task. However, in response
to detecting that the current location of device 110 is now at location C, task manager 112
determines that the user should begin traveling 20 minutes before the time of the scheduled
task. For example, a user of device 110 may be at home at the beginning of the day and task
manager 112 determines that it will take 50 minutes to travel, from the user's home, to the
location of a dinner event in the evening. Later in the day, the user of device 110 travels to
work, which is closer to the location of the dinner event. In response to device 110 being at a
different location, task manager 112 determines that it will take 20 minutes to travel, from the
user's work, to the location of the dinner event.
[00072]      In an embodiment, the time of when to leave for a destination changes based on
current traffic information. For example, at 2:30PM, task manager 112 determines that the
time of when a user of device 110 should leave for a restaurant is 5:00PM. However, due to
a car accident on a freeway that the user can take to arrive at the restaurant, the traffic slows
                                                 -1 r%-

  WO 2012/167168                                                           PCT/US2012/040571
considerably. Task manager 112 determines, at 3:30PM, that the time of when the user
should leave for the restaurant is 4:00PM.
[00073]     FIG. 4 is a view 400 of a travel reminder, according to an embodiment of the
invention. View 400 is displayed by device 110. The travel reminder of view 400 contains
six data items. The six data items include: (1) a description 410 of the corresponding task
("pick up Chloe"); (2) a time 420 of when to complete the task ("5:00PM Today"); (3) an
action 430 to perform when the user of device 110 should begin traveling to the destination;
(4) a reminder time 440 that indicates that the user would like to be reminded of when the
user should begin traveling to arrive at the destination on time; (5) a start time 450 that
indicates when the user should begin traveling to arrive at the destination on time; and (6) a
location 460 that indicates a name of the destination and an address of the destination.
Another travel reminder that device 110 displays may contain more or less data items.
[00074]     The action associated with action 430 may be triggered (or performed) in response
to task manager 112 determining that the current time (indicated at the top of travel reminder)
equals the time indicated by start time 450. In the illustrated example, action 430 is a map
related action where task manager 112 causes a map to be generated at start time 450 and
displayed to the user of device 110. The map includes an indication of the address of location
460, an indication of the user's current location, or both. Instead of automatically causing the
map to be displayed at start time 450, task manager 112 might first cause a message to be
displayed on device 110, wherein the message includes an option to generate the map. If the
user selects the option (e.g., through voice input or tapping on the screen), then task manager
 112 causes the map to be generated and displayed.
[00075]     A reminder setting may be in an "on" or "off" mode. In FIG. 4, reminder time
440 is in an "on" mode. If reminder time 440 is in an "off' mode, then the travel reminder of
view 400 might not include reminder time 440 or start time 450.
[00076]     As indicated previously, task manager 112 might change start time 450 in
response to changes in device 110's location. Thus, while start time 450 may indicate "3:30
PM Today" when device 110 is located at the user's home in the morning, start time 450 may
indicate "4:20 PM Today" when device 110 is located at the user's work office in the
afternoon.
[00077]     In an embodiment, task manager 112 checks for changes in computed start time
450 in response to significant changes in device 110's location. Significant changes in
location may be determined as a result of other events that are already being computed. For
example, device 110 might already process events when it transitions between cell towers,
and these events could trigger the re-computation of a change in location and, therefore, in an
updated start time 450. Other non-limiting examples of events that indicate a potential
                                                _1 A_

  WO 2012/167168                                                             PCT/US2012/040571
significant change in location are changes in Wi-Fi signatures detected, the computation of
accurate GPS locations for some other application (such as maps or navigation), a power
cycle event, turning on or off radios on the device, alerts based on accelerometer signals, and
the receipt of text messages or push notifications that contain location information.
[00078]     In an embodiment, task manager 112 combines strategies for detecting significant
event changes. For example, in a low power/low resolution mode, task manager 112 only
checks for significant location changes every N minutes or only when some periodic
computation occurs, such as checking for incoming data. In a high power/high resolution
mode, task manager 112 uses cell tower positioning and/or GPS. A combined strategy might
run the low power solution by default and then invoke the high power solution when the
estimated start time is soon or when other events occur (for example, a change in Wi-Fi or
Bluetooth signatures is detected).
[00079]     In an embodiment, a travel reminder or start time item in a travel reminder may be
associated with one or more modes of transportation. Non-limiting examples of modes of
transportation include driving a car, riding a bus, bicycling, and walking. A default
transportation mode may be driving a car. For example, task manager 112 may provide the
option for a user to view start time 450 in a "car" mode, a "bus" mode, a "bike" mode, a
"walking" mode, or multiple modes simultaneously. Depending on the current mode(s)
selected for start time 450, the start time may vary widely. For example, in FIG. 4, while
start time 450 indicates "4:20 PM Today" for a car mode, start time 450 may indicate "3:15
PM Today" for a bus mode, "3:45 PM Today" for a biking mode, and "11:30 AM Today" for
a walking mode.
[00080]     In a related embodiment, a task item is associated with both a location and a
date/time and a notification of the task may be triggered by either the user (or, rather, the
user's device) being at the location or by the date/time. For example, if the user's device is at
the location, (either on the date or regardless of the date), then a notification is triggered. If
the user has not arrived at the location on the day indicated by the date (or at the location by
the time), then the time is used as a "last resort" for triggering a notification.
                                     CONTEXT TRIGGERS
[00081]     As described previously, time and location are examples of types of triggering
criteria associated with a task item. Another type of triggering criteria associated with a task
item is context. A "context trigger" refers to one or more characteristics of device 110 other
than simply the device 110's location. Thus, like context triggers, travel triggers and travel
time triggers also refer to one or more characteristics of device 110.
[00082]     Context triggers may be categorized into one of two types: data-oriented context
triggers and spatial-oriented context triggers. Non-limiting examples of data-oriented context
                                                _17_

  WO 2012/167168                                                           PCT/US2012/040571
triggers include the kind or type of data that device 110 is displaying on its screen (e.g.,
video), the specific application(s) or type of application(s) that are currently executing on
device 110 (e.g., a texting application or a music application), the type of input device 110 is
receiving from a user (e.g., voice or data), and the type of network connections available to
device 110 (e.g., Wi-Fi or cellular network).
[00083]     For example, a user command that device 110 receives may be "Remind me to
call my mom next time I am on the phone." The phrase "on the phone" is presumed to mean
that when the user is using device 110 as a phone, a reminder will be sent to the user to
inform the user to call his/her mom.
[00084]     As another example, a user command that device 110 receives may be "I need to
email Bob when I am surfing the Internet." The phrase "surfing the Internet" is presumed to
mean that when the user is interacting with a web browser on device 110, the context of
device 110 (or of the user) is "when online." In response to determining the context of the
device or of the user, a reminder will be sent to the user to inform the user to email Bob.
Additionally another reminder may be provided to the user for any other task items that are
associated with the "when online" context trigger.
[00085]     As another example, a user command that device 110 receives may be "Text Mom
when I am talking to my sister Sarah." The phrase "when I am talking to my sister Sarah" is
presumed to mean that when the user is using device 110 as a phone and a phone call is
established with Sarah, a reminder will be sent to the user to remind the user to send a text (or
SMS) message to the user's mother.
[00086]     As another example, a user command that device 110 receives may be "Remind
me to email Jane Smith when I have a Wi-Fi connection." In response to device 110
detecting a Wi-Fi signal that does not require a password or that requires a password
accessible to device 110, task manager 112 causes a notification to be displayed on a screen
of device 110, where the notification indicates that Jane is to email Jane Smith.
[00087]     Non-limiting examples of spatial-oriented context triggers include the speed at
which device 110 is moving (e.g., over 30 mph indicating driving, or less than 3 mph
indicating walking), a direction (absolute or relative) at which device 110 is moving, and a
set of movements of device 110 (e.g., short vertical movements while moving continuously in
a horizontal direction). In other words, device 110 may be configured to detect how device
 110 is moving through space.
[00088]     For example, device 110 (or rather a process executing on device 110) determines,
based on detecting changes in its location over a period of time, that device 110 is moving at
60 mph. Based on this information, device 110 determines that the device's context is "while
driving" or "on the road." Task manager 112 analyzes one or more task items to determine
                                                _1 5-

   WO 2012/167168                                                            PCT/US2012/040571
whether any task items are associated with a "while driving" or "on the road" context trigger.
If a task item is associated with a "while driving" or "on the road" context trigger, then an
 action (e.g., displaying a notification) associated with the task item is performed.
 [00089]      As another example, device 110 determines, based on detecting changes in its
 location over a period of time, that device 110 is moving towards his home over a certain
period of time (e.g., 5 minutes). Based on this information, device 110 determines that the
 context is "on my way home." Task manager 112 analyzes one or more task items to
 determine whether any task items are associated with a "on my way home" context trigger. If
 a task item is associated with a "on my way home" context trigger, then an action (e.g.,
 displaying a notification) associated with the task item is performed.
 [00090]      As another example, device 110 includes an accelerator that detects certain
repetitive movements. Device 110 may determine, based on these repetitive movements over
 a period of time, that the user of device 110 might be running at a slow pace. Based on this
 determination, device 110 determines that the context is "while jogging." Task manager 112
 analyzes one or more task items to determine whether any task items are associated with a
 "while jogging" or "while walking" context trigger. If a task item is associated with a "while
jogging" or "while walking" context trigger, then an action (e.g., displaying a notification)
 associated with the task item is performed.
 [00091]      As another example, device 110 might detect that it has not moved for a period of
time (e.g., 3 hours). A user of device 110 might be interested in being alert and non
movement of device 110 might indicate that the user is asleep. Thus, the user might issue the
 command, "Alert me if the phone doesn't move for 3 hours."
 [00092]      In addition to data-oriented and spatial-oriented triggers, other kinds of triggers
may be based on any sensor on device 110. Device 110 may include multiple sensors, such
 as temperature sensors and light sensors. For example, device 110 might include a
thermometer for detecting the outside temperature or an internal temperature of device 110.
Thus, a user of device 110 might issue the command, "Remind me to call Harold when it
reaches 100 degrees."
                                     EXOGENOUS TRIGGERS
 [00093]      Another type of triggering criteria that may be associated with a task item is
 exogenous criteria. An "exogenous trigger" is a triggering criterion that depends on one or
more factors that exist outside and separate from device 110 and the user of device 110. Such
 factors may be considered "events" that occur with respect to devices other than device 110
or with respect to data that is stored on one or more devices other than device 110. Non
 limiting examples of exogenous triggers include social location, social proximity, standing
 queries, and local events.
                                                 _1 O_

  WO 2012/167168                                                            PCT/US2012/040571
[00094]      An example of a social location trigger is when a friend or associate of the user of
device 110 arrives or leaves a certain location. For example, a user command that initiated
the creation of a task item may have been "Notify me if Sarah leaves the mall." Thus, the
location of Sarah (or Sarah's mobile device) is an essential factor in setting off this type of
exogenous trigger. Specifically, task manager 112 determines the current location of Sarah's
device. The current location of Sarah's device may be provided by a cloud service (e.g., in
cloud 130) to which both Sarah's device and device 110 are subscribed. Device 110 receives,
from the cloud service, updates as to the location of Sarah's device. Task manager 112 uses
that location information to determine whether the social location trigger should be activated.
A similar user command is "Remind me when my daughter gets home."
[00095]      An example of a social proximity trigger is when a friend or associate of the user
of device 110 is within a certain distance of the user (or device 110). For example, a user
command that initiated the creation of a task item may have been "Remind me to call George
when he is within 100 feet of me." Thus, the location of George (or George's mobile device)
is an essential factor in setting off this exogenous trigger. Specifically, task manager 112 or
another process executing on device 110 compares the current location of device 110 with the
current location of George's device to determine the distance that separates the two devices.
Alternatively, George's device may transmit its location to a cloud service to which both
George's device and device 110 are subscribed. Device 110 receives, from the cloud service,
updates as to a distance between George's device and device 110. Task manager 112 uses
that distance information to determine whether the social proximity trigger should be
activated.
[00096]      An example of a standing query trigger is when a webpage mentions a particular
term or phrase, such as a company name. To detect this, a standing query is generated and
issued continuously (e.g., once a day). For example, a user command that initiated the
creation of a task item may have been "Tell me when cnn.com mentions Berkman
Industries." Task manager 112 or another process executing on device 110 issues a search
query (e.g., to a search engine) and receives results. When task manager 112 determines that
the results include a webpage from cnn.com that includes the name "Berkman Industries,"
task manager 112 provides a notification to the user of device 110.
[0100]       An example of a local event trigger is when a certain local event occurs. To
detect this, task manager 112 receives data from an online service. Task manager 112 (or a
task service in cloud 130) may periodically send a request to the online service (via one or
more communication protocols). Alternatively, task manager 112 may subscribe with the
online service to receive information about certain events. For example, a user command that
initiated the creation of a task item may have been "Tell me when Beatles tickets go on sale
                                                 -I9n-

  WO 2012/167168                                                           PCT/US2012/040571
at Shoreline." In response, task manager 112, another process executing on device 110, or
NLP service 132 sends a subscription request to an online ticket service to receive a
notification when Beatles tickets for a performance at Shoreline Amphitheatre become
available for purchase. When task manager 112 is determines Beatles tickets are available
for purchase, task manager 112 provides a notification to the user of device 110.
[0101]      As another example, a user might be interested in knowing when the surf is up.
Thus, the user might issue the command, "Remind me an hour before the surf is up." Task
service 112 (or a task service in cloud 130) might regularly issue a query of a surfing site or
might subscribe for alerts from the surfing site.
[0102]      Based on the foregoing, the types and examples of exogenous triggers are
virtually endless. As long as task manager 112 (or a task service in cloud 130) can make a
determination about an event that occurs separate from device 110, that event can be used to
trigger the performance of an action associated with a task item.
III.     CONSUMING TASK ITEMS (ACTIVE PAYLOADS)
[0103]      A task item is "consumed" when an action associated with the task item is
performed. Such an action may be a notification that is displayed (or played, if the
notification is an audio notification) on device 110. In addition to or instead of providing a
notification to a user of device 110, other possible actions include initiating a phone call or a
search query, sending an HTTP request (that includes a Uniform Resource Location (URL)),
sending an email or a text (SMS) message, causing an application to execute, and causing a
purchase to be made on the user's behalf. Such actions that can be associated with task items
are referred to as "active payloads." The processing of an active payload causes some action
to be performed, whether by task manager 112 or by another process, whether local or remote
to device 110. In other words, instead of simply notifying the user of a task associated with a
task item, task manager 112 (or a service in cloud 130) can automate the action part of the
task item.
[0104]      As alluded to above, causing an action to be performed may involve task manager
 112 causing another application or process to perform the action. The calling or invoking of
the other application (e.g., via an API of the other application) may be performed with or
without further input, as indicated in the following examples.
[0105]      The types of "other" applications can vary greatly. Non-limiting examples of
applications that might be available on device 110 include a phone application, an email
application, a Web browser, a music player application, a media player application, a music
download application, an image processing application, a geopositioning application, a
contacts application, an SMS application, a video game application, and a text processing
application.

  WO 2012/167168                                                             PCT/US2012/040571
[0106]       For example, a user of device 110 says aloud, "Remind me to call her back this
afternoon." This voice input is converted into voice data that device 110 sends (along with
context data) over network 120 to NLP service 132. NLP service 132 analyzes the voice data
and the context data to determine that "her" refers to Marilyn Merlot. NLP service 132
determines that "afternoon" is 2PM (whether based on context data, a pre-defined setting, or
prior history) and determines a phone number for Marilyn Merlot based on a contacts list (or
address book), associated with the user, that includes one or more phone numbers for Marilyn
Merlot. The contacts list may be stored on device 110 or in cloud 130. NLP 132 sends, to
task manager 112 (or to a task service in cloud 130), reminder data used to generate a task
item. The reminder data includes the date of "Today", time of 2PM, and an instruction to call
Marilyn Merlot using a particular phone number. When task manager 112 determines that
the current time is 2PM, task manager 112 may cause a message to be displayed that prompts
the user to call Marilyn Merlot. The message may include a "Later" button and a "Call Now"
button. If the user selects the "Later" button, then task manager 112 will send the message
again later in the afternoon (e.g., in 1 hour). If the user selects the "Call Now" button, then
task manager 112 initiates a call to Marilyn Merlot. This initiation may involve task manager
 112 making an API call to a phone application (not shown) executing on device 110 and
passing the phone number as an argument of the API call. The phone application then uses
the phone number to call a device associated with the phone number.
[0107]       As another example, a user of device 110 says aloud, "Text Lindsay that I love her
at 5 o'clock." This voice input is converted into voice data that device 110 sends over
network 120 to NLP service 132. NLP service 132 analyzes the voice data to determine that
a cell phone number of Lindsay is necessary and that "5 o'clock" refers to 5PM of the current
day. Task manager 112 (or a task service in cloud 130) creates a task item that includes the
following data items: (1) a completion time of 5 PM today, (2) an action of sending a text (or
SMS) message, (3) a number of Lindsay's cell phone, and (4) a text string of "I love you"
that will be part of the text message. In response to determining that the current time is 5PM,
task manager 112 analyzes the task item to determine the action that needs to be performed.
Task manager 112 then causes a text message that includes the text string associated with the
task item to be sent to Lindsay's cell phone. This step may comprise task manager 112
invoking an API call of a texting application (not shown) executing on device 110, where the
text string ("I love you") is an argument of the API call.
[0108]       As another example, a user of device 110 says aloud, "Show me directions on how
to get to Rachel's Restaurant in San Jose when I leave the office." This voice input is
converted into voice data that device 110 sends over network 120 to NLP service 132. NLP
service 132 analyzes the voice data to determine that a cell phone number of Lindsay is
                                                  -T

  WO 2012/167168                                                           PCT/US2012/040571
necessary and that "5 o'clock" refers to 5PM of the current day. Task manager 112 (or a task
service in cloud 130) creates a task item that includes the following data items: (1) a location
trigger of leaving the user's office and (2) an action of displaying instructions (and,
optionally, a map) on how to arrive at Rachel's Restaurant from the user's office. In response
to determining that the user of device 110 has left his/her office, task manager 112 analyzes
the task item to determine the action that needs to be performed. Task manager 112 then
causes (without further input from the user) a travel directions request to be sent to a travel
directions service. The travel directions request includes the name of the restaurant, any
address information of the restaurant, or both. The travel directions service may be hosted on
device 110 or on another device (not shown).
[0109]       As another example, a user of device 110 says aloud, "Order a cheese only pizza
at Pizza Heaven in San Jose, home delivered, 30 minutes before the Bulls-Pacers game
starts." This voice input is converted into voice data that device 110 sends over network 120
to NLP service 132. NLP service 132 analyzes the voice data to determine that a Bulls
Pacers game starts at 6PM local time; thus, the time trigger is 5:30PM local time. NLP
service 132 also determines that Pizza Heaven in San Jose allows online ordering. Task
manager 112 (or a task service in cloud 130) creates a task item that includes the following
data items: (1) a time trigger of 5:30PM and (2) an action of ordering a cheese only pizza
from Pizza Heaven with home delivery as an option. In response to determining that the
current time is 5:30PM, task manager 112 (or a task service in cloud 13) analyzes the task
item to determine the action that needs to be performed. Task manager 112 then causes a
pizza order request to be sent to Pizza Heaven's online ordering service. The pizza order
request includes the pizza type of cheese only, the delivery option of home delivery, and the
user's home address. The pizza order request may be in the form of an API call to the online
ordering service, where arguments of the API call include indications of cheese only topping,
home delivery, and the user's home address. Alternatively, before causing the pizza order
required to be sent, task manager 112 may formulate a message that is displayed on (or
played by) device 110, where the message informs the user about this task. If the user
provides affirmative input, then task manager 112 causes the pizza request order to be sent.
If the user provides negative input, then no pizza request order is sent.
[0110]       As another example, a user of device 110 says aloud, "Play my classical station on
Pandora at 3PM tomorrow." The time of "3PM tomorrow" coincides with the end of a
scheduled exam for the user. This voice input is converted into voice data that device 110
sends over network 120 to NLP service 132. NLP service 132 analyzes the voice data to
determine a date and time that the intended action is going to be performed. Task manager
 112 (or a task service in cloud 130) creates a task item that includes the following data items:

  WO 2012/167168                                                         PCT/US2012/040571
(1) a time trigger of 3PM with a date that identifies the following day and (2) an action of
playing a classical "station" of the user's Pandora music application, where the classical
station was established by the user and associated with the user's Pandora account. In
response to determining that the current time is 3:00PM on the proper date, task manager 112
(or a task service in cloud 13) analyzes the task item to determine the action that needs to be
performed. Task manager 112 then causes the Pandora music application (not shown) to
begin executing on device 110 and to "play" the user's classical station. Task manager 112
may cause the classical station to play by invoking an API call to the Pandora music
application, where an argument of the API call includes an indication of a classical station.
                             AUTOMATED TASK COMPLETION
[0111]      In an embodiment, task manager 112 (or a task service in cloud 130) "marks" the
task item as complete in response to detecting that a task item is consumed. In other words, a
task item may be associated with a complete or an incomplete status. Task manager 112 may
provide an interface for a user to view task items managed by task manager 112 and
determine whether a task item is complete or not. Task manager 112 may provide an option
for a user of device 110 to view all completed task items. The completed task items may be
ordered based on when the task items were created, consumed (or completed), or some other
criteria.
[0112]      Additionally or alternatively, task items that are consumed are deleted from
storage. For example, task manager 112 deletes, from storage on device 110, any task items
that have been consumed. The deletion of a task item may occur a certain period of time
(e.g., 1 month) after the corresponding task has been completed to allow a user of device 110
to review recently-consumed task items. If a task service in cloud 130 manages task items
that are stored in cloud 130, then that task service may delete consumed task items.
                            DELAYED TASK INTERPRETATION
[0113]      In an embodiment, when a task item is created, only some details of the
corresponding task may be known and stored in association with the task item. Other details
regarding the description, address (if any), trigger, and/or action may be determined later,
whether automatically or via a manual process.
[0114]      For example, device 110 sends, to NLP service 132, voice data that reflects a user
command to "Call Sarah at 5." NLP service 132 determines that 5PM of the current day is a
time trigger and causes task manager 112 (or a task service in cloud 130) to create a task item
with that time trigger. However, an action item associated with the task item is "Call Sarah"
without any indication of a phone number. NLP service 132 has not yet determined who
Sarah is and, thus, what phone number to use to call her. Instead, those details are
determined later; for example, when the current time is 5PM and the action is triggered or
                                                -1)14

  WO 2012/167168                                                           PCT/US2012/040571
sometime before the trigger activates. At 5PM, task manager 112 sends the action item "Call
Sarah" (whether in text form or audio form) to NLP service 132 or another service to identify
information about a particular Sarah (if there are many) and to determine a phone number for
Sarah. When a phone number for Sarah is determined, task manager 112 (or another process)
causes a phone application on device 110 to initiate a call using the phone number. In this
example, the disambiguation of (a) the identity of an individual and (b) a phone number for
that individual is delayed until after the task item is generated.
[0115]       As another example, device 110 sends, to NLP service 132, voice data that reflects
a user command to "Check the weather in San Jose tomorrow morning." NLP service 132
determines that 7AM of the next day is a time trigger and causes task manager 112 (or a task
service in cloud 130) to create a task item with that time trigger. However, an action item
associated with the task item is "Check the weather in San Jose" without any indication of
how to perform the action. NLP service 132 has not yet interpreted that portion of the user
command to determine how the weather in San Jose is to be checked. Instead, those details
are determined later; for example, when the current time is 7AM of the next day and the
action is triggered or sometime before the trigger activates. At 7AM of the next day, task
manager 112 sends the action item "Check the weather in San Jose" (whether in text form or
audio form) to NLP service 132 or another service to identify how the weather in San Jose is
to be checked. In response, NLP service 132 or another service retrieves information about
the weather in San Jose and provides that information to device 110 to be displayed. In this
example, the determination of how the action is to be performed is delayed until after the task
item is generated.
                                     RESPONSE TO ALERT
[0116]       As alluded to previously, for a task item that is associated with an action that is
more than a mere notification, instead of performing the action, a user of device 110 is first
alerted of a task and the user is allowed to respond with an affirmative or negative response.
For example, an action of a task item is to email Jane Smith about Project Knuckles. Task
manager 112 causes, to be displayed on device 110, a message that indicates that the user of
device 110 is suppose to email Jane Smith. The user may press a physical or graphical button
that indicates an affirmative response. Alternatively, the user may speak the command, "Do
it" or "Yes" indicating an affirmative response. In response to the input (whether via a touch
screen of device 110, a keyboard selection, or voice input), task manager 112 causes an email
application on device 110 to compose an email message addressed to Jane Smith with a
subject line that refers to Project Knuckles. Alternatively, the user may decide to be
reminded later of the task to email Jane Smith. Thus, in response to the notification, the user
provides input (via device 110) that indicates that s/he would like to email Jane Smith some

  WO 2012/167168                                                           PCT/US2012/040571
time later, such as in one hour or the next day. Such input may be the user saying "Remind
me later" or simply "later."
[0117]      In an embodiment, when the action is to respond to an act of communication such
as an email message, task manager 112 stores the context of the communication at the time of
task creation and retrieves the context at the time of performing the action. The context of
communication might be, in various embodiments, a Universal Resource Identifier or other
reference to the context or a copy of the data of the context. For example, task manager 112
stores a reference to or copy of the email message that is to be replied to. When the action is
performed, the contents of the email message can be recreated just as if the user had
performed a reply when initially reading it. Other examples of context data that can be stored
and retrieved in this manner include without limitation text messages, documents, web pages,
voicemail messages, photographs, audio recordings, and videos.
[0118]      As another example, an action of a task item is to call George Burt. In response to
determining to trigger the action to call, task manager 112 provides an indication that a
reminder is available for a user of device 110. The indication may be device 110
buzzing/shaking, generating an audible noise, and/or displaying a notification message.
Without holding device 110, the user says aloud, "Read it." In response to task manager 112
(or another process) processing this input, device 110 plays an audible version of the
following statement: "Reminder...call George Burt." The audible version may be based on a
playback of the original input from the user or may reflect a computer-generated voice. If the
user decides to call George Burt, then the user may simply say, "Okay" or "Do it," which
causes a phone application on device 110 to call George Burt. If the user decides not to call
George Burt, then the user may say, "Ignore" or "remind me later."
IV.      ORGANIZING TASK ITEMS USING LISTS
[0119]      According to an embodiment of the invention, a task item may be associated with
one or more lists. A list is a set of one or more task items that are associated with (or belong
to) the same category. Lists are ways that a user of device 110 can view task items in an
organized way. The different lists allow the user to intelligently and intuitively browse the
tasks that s/he would like to perform (or have performed on his/her behalf). FIGs. 6-14
depict views of various types of lists, according to an embodiment of the invention.
[0120]      When a new task item is created, task manager 112 (or a service in cloud 130)
identifies one or more attributes associated with the new task item and assigns the new task
item to one or more lists. For example, if the new task item includes the action "to call," then
task manager 112 (or other process) adds the new task item to a To Call list. Similarly, if the
new task item includes a certain context and a particular location, then task manager 112
might identify the context and/or the particular location and add the new task item to a

  WO 2012/167168                                                              PCT/US2012/040571
location list and/or a context list. Alternatively, a user might manually identify one or more
of the lists, which are described in detail below, to which a new task item is to be added.
                                        ALL LISTS VIEW
[0121]       FIG. 5A depicts an All Lists view 500 that device 110 might display, according to
an embodiment of the invention. All List view 500 does not contain information about any
specific task items. Instead, All Lists view 500 includes references to multiple lists
maintained by task manager 112 (or a task service in cloud 130): a Today list 510, an All To
Do list 520, a Nearby list 530, an In Car list 540, a To Call list 550, a To Email list 560, a
Groceries list 570, a To Buy list 580, and a Completed list 590. As noted previously, a task
item may be associated with (or belong to) multiple lists. For example, a task item whose
description is to buy milk and whose time trigger is today may belong to Today list 510, All
To Do list 520, Groceries list 570, and To Buy list 580.
[0122]       Lists may be characterized as one of three types: built-in or predefined list, smart
list, or custom list. Today list 510, All To Do list 520, and Completed list 590 are examples
of built-in or pre-defined lists.
[0123]        Smart lists are based on different characteristics or attributes that a task item
might have, such as an action (e.g., call, email, text, alert), a location, and/or a context in
which the action is to be performed. Examples of smart lists include By Action lists, By
Location lists, and By Context lists. In Car list 540, To Call list 550, and To Email list 560
are examples of By Action lists. Other examples of By Actions lists might include a To Text
list, a To Lookup list, and a To Visit list.
[0124]       Examples of custom lists include lists that are based on categories identified by
NLP service 132 and lists that are created by a user. Groceries list 570 and To Buy list 580
are examples of custom lists. Another example of a custom list is a wine list (not shown) that
includes a list of the user's favorite wines.
[0125]       Returning to the lists depicted in FIG. 5A, task items that belong to Today list 510
are associated with a triggering criterion that indicates a time during the current day that the
corresponding task must or should be performed. All task items belong to All To Do list 520.
Task items that belong to Nearby list 530 are associated with locations that are considered to
be within a certain distance (e.g., 1 mile) from the current location of device 110. Task items
that belong to In Car list 540 are associated with tasks that are to be performed in a car or
while traveling. Task items that belong to To Call list 550 are associated with the action to
call a person or entity. Task items that belong to To Email list 560 are associated with the
action to email a person or entity. Task items that belong to Groceries list 570 are associated
with grocery items (e.g., milk, eggs, fruit) to purchase. Task items that belong to To Buy list
580 are associated with items to purchase, such as clothing, books, songs, or groceries. Task
                                                 -9)7-

  WO 2012/167168                                                           PCT/US2012/040571
items that belong to Completed list 590 are considered completed, which may indicate that
the corresponding tasks have been performed or at least that an action (e.g., an alert or
notification) associated with each task item has been performed.
[0126]       All Lists view 500 also includes a "+" image that when selected, allows a user of
device 110 to create another custom list so that current and/or future task items can be added
thereto.
[0127]       FIG. 5B depicts some of the lists depicted in FIG. 5A, but with a search field 502
to allow a user of device 110 to search for a specific task item. A task item may be searched
for based on, for example, the task item's associated creation date, completion date (if
known), completion status, context trigger (if any), location (if any), and/or action type (e.g.,
notify only, call, email, or buy).
                                            TODAY LIST
[0128]       FIG. 6 depicts a view 600 of a Today list that device 110 displays, for example, in
response to user selection of Today list 510. View 600 includes a list of tasks that are divided
into two sections: a section 610 for task items that are associated with a specific time and a
section 620 for task items that are not associated with a specific time. Each of the task items
in section 610 is associated with a travel time reminder. The third task item in section 610
and the second through fourth task items in section 620 are associated with actions that are
more than mere reminders or alerts.
[0129]       For example, the third task item in section 610 is to "pick up Chloe" at 5:00 PM.
The icon to the right of that description is an image of a compass, indicating that the action
associated with this task item is to generate travel directions to help guide the user of device
 110 to the intended destination, which is Pinewood School in this example.
[0130]       As another example, the second task item in section 620 is to "call John
Appleseed." The icon to the right of that description is an image of a phone, indicating that
the action associated with this task item is to call John Appleseed. The image adjacent to the
phone image is of a car, indicating that the user of device 110 is to call John Appleseed when
the user is in a car or while the user is traveling.
[0131]       As another example, the last task item in section 620 is to "reply to Pablo Marc."
The icon to the right of that description is an image of an envelope, indicating that the action
associated with this task item is to send an email to Pablo Marc. View 600 also indicates that
this task item is overdue, or rather, that the originally-scheduled time to email Pablo Marc has
passed.
                                   SINGLE TASK ITEM VIEW
[0132]       FIG. 7 depicts a view 700 that device 110 displays and that includes details about
a particular task item. View 700 may have been generated based on a user selection of the

  WO 2012/167168                                                           PCT/US2012/040571
second task item in section 620 in view 600 of FIG. 6. The displayed task item contains four
data items: a description item 710, an action item 720, a reminder item 730, and a list
assignment item 740.
[0133]       Description item 710 contains a high-level description of the task ("Call John
Appleseed") and includes details about the subject matter ("Discuss the almond deal").
Selection of description item 710 may allow a user of device 110 to edit the description.
[0134]       Action item 720 contains a description of the action ("Call") and includes which
phone ("mobile") of John Appleseed to use. Selection of action item 720 may allow the user
of device 110 to view the phone number associated with John Appleseed and/or provide other
contact options, such as another phone number associated with John Appleseed, an email
address of John Appleseed, etc. Furthermore, selection of the phone icon in action item 720
may cause task manager 112 to initiate a call phone to John Appleseed right then instead of
waiting for the one or more triggering criteria associated with the task item to be satisfied.
[0135]       Reminder item 730 indicates the type of trigger ("when in car") that, when
detected, will cause the action to be performed, or at least an alert about the task. Selection
of reminder item 730 may allow a user to change the type of reminder.
[0136]       List assignment item 740 indicates the list to which the task item belongs, which
is the "Nut to Crack Project" list in this example. This list is an example of a customized list.
Selection of list assignment item 740 may cause device 110 to display multiple task items
that belong to the "Nut to Crack Project" list.
                                        ALL TO DO LIST
[0137]       FIG. 8 depicts a view 800 of an All To Do list that device 110 displays and that
includes information about multiple task items. In this example, the multiple task items are
ordered by date. View 800 may have been generated based on a user selection of All To Do
list 820 in view 800 of FIG. 8A. View 800 is divided into two sections: section 810 that
contains task items (or references thereto) to be completed on one day and section 820 that
contains task items to be completed on the following day.
[0138]       Some of the task items referenced in view 800 have been completed. Such
completed task items are shown with a lighter gray image to the left of the corresponding
description. Task items that have been completed may be distinguished from not-yet
completed task items by other techniques, such as check marks.
[0139]       In the example depicted in FIG. 8, the task items are organized by the date on
which the corresponding tasks should be performed (or "due date"). However, the task items
referenced in view 800 may be organized by the date on which a user of device 110 is to be
alerted or reminded of the corresponding tasks ("alert date"), the date on which the task items
                                                -,)a-

   WO 2012/167168                                                          PCT/US2012/040571
were created ("created date"), the date on which the task items were modified ("modified
 date"), or the date on which the corresponding tasks were performed ("completed date").
                                           NEARBY LIST
 [0140]      FIG. 9 depicts a view 900 of a "Nearby" list that device 110 displays. View 900
may have been generated based on a user selection of Nearby list 830 in view 800 of FIG.
 8A. View 900 contains information about multiple locations that are ordered based on
 distance from device 110's current location. The location indicated at the top of the list
 ("Home") is closest to the current location of device 110 while the location indicated at the
bottom of the list ("Pinewood School") is furthest from the current location of device 110.
 [0141]      Each location indicated in view 900 is associated with a different location list.
Each location list may be associated with one or more task items. For example, the "Home"
 location may be associated with four task items (which may be displayed on user selected of
the "Home" location) while the "Atherton Dry Cleaning" location may be associated with
just one task item.
 [0142]      Because the locations indicated in view 900 are ordered based on distance from
the current location of device 110, when the current location of device 110 changes, the
 location indicators may be re-ordered, some may be removed from view 900, and others not
 currently displayed in view 900 may appear in view 900. For example, if device 110 is
 currently located in a store that is next to the Whole Foods store identified by the second
 location indicated in view 900, then, if device 110 displays view 900, that Whole Foods
 location indicator will be at the top of the list.
 [0143]      As indicated above, view 900 includes a "Home" location and a "Work" location.
The association of a location labeled "Home" (or "Work") with a particular address may be
made in numerous ways. For example, many mobile devices store profile information about
 a user of the mobile device. This information is referred to as a "me card." A me card
typically stores a user's home address and the user's work address. Thus, task manager 112
 (or another process) analyzes the me card that is stored on device 110 to determine a home
 address and a work address (if any) of the user.
 [0144]      In an embodiment, a radius is associated with a particular location and any task
items that are associated with a location that is within the distance indicated by the radius is
 considered to be associated with the particular location. For example, a radius associated
with a home of a user of device 110 is 2 miles. If a task item is associated with a park and the
park is within 2 miles from the home, then the task item is associated with a "home" list,
 along with other task items that are associated with the home.

  WO 2012/167168                                                             PCT/US2012/040571
                                     LOCATION LIST VIEW
[0145]       As noted previously, a location list is an example of a smart list. In an
embodiment, any task item that is associated with a location (e.g., as part of the one or more
triggering criteria) is automatically associated with a location list that is associated with the
same location as the location of the task item. Task manager 112 (or a task service in cloud
 130) may maintain multiple location lists.
[0146]       FIG. I0A depicts a Location List view 1000 that device 110 displays. Location
list view 1000 may have been generated based on a user selection the "Home" location
indicator in Nearby view 900 of FIG. 9. Location list view 1000 contains six task items. The
bell image adjacent to each of the first four task items indicates that a reminder (or alert) for
those task items will be generated when device 110 is at or near the user's home or at least
sometime on a specified date. A reminder or alert will not be generated for the last two task
items.
[0147]       Location List view 1000 also includes a map icon 1002 which, when selected,
causes task manager 112 to communicate with a map application that generates a map of the
location associated with the map icon. In this example, a map of the user's home would be
generated.
[0148]       FIG. 1OB depicts a Location List view 1050 that device 110 displays. Location
List view 1050 may have been generated based on a user selection the "Whole Foods"
location indicator in Nearby view 900 of FIG. 9. Location List view 1050 contains six data
items, each of which may or may not be a task item. Instead, each data item in Location List
view 1050 simply identifies a grocery item to purchase at a Whole Foods grocery store.
None of the grocery items are associated with a reminder (although they could be) or a
completion date (although they could be).
[0149]       The grocery items identified in Location List view 1050 was associated with the
Whole Foods grocery list in response to input from a user of device 110. For example, a user
spoke the following command: "Add almond milk to my grocery list" or "Remember to pick
up almond milk at Whole Foods near my house." Device 110 transmits voice data that
reflects this command to NLP service 132. NLP service 132 determines, based on the voice
data, that the user intends to purchase almond milk. NLP service 132 may cause task
manager 112 to (a) create a task item for the task of purchasing almond milk and add the task
item to the Whole Foods list or (b) simply add "almond milk" to the Whole Foods list.
[0150]       Location List view 1050 also includes a map icon 1052 which, when selected,
causes task manager 112 to communicate with a map application that generates a map of the
location associated with the map icon. In this example, a map of the Whole Foods store
identified by the displayed address would be generated.
                                                -11-

  WO 2012/167168                                                           PCT/US2012/040571
                                          SMART LISTS
[0151]       As noted previously, By Location lists, By Action lists, and By Context lists are
examples of smart lists. FIG. 11 A depicts a view 1100 of a By Context list; specifically, an
In Car list. FIG. 11 B and FIG. 1 ID depict views of different By Action lists; specifically, a
To Call list and a To Email list.
[0152]       View 1100 contains task items that are associated with tasks that are to be
performed in a specific context, i.e., the "In Car" context. The task items in the In Car list
may be associated with different actions, such as calling and getting directions.
[0153]       In contrast, view 1110, depicted in FIG. 1 IB, contains task items that are
associated with the same action, which, in this example, is to call a person or entity. The first
three task items in view 1110 have a phone icon, indicating that a phone number for the
person indicated in the corresponding task is known to task manager 112. However, the last
task item in view 1110 is not associated with a phone icon, indicating that a phone number
for "Bob" is not positively known to task manager 112, probably because many contacts in
the user's contact list may have the name of Bob. Selection of the "call Bob" task item in
view 1110 causes device 110 to display a view 1120 depicted in FIG. 1 IC.
[0154]       View 1120 indicates two data items that are contained in (or associated with) the
"call Bob" task item: a description item and an action item. The action item indicates that
multiple contacts are known as "Bob." As a result, the action item includes a call button that
is disabled, whereas the call buttons associated with the other task items in view 1110 are not
disabled. Selection of the action item may initiate a process for disambiguating the identity
of "Bob." For example, selection of the action item may cause task manager 112 to display a
list of names, each of which have the name of Bob or Robert. In this way, the
disambiguation of an identity or of a phone number may occur much later than the creation of
the corresponding task item.
[0155]       View 1130, depicted in FIG. 1 ID, includes six task items, each of which includes
an action to email. The active payload arguments of a To Email task item include a "To" or
email address and, optionally, a subject for the subject line of the email.
[0156]       In an embodiment, an "email" task item is created from an email application that
is separate from task manager 112. The email application may invoke an API call of task
manager 112 to create a task item whose action is to email, where the action includes an
active payload that includes an email address and a subject.
                                         CUSTOM LISTS
[0157]       As noted previously, custom lists are one of the three main types of lists, including
built-in lists and smart lists. Examples of custom lists indicated above include Grocery list
570 and To Buy list 580 (referenced in FIG. 5A). FIG. 12 depicts a view 1200 that might be
                                                 -I)

  WO 2012/167168                                                             PCT/US2012/040571
generated in response to user selection of Grocery list 570. View 1200 includes six data
items, each referring a different grocery item to purchase. Each of these data items may be
task items that only have a description. The data items may have been associated with the
grocery list based on input from NLP service 132. For example, NLP service receives, from
device 110, voice data that reflects the user command to "pick up fresh bread from the store."
NLP service 132 determines that the user of device 110 intends to purchase fresh bread from
a grocery store and associates "fresh bread" with a grocery category. In response, NLP
service 132 sends, to task manager 112, a create task item command to create a task item that
includes the description "fresh bread" and that is associated with the grocery category. In
response, task manager 112 creates a task item and associates the task item with a grocery list
that task manager 112 maintains.
[0158]      FIG. 13 depicts a view 1300 of another type of custom list: a user-defined list.
This user-defined list is entitled, "Nut to Crack Project," and contains three task items, the
first of which is associated with an action (i.e., call) and a context trigger (e.g. "in car" or
"while driving"). A user of device 110 may "manually" associate a task item with a user
defined list. For example, after task manager 112 creates a task item, the user selects the task
item and, via one or more selectable (e.g., menu) options displayed on device 110, selects a
particular user-defined list, which causes task manager 112 to associate the task item with the
particular user-defined list.
[0159]      Alternatively, NLP service 132 may determine, based on input data (whether
voice or text) received from device 110, a specific list to associate with a task item. For
example, voice data may reflect a user command to "I need to write a proposal for the Nut to
Crack Project." NLP service 132 determines that "write a proposal" is the task and that "Nut
to Crack Project" is the name of a list, which task manager 112 may or may not have yet
created. NLP service 132 then sends, to task manager 112, the description ("write proposal")
and the name of a possible list to which the to-be-created task item may be added ("Nut to
Crack Project"). Task manager 112 determines whether there is a list that has the same or
similar name as "Nut to Crack Project." If so, then task manager 112 creates a new task item
and associates the task item with that list. If not, then task manager 112 creates a new list
with that name, creates a new task item, and associates that task item with the new list.
                                      LISTS AND NOTES
[0160]      As noted previously, a list may contain items that are not tasks. Such "non-task"
are referred to as "notes" that consist only of a description. FIG. 14 depicts a view 1400 of a
Favorite Wines list, which contains six notes, each referring to a different wine.
[0161]      Also as noted previously, NLP service 132 may be configured to recognize list
names so that task manager 112 can easily assign tasks and notes to the appropriate list(s).

  WO 2012/167168                                                           PCT/US2012/040571
                                      CALENDAR EVENTS
[0162]      In an embodiment, calendar events created in the context of a calendar application
are used to create task items that are managed by task manager 112. The calendar application
may be part of task manager 112 or may be separately executing applications. For example,
the calendar application might be configured to send newly-created calendar events to task
manager 112, e.g., via one or more API calls that cause task manager 112 to create a task
item based on the details of a calendar event, such as a description, a date, a location (if any),
a duration (if any), and a reminder (if any). Alternatively, task manager 112 might provide a
calendar service that allows a user to view a calendar and create events that are associated
with a specific date and time or set of dates. Upon creation of events, task manager 112 also
creates task items for the events.
[0163]      FIG. 15 depicts a view 1500 of a task item that was generated based on a calendar
event. The task item includes four data items: a description ("lunch with Elizabeth Reid"), a
begin time ("12:00 PM Today"), a duration ("1 hour"), and a reminder ("10 minutes before").
Selection of any of the four data items may allow a user of device 110 to edit the
corresponding data items. In an embodiment, if a change is made to a task item that was
generated based on a calendar event, then that change is "pushed" to the calendar event that is
managed by a calendar application.
[0164]      In either scenario, if a calendar event that is created and maintained by the
calendar service is associated with a location, then a task item that is generated based on the
calendar event might also be associated with the location. In that case, task manager 112
might automatically associate the task item with a location list, such as the location list in
view 1000 of FIG. 10A.
                                         COMBINATIONS
[0165]      While the foregoing description includes four main approaches (generating task
items, organizing task items, triggering notifications, and consuming task items), each of
these approaches may be implemented individually or may be used together, as noted in
many of the examples. For example, natural language processing may be used to generate a
task item, but none of the approaches described herein for processing the task item (i.e.,
organizing the task item, triggering a notification, and consuming the task item) are used. As
another example, natural language processing may be used to generate a task item and an
approach for organizing the task item as described herein may be used, but none of the
approaches for triggering a notification or consuming the task item described herein are used.
As another example, none of the approaches for generating and organizing task items and
triggering a notification is used, but the approach for consuming the task item as described
herein is used.

  WO 2012/167168                                                         PCT/US2012/040571
                                  HARDWARE OVERVIEW
[0166]      According to one embodiment, the techniques described herein are implemented
by one or more special-purpose computing devices. The special-purpose computing devices
may be hard-wired to perform the techniques, or may include digital electronic devices such
as one or more application-specific integrated circuits (ASICs) or field programmable gate
arrays (FPGAs) that are persistently programmed to perform the techniques, or may include
one or more general purpose hardware processors programmed to perform the techniques
pursuant to program instructions in firmware, memory, other storage, or a combination. Such
special-purpose computing devices may also combine custom hard-wired logic, ASICs, or
FPGAs with custom programming to accomplish the techniques. The special-purpose
computing devices may be desktop computer systems, portable computer systems, handheld
devices, networking devices or any other device that incorporates hard-wired and/or program
logic to implement the techniques.
[0167]      For example, FIG. 16 is a block diagram that illustrates a computer system 1600
upon which an embodiment of the invention may be implemented. Computer system 1600
includes a bus 1602 or other communication mechanism for communicating information, and
a hardware processor 1604 coupled with bus 1602 for processing information. Hardware
processor 1604 may be, for example, a general purpose microprocessor.
[0168]       Computer system 1600 also includes a main memory 1606, such as a random
access memory (RAM) or other dynamic storage device, coupled to bus 1602 for storing
information and instructions to be executed by processor 1604. Main memory 1606 also may
be used for storing temporary variables or other intermediate information during execution of
instructions to be executed by processor 1604. Such instructions, when stored in non
transitory storage media accessible to processor 1604, render computer system 1600 into a
special-purpose machine that is customized to perform the operations specified in the
instructions.
[0169]       Computer system 1600 further includes a read only memory (ROM) 1608 or other
static storage device coupled to bus 1602 for storing static information and instructions for
processor 1604. A storage device 1610, such as a magnetic disk or optical disk, is provided
and coupled to bus 1602 for storing information and instructions.
[0170]       Computer system 1600 may be coupled via bus 1602 to a display 1612, such as a
cathode ray tube (CRT), for displaying information to a computer user. An input device
 1614, including alphanumeric and other keys, is coupled to bus 1602 for communicating
information and command selections to processor 1604. Another type of user input device is
cursor control 1616, such as a mouse, a trackball, or cursor direction keys for communicating
direction information and command selections to processor 1604 and for controlling cursor

  WO 2012/167168                                                             PCT/US2012/040571
movement on display 1612. This input device typically has two degrees of freedom in two
axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify
positions in a plane.
[0171]       Computer system 1600 may implement the techniques described herein using
customized hard-wired logic, one or more ASICs or FPGAs, firmware and/or program logic
which in combination with the computer system causes or programs computer system 1600 to
be a special-purpose machine. According to one embodiment, the techniques herein are
performed by computer system 1600 in response to processor 1604 executing one or more
sequences of one or more instructions contained in main memory 1606. Such instructions
may be read into main memory 1606 from another storage medium, such as storage device
 1610. Execution of the sequences of instructions contained in main memory 1606 causes
processor 1604 to perform the process steps described herein. In alternative embodiments,
hard-wired circuitry may be used in place of or in combination with software instructions.
[0172]       The term "storage media" as used herein refers to any non-transitory media that
store data and/or instructions that cause a machine to operation in a specific fashion. Such
storage media may comprise non-volatile media and/or volatile media. Non-volatile media
includes, for example, optical or magnetic disks, such as storage device 1610. Volatile media
includes dynamic memory, such as main memory 1606. Common forms of storage media
include, for example, a floppy disk, a flexible disk, hard disk, solid state drive, magnetic tape,
or any other magnetic data storage medium, a CD-ROM, any other optical data storage
medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a
FLASH-EPROM, NVRAM, any other memory chip or cartridge.
[0173]       Storage media is distinct from but may be used in conjunction with transmission
media. Transmission media participates in transferring information between storage media.
For example, transmission media includes coaxial cables, copper wire and fiber optics,
including the wires that comprise bus 1602. Transmission media can also take the form of
acoustic or light waves, such as those generated during radio-wave and infra-red data
communications.
[0174]       Various forms of media may be involved in carrying one or more sequences of
one or more instructions to processor 1604 for execution. For example, the instructions may
initially be carried on a magnetic disk or solid state drive of a remote computer. The remote
computer can load the instructions into its dynamic memory and send the instructions over a
telephone line using a modem. A modem local to computer system 1600 can receive the data
on the telephone line and use an infra-red transmitter to convert the data to an infra-red
signal. An infra-red detector can receive the data carried in the infra-red signal and
appropriate circuitry can place the data on bus 1602. Bus 1602 carries the data to main

  WO 2012/167168                                                            PCT/US2012/040571
memory 1606, from which processor 1604 retrieves and executes the instructions. The
instructions received by main memory 1606 may optionally be stored on storage device 1610
either before or after execution by processor 1604.
[0175]      Computer system 1600 also includes a communication interface 1618 coupled to
bus 1602. Communication interface 1618 provides a two-way data communication coupling
to a network link 1620 that is connected to a local network 1622. For example,
communication interface 1618 may be an integrated services digital network (ISDN) card,
cable modem, satellite modem, or a modem to provide a data communication connection to a
corresponding type of telephone line. As another example, communication interface 1618
may be a local area network (LAN) card to provide a data communication connection to a
compatible LAN. Wireless links may also be implemented. In any such implementation,
communication interface 1618 sends and receives electrical, electromagnetic or optical
signals that carry digital data streams representing various types of information.
[0176]      Network link 1620 typically provides data communication through one or more
networks to other data devices. For example, network link 1620 may provide a connection
through local network 1622 to a host computer 1624 or to data equipment operated by an
Internet Service Provider (ISP) 1626. ISP 1626 in turn provides data communication services
through the world wide packet data communication network now commonly referred to as
the "Internet" 1628. Local network 1622 and Internet 1628 both use electrical,
electromagnetic or optical signals that carry digital data streams. The signals through the
various networks and the signals on network link 1620 and through communication interface
 1618, which carry the digital data to and from computer system 1600, are example forms of
transmission media.
[0177]      Computer system 1600 can send messages and receive data, including program
code, through the network(s), network link 1620 and communication interface 1618. In the
Internet example, a server 1630 might transmit a requested code for an application program
through Internet 1628, ISP 1626, local network 1622 and communication interface 1618.
[0178]      The received code may be executed by processor 1604 as it is received, and/or
stored in storage device 1610, or other non-volatile storage for later execution.
[0179]      In accordance with some embodiments, Figures 17-24 show functional block
diagrams of electronic devices 1700-2400 in accordance with the principles of the invention
as described above. The functional blocks of the device may be implemented by hardware,
software, or a combination of hardware and software to carry out the principles of the
invention. It is understood by persons of skill in the art that the functional blocks described in
Figures 17-24 may be combined or separated into sub-blocks to implement the principles of

  WO 2012/167168                                                            PCT/US2012/040571
the invention as described above. Therefore, the description herein may support any possible
combination or separation or further definition of the functional blocks described herein.
[0180]       As shown in FIG. 17, the electronic device 1700 includes an input receiving unit
configured for receiving, from a user, input that expressly specifies one or more first
attributes of a task. The electronic device 1700 also includes a processing unit 1702 coupled
to the input receiving unit 1702. In some embodiments, the processing unit 1706 includes a
task item generating unit 1708 and an attribute determining unit 1710.
[0181]       The processing unit 1706 is configured for, based on the input, generating a task
item for the task (e.g., with the task item generating unit 1708); determining, based on
context data that is separate from the input, one or more second attributes of the task (e.g.,
with the attribute determining unit 1710); and causing a plurality of attributes to be stored in
association with the task item, wherein the plurality of attributes includes the one or more
first attributes and the one or more second attributes.
[0182]       As shown in FIG. 18, the electronic device 1800 includes an input receiving unit
configured for receiving input data that is based on input, received at a handheld device, from
a user and that expressly specifies one or more first attributes of a task. The electronic device
 1800 also includes a context data receiving unit 1803 configured for receiving context data
that is separate from the input data and that is based on data that is stored at the handheld
device. The electronic device 1800 also includes a processing unit 1806 coupled to the input
receiving unit 1802 and the context data receiving unit 1803. In some embodiments, the
processing unit 1806 includes a task item generating unit 1808 and an attribute determining
unit 1810.
[0183]       The processing unit 1806 is configured for determining, based on the context data,
one or more second attributes of the task that are not reflected in the input data (e.g., with the
attribute determining unit 1810); and causing a task item to be generated based on the one or
more first attributes and the second one or more attributes (e.g., with the task generating unit
 1808).
[0184]       As shown in FIG. 19, the electronic device 1900 includes a device characteristic
monitoring unit 1902 configured for determining one or more characteristics of a device. The
electronic device 1900 also includes a processing unit 1906 coupled to the device
characteristic monitoring unit 1902. In some embodiments, the processing unit 1906 includes
a triggering unit 1908 and a task action unit 1910.
[0185]       The processing unit 1906 is configured for determining whether any of the one or
more characteristics of the device satisfy one or more triggering criteria associated with a task
item in a plurality of task items (e.g., with the triggering unit 1908), wherein each task item
of the plurality of task items is associated with an action and one or more triggering criteria
                                                -152~-

  WO 2012/167168                                                             PCT/US2012/040571
that must occur before the action is performed; and in response to determining that the one or
more characteristics of the device satisfy one or more triggering criteria of a particular task
item in the plurality of task items, performing an action associated with the particular task
item (e.g., with the task action unit 1910).
[0186]       As shown in FIG. 20, the electronic device 2000 includes a data analyzing unit
2002 configured for analyzing first data that indicates that an event that is remote relative to a
handheld device has occurred. The electronic device 2000 also includes a processing unit
2006 coupled to the data analyzing unit 2002. In some embodiments, the processing unit
2006 includes a triggering unit 2008 and a task action unit 2010.
[0187]       The processing unit 2006 is configured for determining, based on the first data,
whether one or more particular triggering criteria associated with a particular task item in a
plurality of task items are satisfied (e.g., with the triggering unit 2008), wherein each task
item of the plurality of task items is associated with an action and one or more triggering
criteria that indicate when the action is to be performed; determining, based on the first data,
that the one or more particular triggering criteria are satisfied (e.g., with the triggering unit
2008); and in response to determining that the one or more particular triggering criteria are
satisfied, causing an action associated with the particular task item to be performed at the
handheld device (e.g., with the task action unit 2010).
[0188]       As shown in FIG. 21, the electronic device 2100 includes a task item storing unit
2102 configured for storing a plurality of task items that includes a first task item and a
second task item, wherein the first task item of the plurality of task items is associated with a
first action, and wherein the second task item of the plurality of task items is associated with
a second action that is of a different type than the first action. The electronic device 2100
also includes a processing unit 2106 coupled to the task item storing unit 2102. In some
embodiments, the processing unit 2106 includes a task action unit 2108.
[0189]       The processing unit 2106 is configured for causing the plurality of task items to be
stored in the task item storing unit; and after causing the plurality of task items to be stored:
causing the first action associated with the first task item to be performed (e.g., with the task
action unit 2108), and causing the second action associated with the second task item to be
performed (e.g., with the task action unit 2108).
[0190]       As shown in FIG. 22, the electronic device 2200 includes a task item storing unit
2202 configured for storing a plurality of task items, wherein each task item of the plurality
of task items is associated with an action. The electronic device 2200 also includes a
processing unit 2206 coupled to the task item storing unit 2202. In some embodiments, the
processing unit 2206 includes a task manager unit 2208.

  WO 2012/167168                                                               PCT/US2012/040571
[0191]       The processing unit 2206 is configured for causing the plurality of task items to be
stored in the task item storing unit; and causing, by a task manager, an application that is
separate from the task manager to perform the action associated with the particular task item
(e.g., with the task manager unit 2208).
[0192]       As shown in FIG. 23, the electronic device 2300 includes a task item storing unit
2302 configured for storing a plurality of task items that are organized in a plurality of lists.
The electronic device 2300 also includes an input receiving unit 2303 configured for
receiving input that indicates information about a new task. The electronic device 2300 also
includes a processing unit 2306 coupled to the task item storing unit 2302 and the input
receiving unit 2303. In some embodiments, the processing unit 2306 includes a task item
generating unit 2308 and a task list unit 2310.
[0193]       The processing unit 2306 is configured for, in response to receiving the input,
generating a task item for the new task (e.g., with the task item generating unit 2308);
determining which list of the plurality of lists to add the task item, wherein the input does not
specify any list of the plurality of lists (e.g., with the task list unit 2310); and, in response to
determining to add the task item to a particular list of the plurality of lists, storing data that
associates the task item with the particular list (e.g., in the task item storing unit 2302).
[0194]       As shown in FIG. 24, the electronic device 2400 includes a task item storing unit
2402 configured for storing a plurality of task items, wherein each task item is associated
with at least one list of a plurality of lists. The electronic device 2400 also includes an input
receiving unit 2403 configured for receiving input that indicates information about a new
task. The electronic device 2400 also includes a processing unit 2406 coupled to the task
item storing unit 2402 and the input receiving unit 2403. In some embodiments, the
processing unit 2406 includes a task item generating unit 2408 and a task list unit 2410.
[0195]       The processing unit 2406 is configured for, after the input is received, generating
a task item for the new task based on the information (e.g., with the task item generating unit
2408); determining to add the task item to a particular list of the plurality of lists, wherein the
input does not specify the particular list (e.g., with the task list unit 2410); and in response to
determining to add the task item to the particular list, storing data that associates the task item
with the particular list (e.g., in the task item storing unit 2402).
[0196]       In the foregoing specification, embodiments of the invention have been described
with reference to numerous specific details that may vary from implementation to
implementation. The specification and drawings are, accordingly, to be regarded in an
illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the
invention, and what is intended by the applicants to be the scope of the invention, is the literal

  WO 2012/167168                                                          PCT/US2012/040571
and equivalent scope of the set of claims that issue from this application, in the specific form
in which such claims issue, including any subsequent correction.
                                              .A1.

CLAIMS
1.       A method comprising:
         at one or more computing devices comprising one or more processors and memory
storing one or more programs for execution by the one or more processors:
                  storing a plurality of task items that are organized in a plurality of lists, each of
         the plurality of lists having a respective list identifier;
                  receiving user input that indicates information about a new task;
                  in response to receiving the user input, generating a task item for the new task;
                  determining which list of the plurality of lists to add the task item;
                  in response to determining to add the task item to a particular list of the plurality
         of lists, storing data that associates the task item with the particular list;
                  determining a current context associated with a computing device of the one or
         more computing devices; and
                  ordering the respective list identifiers of at least some of the plurality of lists to be
         concurrently presented on the computing device based on the current context associated
         with the computing device.
2.       The method of claim 1, wherein the user input does not specify any list of the plurality of
lists.
3.       The method of claim 1, further comprising:
         storing location data associated with each task item of the plurality of task items, wherein
first subset of task items from the plurality of task items are associated with a first location and a
second subset of task items from the plurality of task items are associated with a second location
that is different from the first location; and
         storing list association data that associates the first subset of task items with a first list of
the plurality of lists and that associates the second subset of task items with a second list, of the
plurality of lists, that is different from the first list.
4.       The method of claim 3, further comprising:
         determining a current location of the user device, wherein ordering the respective list
identifiers of the at least some of the plurality of lists to be concurrently presented on the user
device comprises causing the respective list identifiers of the first and second lists to be
                                                    - 42 -

concurrently displayed in an order that is based on the current location of the user device relative
to the first location and the current location of the user device relative to the second location.
5.       The method of claim 1, further comprising:
         storing action data associated with each task item of the plurality of task items, wherein a
first subset of task items from the plurality of task items are associated with a first action and a
second subset of task items from the plurality of task items are associated with a second action
that is different from the first action; and
         storing list association data that associates the first subset of task items with a first list of
the plurality of lists and that associates the second subset of task items with a second list of the
plurality of lists, that is different from the first list.
6.       The method of claim 5, wherein the first action is one of calling, purchasing, performing
a search, emailing, or texting.
7.       The method of claim 1, further comprising:
         storing trigger data associated with each task item of the plurality of task items, wherein
trigger data indicates one or more criteria that indicate when an action associated with said each
task item is to be performed, wherein a first subset of task items from the plurality of task items
are associated with a first type of trigger data and a second subset of task items from the plurality
of task items are associated with a second type of trigger data that is different from the first type
of trigger data; and
         storing list association data that associates the first subset of task items with a first list of
the plurality of lists and that associates the second subset of task items with a second list of the
plurality of lists, that is different from the first list.
8.       The method of claim 7, wherein first type of trigger data is one of a particular location of
the user device or a particular activity in which a user of the user device is engaged using the
user device.
9.       The method of claim 1, further comprising:
                                                    - 43   -

         determining a second list, of the plurality of lists, that is different than the particular list
to which to add the task item, wherein storing data that associates the task item with the second
list comprises storing second data that associates the task item with the second list.
10.      The method of claim 1, wherein the received user input is in natural language form, the
method further comprising:
         analyzing the user input using natural language processing to identify an attribute of the
new task; and
         in response to determining to add the task item to a particular list of the plurality of lists,
automatically assigning the task item to the particular list of the plurality of lists based on the
identified attribute of the new task.
11.      The method of claim 1, further comprising:
         concurrently displaying at least two list identifiers each associated with a respective list
selected from a group consisting of: (1) a list of task items associated with a particular time
period, (2) a list of task items associated with a particular type of transit mode, (3) a list of task
groups, each task group containing tasks items associated with a respective common location,
and (4) a list of task items associated with a particular type of action, comprising at least one of
(i) a call action, (ii) an email action, and (iii) a purchase action, wherein the at least two list
identifiers are concurrently displayed without displaying information about any task item
associated with the at least two list identifiers.
12.      The method of claim 1, further comprising:
         concurrently displaying a first list identifier associated with a list of task items associated
with a particular type of transit mode, and a second list identifier associated with a list of task
groups, each task group containing task items associated with a respective common location,
wherein the first list identifier and the second list identifier are concurrently displayed without
displaying any task item associated with the first list identifier or the second list identifier.
13.      The method of claim 1, further comprising:
         concurrently displaying a first list identifier associated with a list of task items associated
with a particular type of transit mode, and a second list identifier associated with a list of task
items associated with a particular type of action, comprising at least one of (i) a call action, (ii)
                                                    - 44 -

an email action, and (iii) a purchase action, wherein the first list identifier and the second list
identifier are concurrently displayed without displaying information about any task item
associated with the first list identifier or the second list identifier.
14.     A system comprising:
        one or more processors;
        a memory; and
        one or more programs wherein the one or more programs are stored in the memory and
configured to be executed by the one or more processors, the one or more programs including
instructions for performing the methods of any one of claims 1-13.
15.     A non-transitory computer-readable medium having instructions stored thereon, the
instructions, when executed by one or more processors, cause the processors to perform the
methods of any one of claims 1-13.
                                                   - 45 -

<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
<removed-apn> <removed-date>
